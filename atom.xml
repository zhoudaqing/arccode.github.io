<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Arccode's blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://arccode.net/"/>
  <updated>2015-07-05T05:39:13.816Z</updated>
  <id>http://arccode.net/</id>
  
  <author>
    <name><![CDATA[arccode]]></name>
    <email><![CDATA[arccode@163.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[ngrok暴露本地Web应用映射到外网]]></title>
    <link href="http://arccode.net/2015/07/05/ngrok%E6%9A%B4%E9%9C%B2%E6%9C%AC%E5%9C%B0Web%E5%BA%94%E7%94%A8%E6%98%A0%E5%B0%84%E5%88%B0%E5%A4%96%E7%BD%91/"/>
    <id>http://arccode.net/2015/07/05/ngrok暴露本地Web应用映射到外网/</id>
    <published>2015-07-05T04:55:41.000Z</published>
    <updated>2015-07-05T05:37:11.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>开发第三方支付, 需要接收第三方回调(即在外网上暴露api), 发现<a href="https://ngrok.com/" target="_blank" rel="external">ngrok</a>可以完成该业务, 下面具体介绍其使用.</p>
<a id="more"></a>

<h2 id="下载并运行">下载并运行</h2>
<h3 id="下载">下载</h3>
<ul>
<li>下载地址: <a href="https://ngrok.com/download" target="_blank" rel="external">https://ngrok.com/download</a></li>
</ul>
<h3 id="解压">解压</h3>
<ul>
<li>unzip ngrok_2.0.19_darwin_amd64.zip -d /path/to/ngrok</li>
</ul>
<h3 id="运行">运行</h3>
<ul>
<li>cd /path/to/ngrok</li>
<li>ngrok -h</li>
</ul>
<h2 id="映射本地端口">映射本地端口</h2>
<ul>
<li>ngrok http 8080(映射本地8080端口到外网)</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="input"><span class="prompt"></span></span></div><div class="line">ngrok by @inconshreveable                                       (Ctrl+C to quit)</div><div class="line">                                                                                </div><div class="line">Tunnel Status                 online                                            </div><div class="line">Version                       2.0.19/2.0.19                                     </div><div class="line">Web Interface                 http://127.0.0.1:4040                             </div><div class="line">Forwarding                    http://430ca81c.ngrok.io -&gt; <span class="symbol">localhost:</span><span class="number">8080</span>        </div><div class="line"><span class="input"><span class="prompt">Forwarding                    https://430ca81c.ngrok.io -&gt;</span> <span class="symbol">localhost:</span><span class="number">8080</span>       </span></div><div class="line">                                                                                </div><div class="line"><span class="constant">Connections</span>                   ttl     opn     rt1     rt5     p5<span class="number">0</span>     p9<span class="number">0</span>       </div><div class="line">                              <span class="number">0</span>       <span class="number">0</span>       <span class="number">0</span>.<span class="number">00</span>    <span class="number">0</span>.<span class="number">00</span>    <span class="number">0</span>.<span class="number">00</span>    <span class="number">0</span>.<span class="number">00</span></div></pre></td></tr></table></figure>

<p>可以通过<code>http://127.0.0.1:4040</code>登录控制台查看配置等参数.</p>
<h2 id="付费功能">付费功能</h2>
<p>ngrok自动映射的<code>subDomain</code>是随机的, 关闭重启将改变, 可升级为付费用户自定义<code>subDomain</code>, 详情见<a href="https://ngrok.com/product" target="_blank" rel="external">高级特性</a>.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>开发第三方支付, 需要接收第三方回调(即在外网上暴露api), 发现<a href="https://ngrok.com/" target="_blank" rel="external">ngrok</a>可以完成该业务, 下面具体介绍其使用.</p>
]]>
    
    </summary>
    
      <category term="代理" scheme="http://arccode.net/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="Ngrok" scheme="http://arccode.net/tags/Ngrok/"/>
    
      <category term="代理" scheme="http://arccode.net/categories/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SOA服务总线设计]]></title>
    <link href="http://arccode.net/2015/07/03/SOA%E6%9C%8D%E5%8A%A1%E6%80%BB%E7%BA%BF%E8%AE%BE%E8%AE%A1/"/>
    <id>http://arccode.net/2015/07/03/SOA服务总线设计/</id>
    <published>2015-07-03T15:51:46.000Z</published>
    <updated>2015-07-03T16:06:22.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>基于总线的设计,借鉴了计算机内部硬件组成的设计思想（通过总线传输数据）.在分布式系统中,不同子系统之间需要实现相互通信和远程调用,比较直接的方式就是“点对点”的通信方式,但是这样会暴露出一些很明显的问题：系统之间紧密耦合、配置和引用混乱、服务调用关系错综复杂、难以统一管理、异构系统之间存在不兼容等.而基于总线的设计,正是为了解决上述问题.总线则作为中枢系统,提供统一的服务入口,并实现了服务统一管理、服务路由、协议转换、数据格式转换等功能.这样能够将不同系统有效地连接起来,并大大降低了连接数（每个子系统只需要和总线建立连接）和系统间连接拓扑的复杂度.<br><a id="more"></a><br>如图所示：</p>
<p><img src="/images/arc/SOA_ARC.jpg" alt=""></p>
<p>基于服务总线的设计,往往需要ESB（Enterprise Service Bus,企业服务总线）产品来充当基础设施.ESB采用了“总线”这样一种模式来管理和简化应用之间的集成拓扑结构,以广为接受的开放标准为基础来支持应用之间在消息、事件和服务的级别上动态的互连互通. ESB是一种在松散耦合的服务和应用之间标准的集成方式.</p>
<p>在其内部设计和实现中,通常会应用到一些经典的架构模式,例如：Broker模式、消息总线模式、管道过滤器模式、发布订阅模式等.这里,我们将重点介绍这几种核心的架构模式.</p>
<h3 id="Broker模式">Broker模式</h3>
<p>Broker可以看作是服务总线中的一部分,通常应用于同步调用的场景（调用服务后阻塞,等待远程服务响应完成后再返回结果）.Broker可以看作是代理、分发,意味着对服务的调用,可以直接通过Broker来完成.在软件架构设计中,向已经存在（引用或者调用）关系的两者中间加入“第三者”是一种常见的解耦方式,显然,Broker也不例外.</p>
<p>如下图所示：</p>
<p><img src="/images/arc/SOA_Broker.jpg" alt=""></p>
<p>为了进一步加深读者对Broker模式的理解,这里通过举例来说明：</p>
<p>在现实生活中,我们需要租房子（可以看作是一种服务调用）,可以通过几种途径来完成.第一,我们可以先在网上了解,然后跑到目标小区去询问和看房,最后再找房东签合同等；第二,也可以直接找附近的地产中介,说出我们的要求和预算,请中介直接帮我们搞定一切.很明显,第一种方式,需要自己对目标有足够的了解而且还要亲自去找房东签合同（依赖具体,可以看作是紧密耦合）,而第二种方式,仅仅需要告知中介需要什么即可完成租房,甚至都不需要知道哪个小区有房子、房东到底是谁等这些信息（依赖抽象,并通过第三者来实现解耦）.当然,找中介虽然省事,也会产生额外的经济开销.同理,通过Broker来调用服务也可能会产生一定的开销.</p>
<h3 id="消息总线模式">消息总线模式</h3>
<p>SOA系统有三种基础组件：消息总线、信息转换/处理引擎和存储库.一般来说,这些组件会集成到ESB中,而在这些基础组件中,消息总线是最重要的.消息总线主要应用于异步通信场景（投递消息后立刻返回结果,而不用等待远程系统返回执行成功）,可以大大提升响应速度和系统吞吐量.当然,消息总线也同时支持同步通信模式.基于消息总线模式的设计中,消息中间件屏蔽了系统间底层通信的细节,是比较典型的（异步）松耦合的架构.</p>
<p>在企业中,随着业务的逐渐发展,各大系统之间的调用交互变得非常频繁,关系错综复杂.</p>
<p>想象如果有几十或者上百个系统（在保险、金融领域很常见）,将变得难以维护.通过引入消息中间件,便能有效的解决这些问题.不同系统之间,只需要连接到消息总线,能保证成功投递/接收消息即可.对于消息投递者（生产者）而言,根本不用关心消息的接收者（消费者）到底有哪些,也不用关心消费者接收到消息之后该如何处理.对于接收者（消费者）而言,只需要关注与自己有关的消息,接收到消息后并做出相应的处理即可.</p>
<p>如下图所示：</p>
<p><img src="/images/arc/SOA_Message_Bus.jpg" alt=""></p>
<p>比较典型的应用场景：张三在CRM系统中录入了一条客户签约订单的信息并审核通过后,CRM系统会向消息总线投递一条消息（消息中包含必要信息,例如员工ID,订单编号,产品编号和交易金额等,而CRM系统不用关心有哪些系统会接受到该消息）.员工绩效奖金管理系统订阅了该消息主题,收到消息通知后开始处理（给张三执行加奖金操作）,同时,进销存系统收到消息通知后也会即时地更新商品库存的数量.这样,便实现异构系统之间的松耦合、异步通信.当然,真实场景可能比这里更复杂,但是实现思路上都大同小异.</p>
<p>在理解了上述实例之后,有必要了解下Java EE中被广泛应用和实现的JMS（Java消息服务）.</p>
<p>JMS是一种关于消息的规范,业界流行的ActiveMQ则是实现了JMS规范的开源消息总线.</p>
<p>JMS支持两种模式：发布/订阅模式和队列模式（点对点模式）.其中,发布/订阅模式借鉴了现实生活中的出版社（发布图书）和读者（订阅图书）,消息的消费者（读者）只需要订阅自己感兴趣的消息（图书）即可,消息生产者（出版社）生产（出版）了消费者（读者）感兴趣的新消息（新书）后,会通知消费者（读者）接受处理.在JMS发布/订阅模式中,通常以Topic（主题）来标识消息,是一对多的模式,意味着同一个主题可以同时被多个消费者来订阅和消费.而在JMS 队列模型中,通常以Queue name来标识消息,是一对一的模型,意味着同一条消息只能被一个消费者接收并消费（且只能被消费一次）.在生产者和消费者都是集群的环境中,通常需要将这两种模式结合起来使用,情况会复杂很多,而且需要考虑容错性、负载均衡、消息一致性、消息优先级等复杂的问题.</p>
<p>业界主流的消息总线（消息中间件）产品,普遍支持消息过滤、自动重试、分布式事务、持久化、消息优先级、消息回溯、（生产者/消费者/中间件自身）集群、故障转移等高级特性.</p>
<h2 id="总结">总结</h2>
<p>基于总线架构的主要优势在于：</p>
<blockquote>
<p>可扩展性</p>
</blockquote>
<p>使用消息架构,可以在不影响现有应用的情况下增加或移除应用.</p>
<blockquote>
<p>低复杂度</p>
</blockquote>
<p>每个应用只需要和总线通信,只有1个连接点,降低了应用程序集成的复杂度.</p>
<blockquote>
<p>灵活性</p>
</blockquote>
<p>对于构成复杂处理的应用程序通信组来说,只需要改变配置和控制路由参数就能满足业务逻辑或者需求变更,而不需要更改服务本身.</p>
<blockquote>
<p>松耦合</p>
</blockquote>
<p>应用程序直接和消息总线通信,不依赖其它应用程序,因此可以替换和修改.</p>
<blockquote>
<p>可扩展性</p>
</blockquote>
<p>可以把多个应用程序附加到总线上,进行并发处理,达到负载均衡的目的.</p>
<p>基于总线的模型,可以面向同构和异构系统（跨平台）.当前主要应用于传统企业应用的整合与系统集成中（例如：电信、保险、金融等行业）.由于基于总线的模型是一种集中式的架构,总线自身容易形成性能瓶颈,但可以通过横向扩展, 然后在其上层增加LVS进行负载均衡, 实现高并发,高可用.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>基于总线的设计,借鉴了计算机内部硬件组成的设计思想（通过总线传输数据）.在分布式系统中,不同子系统之间需要实现相互通信和远程调用,比较直接的方式就是“点对点”的通信方式,但是这样会暴露出一些很明显的问题：系统之间紧密耦合、配置和引用混乱、服务调用关系错综复杂、难以统一管理、异构系统之间存在不兼容等.而基于总线的设计,正是为了解决上述问题.总线则作为中枢系统,提供统一的服务入口,并实现了服务统一管理、服务路由、协议转换、数据格式转换等功能.这样能够将不同系统有效地连接起来,并大大降低了连接数（每个子系统只需要和总线建立连接）和系统间连接拓扑的复杂度.<br>]]>
    
    </summary>
    
      <category term="SOA" scheme="http://arccode.net/tags/SOA/"/>
    
      <category term="分布式" scheme="http://arccode.net/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="架构" scheme="http://arccode.net/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CAP原理和最终一致性]]></title>
    <link href="http://arccode.net/2015/07/03/CAP%E5%8E%9F%E7%90%86%E5%92%8C%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7/"/>
    <id>http://arccode.net/2015/07/03/CAP原理和最终一致性/</id>
    <published>2015-07-03T14:33:44.000Z</published>
    <updated>2015-07-03T14:46:28.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>在足球比赛里,一个球员在一场比赛中进三个球,称之为帽子戏法(Hat-trick).在分布式数据系统中,也有一个帽子原理(CAP Theorem),不过此帽子非彼帽子.CAP原理中,有三个要素：</p>
<ul>
<li>一致性(Consistency)</li>
<li>可用性(Availability)</li>
<li>分区容忍性(Partition tolerance)</li>
</ul>
<p>CAP原理指的是,这三个要素最多只能同时实现两点,不可能三者兼顾.因此在进行分布式架构设计时,必须做出取舍.而对于分布式数据系统,分区容忍性是基本要求,否则就失去了价值.因此设计分布式数据系统,就是在一致性和可用性之间取一个平衡.对于大多数web应用,其实并不需要强一致性,因此牺牲一致性而换取高可用性,是目前多数分布式数据库产品的方向.</p>
<p>当然,牺牲一致性,并不是完全不管数据的一致性,否则数据是混乱的,那么系统可用性再高分布式再好也没有了价值.牺牲一致性,只是不再要求关系型数据库中的强一致性,而是只要系统能达到最终一致性即可,考虑到客户体验,这个最终一致的时间窗口,要尽可能的对用户透明,也就是需要保障“用户感知到的一致性”.通常是通过数据的多份异步复制来实现系统的高可用和数据的最终一致性的,“用户感知到的一致性”的时间窗口则取决于数据复制到一致状态的时间.</p>
<a id="more"></a>

<h2 id="最终一致性(eventually_consistent)">最终一致性(eventually consistent)</h2>
<p>对于一致性,可以分为从客户端和服务端两个不同的视角.从客户端来看,一致性主要指的是多并发访问时更新过的数据如何获取的问题.从服务端来看,则是更新如何复制分布到整个系统,以保证数据最终一致.一致性是因为有并发读写才有的问题,因此在理解一致性的问题时,一定要注意结合考虑并发读写的场景.</p>
<p>从客户端角度,多进程并发访问时,更新过的数据在不同进程如何获取的不同策略,决定了不同的一致性.对于关系型数据库,要求更新过的数据能被后续的访问都能看到,这是强一致性.如果能容忍后续的部分或者全部访问不到,则是弱一致性.如果经过一段时间后要求能访问到更新后的数据,则是最终一致性.</p>
<p>最终一致性根据更新数据后各进程访问到数据的时间和方式的不同,又可以区分为：</p>
<blockquote>
<p><strong>因果一致性</strong>.如果进程A通知进程B它已更新了一个数据项,那么进程B的后续访问将返回更新后的值,且一次写入将保证取代前一次写入.与进程A无因果关系的进程C的访问遵守一般的最终一致性规则.</p>
<p><strong>“读己之所写(read-your-writes)”一致性</strong>.当进程A自己更新一个数据项之后,它总是访问到更新过的值,绝不会看到旧值.这是因果一致性模型的一个特例.</p>
<p><strong>会话(Session)一致性</strong>.这是上一个模型的实用版本,它把访问存储系统的进程放到会话的上下文中.只要会话还存在,系统就保证“读己之所写”一致性.如果由于某些失败情形令会话终止,就要建立新的会话,而且系统的保证不会延续到新的会话.</p>
<p><strong>单调(Monotonic)读一致性</strong>.如果进程已经看到过数据对象的某个值,那么任何后续访问都不会返回在那个值之前的值.</p>
<p><strong>单调写一致性</strong>.系统保证来自同一个进程的写操作顺序执行.要是系统不能保证这种程度的一致性,就非常难以编程了.</p>
</blockquote>
<p>上述最终一致性的不同方式可以进行组合,例如单调读一致性和读己之所写一致性就可以组合实现.并且从实践的角度来看,这两者的组合,读取自己更新的数据,和一旦读取到最新的版本不会再读取旧版本,对于此架构上的程序开发来说,会少很多额外的烦恼.</p>
<p>从服务端角度,如何尽快将更新后的数据分布到整个系统,降低达到最终一致性的时间窗口,是提高系统的可用度和用户体验非常重要的方面.对于分布式数据系统：</p>
<ul>
<li>N — 数据复制的份</li>
<li>W — 更新数据时需要保证写完成的节点数</li>
<li>R — 读取数据的时候需要读取的节点数</li>
</ul>
<p>如果W+R&gt;N,写的节点和读的节点重叠,则是强一致性.例如对于典型的一主一备同步复制的关系型数据库,N=2,W=2,R=1,则不管读的是主库还是备库的数据,都是一致的.</p>
<p>如果W+R&lt;=N,则是弱一致性.例如对于一主一备异步复制的关系型数据库,N=2,W=1,R=1,则如果读的是备库,就可能无法读取主库已经更新过的数据,所以是弱一致性.</p>
<p>对于分布式系统,为了保证高可用性,一般设置N&gt;=3.不同的N,W,R组合,是在可用性和一致性之间取一个平衡,以适应不同的应用场景.</p>
<p>如果N=W,R=1,任何一个写节点失效,都会导致写失败,因此可用性会降低,但是由于数据分布的N个节点是同步写入的,因此可以保证强一致性.*   如果N=R,W=1,只需要一个节点写入成功即可,写性能和可用性都比较高.但是读取其他节点的进程可能不能获取更新后的数据,因此是弱一致性.这种情况下,如果W&lt;(N+1)/2,并且写入的节点不重叠的话,则会存在写冲突 </p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>在足球比赛里,一个球员在一场比赛中进三个球,称之为帽子戏法(Hat-trick).在分布式数据系统中,也有一个帽子原理(CAP Theorem),不过此帽子非彼帽子.CAP原理中,有三个要素：</p>
<ul>
<li>一致性(Consistency)</li>
<li>可用性(Availability)</li>
<li>分区容忍性(Partition tolerance)</li>
</ul>
<p>CAP原理指的是,这三个要素最多只能同时实现两点,不可能三者兼顾.因此在进行分布式架构设计时,必须做出取舍.而对于分布式数据系统,分区容忍性是基本要求,否则就失去了价值.因此设计分布式数据系统,就是在一致性和可用性之间取一个平衡.对于大多数web应用,其实并不需要强一致性,因此牺牲一致性而换取高可用性,是目前多数分布式数据库产品的方向.</p>
<p>当然,牺牲一致性,并不是完全不管数据的一致性,否则数据是混乱的,那么系统可用性再高分布式再好也没有了价值.牺牲一致性,只是不再要求关系型数据库中的强一致性,而是只要系统能达到最终一致性即可,考虑到客户体验,这个最终一致的时间窗口,要尽可能的对用户透明,也就是需要保障“用户感知到的一致性”.通常是通过数据的多份异步复制来实现系统的高可用和数据的最终一致性的,“用户感知到的一致性”的时间窗口则取决于数据复制到一致状态的时间.</p>
]]>
    
    </summary>
    
      <category term="SOA" scheme="http://arccode.net/tags/SOA/"/>
    
      <category term="分布式" scheme="http://arccode.net/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="架构" scheme="http://arccode.net/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SOA初探]]></title>
    <link href="http://arccode.net/2015/07/03/SOA%E5%88%9D%E6%8E%A2/"/>
    <id>http://arccode.net/2015/07/03/SOA初探/</id>
    <published>2015-07-03T14:23:05.000Z</published>
    <updated>2015-07-03T15:53:02.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>曾今SOA的概念犹如今日“云计算、大数据”一样,被炒得火热,不少企业便纷纷响应,并宣称会拥抱和实施SOA.而事实上,业界出现了两种极端：一种是由于各类文章和书籍关于SOA的描述往往太过抽象,再加上各大厂商的呼吁,使得SOA往往显得“高大上”,令不少企业和架构师们望而却步.第二种恰好相反,有部分人却认为SOA无非是“新瓶装旧酒”.</p>
<p>个人理解,SOA在宏观上确实太复杂,因为它涉及到的不仅仅是技术和架构本身.而从技术的视角来看,并非难以落地.</p>
<p>SOA全称“面向服务架构”,它提供的是一种架构风格和理念,而并非是一种技术或者产品.并不是说项目中用了WebService、WCF、Hessian、RMI之类的就是SOA了.</p>
<p>通俗点来讲,SOA提倡将不同应用程序的业务功能封装成“服务”并宿主起来,通常以接口和契约的形式暴露并提供给外界应用访问（通过交换消息）,达到不同系统可重用的目的.</p>
<p>流行的WebService等可以看作是实现SOA基础设施的技术方法.当然,实践SOA不仅需要解决服务调用的问题,还包括服务编排、服务治理、服务路由、服务监控等一系列的问题.在大型分布式系统中,SOA被广泛实践,但是在不同的应用场景中,设计方法也大不相同.</p>
<p>SOA是一个组件模型,它能将不同的服务通过定义良好的接口和契约联系起来.服务是SOA的基石,在开始服务设计和SOA实践之前,有必要先了解服务的概念以及服务的常见特性.</p>
<a id="more"></a>

<h2 id="何为服务">何为服务</h2>
<p>服务的概念非常宽泛,在宏观上,服务的理解是“为他人做事,满足他人需要,而且通常是不以实物形式提供劳动的…”.在SOA系统中,服务指的是应用程序的功能单元,它通常体现了业务功能.服务是一种抽象,它向服务使用者隐藏了服务内部的实现细节.根据服务设计的基本原则,服务可能会具有以下特性：</p>
<blockquote>
<p>自治（理）性 </p>
</blockquote>
<p>服务应该是独立部署和运行存在的,且边界清晰,应尽量减少对外部的引用和依赖.</p>
<blockquote>
<p>粗粒度</p>
</blockquote>
<p>服务调用是需要开销的,这也是实现松耦合的分布式系统必须付出的代价.因此,应尽量通过一次服务调用传输所有需要的数据,而不是分多次去调用服务和组装数据.</p>
<blockquote>
<p>可见性</p>
</blockquote>
<p>服务是对外提供的,必须在某公共的地方可搜寻和发现,且服务要有必要的描述.</p>
<blockquote>
<p>无状态</p>
</blockquote>
<p>服务不应该依赖于其他服务的上下文、会话等,尽量减少不必要的状态管理流程所带来的资源消耗.但是,对于业务流程服务而言,状态数据是不可避免的.</p>
<blockquote>
<p>幂等性</p>
</blockquote>
<p>当消费者调用服务后,服务调用可能会有“成功、失败、超时”这三种状态,当服务并没有最终响应完成时,消费者可以尝试反复地调用服务,这样仍不会影响到最终结果.</p>
<blockquote>
<p>可重用性</p>
</blockquote>
<p>服务应该是可以被重用的,相同功能应可以调用相同的服务,这也是软件设计的原则.</p>
<blockquote>
<p>可组合</p>
</blockquote>
<p>服务是可以被当作成一个步骤的,服务也可以调用其它的服务.这样能够灵活的组合.</p>
<p>有关服务的“粗粒度、无状态、幂等性”等特性,一直是饱受争议的话题,可谓见仁见智.这里有必要说明下,这些特性并不是服务不可或缺的,应当在实践中根据需求来取舍.</p>
<h2 id="SOA所面临的问题及解决方案">SOA所面临的问题及解决方案</h2>
<p>SOA架构将公共的业务拆分出来,形成可共用的服务,最大程度的保障了代码和逻辑的复用,避免了系统的重复建设,并且让应用程序的部署找到了一种持续可扩展的方案,给应用抗负载能力带来了质的飞跃.</p>
<h3 id="一致性问题">一致性问题</h3>
<p>SOA架构所面临的一大问题就是如何解决集成服务应用普遍存在的一致性问题,举例来说,同时调用多个服务,当其中一个服务调用失败时,其他服务已经处理执行的结果该如何进行回滚,这在单机本地调用的情况下使用事务比较好处理,而分布式环境下的事务将问题复杂化,并且性能开销难以承受,因此,只有在极端情况下才会考虑强一致性,一般情况下更多的关注最终一致性.</p>
<h3 id="安全问题">安全问题</h3>
<p>面向企业的平台级的SOA架构,需要对参数传递、响应内容以及各种用户私有信息的交互,有着更严格的且特殊的安全需求,如何构建一个安全的SOA架构体系,也给技术人员带来了很大的挑战.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>曾今SOA的概念犹如今日“云计算、大数据”一样,被炒得火热,不少企业便纷纷响应,并宣称会拥抱和实施SOA.而事实上,业界出现了两种极端：一种是由于各类文章和书籍关于SOA的描述往往太过抽象,再加上各大厂商的呼吁,使得SOA往往显得“高大上”,令不少企业和架构师们望而却步.第二种恰好相反,有部分人却认为SOA无非是“新瓶装旧酒”.</p>
<p>个人理解,SOA在宏观上确实太复杂,因为它涉及到的不仅仅是技术和架构本身.而从技术的视角来看,并非难以落地.</p>
<p>SOA全称“面向服务架构”,它提供的是一种架构风格和理念,而并非是一种技术或者产品.并不是说项目中用了WebService、WCF、Hessian、RMI之类的就是SOA了.</p>
<p>通俗点来讲,SOA提倡将不同应用程序的业务功能封装成“服务”并宿主起来,通常以接口和契约的形式暴露并提供给外界应用访问（通过交换消息）,达到不同系统可重用的目的.</p>
<p>流行的WebService等可以看作是实现SOA基础设施的技术方法.当然,实践SOA不仅需要解决服务调用的问题,还包括服务编排、服务治理、服务路由、服务监控等一系列的问题.在大型分布式系统中,SOA被广泛实践,但是在不同的应用场景中,设计方法也大不相同.</p>
<p>SOA是一个组件模型,它能将不同的服务通过定义良好的接口和契约联系起来.服务是SOA的基石,在开始服务设计和SOA实践之前,有必要先了解服务的概念以及服务的常见特性.</p>
]]>
    
    </summary>
    
      <category term="SOA" scheme="http://arccode.net/tags/SOA/"/>
    
      <category term="分布式" scheme="http://arccode.net/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="架构" scheme="http://arccode.net/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[理解RMI中的Stub]]></title>
    <link href="http://arccode.net/2015/06/02/%E7%90%86%E8%A7%A3RMI%E4%B8%AD%E7%9A%84Stub/"/>
    <id>http://arccode.net/2015/06/02/理解RMI中的Stub/</id>
    <published>2015-06-02T03:53:25.000Z</published>
    <updated>2015-07-03T14:19:05.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>以前编程时也碰到过<code>Stub</code>这个名词, 但没关注, 今天研究<code>Paypal Rest API</code>又碰到到这个词, 决定探查个究竟.</p>
<h2 id="通俗解释">通俗解释</h2>
<p>Stub 跟 Proxy 是一对,俗称<code>代理-桩</code>,一般用在远程方法调用.</p>
<p>Proxy 相当于是拿在手里的遥控器,而 Stub 相当于长在电视机里的遥控接收器,它们有着一一对应的接口方法.</p>
<p>Proxy 的接口供客户端程序调用,然后它内部会把信息包装好,以某种方式(比如 RMI)传递给 Stub,而后者通过对应的接口作用于服务端系统,从而完成了<code>远程调用</code>.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>以前编程时也碰到过<code>Stub</code>这个名词, 但没关注, 今天研究<code>Paypal Rest API</code>又碰到到这个词, 决定探查个究竟.</p>
<h2 id="通俗解释">通俗解释</h2>
<]]>
    </summary>
    
      <category term="名词解释" scheme="http://arccode.net/tags/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/"/>
    
      <category term="设计模式" scheme="http://arccode.net/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[阿里巴巴分布式服务框架-Dubbo问与答]]></title>
    <link href="http://arccode.net/2015/05/23/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E5%88%86%E5%B8%83%E5%BC%8F%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6-Dubbo%E9%97%AE%E4%B8%8E%E7%AD%94/"/>
    <id>http://arccode.net/2015/05/23/阿里巴巴分布式服务框架-Dubbo问与答/</id>
    <published>2015-05-23T14:07:16.000Z</published>
    <updated>2015-05-24T02:36:43.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>Dubbo是阿里巴巴内部的SOA服务化治理方案的核心框架，每天为2000+ 个服务提供3,000,000,000+ 次访问量支持，并被广泛应用于阿里巴巴集团的各成员站点。Dubbo自2011年开源后，已被许多非阿里系公司使用。</p>
<p>项目主页：<a href="http://dubbo.io/Home-zh.htm" target="_blank" rel="external">http://dubbo.io/Home-zh.htm</a></p>
<h2 id="先来个自我介绍吧！">先来个自我介绍吧！</h2>
<p>我叫梁飞，花名虚极，之前负责Dubbo服务框架，现已调到天猫。</p>
<p>我的博客：<a href="http://javatar.iteye.com" target="_blank" rel="external">http://javatar.iteye.com</a></p>
<h2 id="Dubbo是什么？能做什么？">Dubbo是什么？能做什么？</h2>
<p>Dubbo是一个分布式服务框架，以及SOA治理方案。其功能主要包括：高性能NIO通讯及多协议集成，服务动态寻址与路由，软负载均衡与容错，依赖分析与降级等。</p>
<p>可参见：<a href="http://alibaba.github.io/dubbo-doc-static/Home-zh.htm" target="_blank" rel="external">http://alibaba.github.io/dubbo-doc-static/Home-zh.htm</a></p>
<h2 id="Dubbo适用于哪些场景？">Dubbo适用于哪些场景？</h2>
<p>当网站变大后，不可避免的需要拆分应用进行服务化，以提高开发效率，调优性能，节省关键竞争资源等。</p>
<a id="more"></a>

<p>当服务越来越多时，服务的URL地址信息就会爆炸式增长，配置管理变得非常困难，F5硬件负载均衡器的单点压力也越来越大。</p>
<p>当进一步发展，服务间依赖关系变得错踪复杂，甚至分不清哪个应用要在哪个应用之前启动，架构师都不能完整的描述应用的架构关系。</p>
<p>接着，服务的调用量越来越大，服务的容量问题就暴露出来，这个服务需要多少机器支撑？什么时候该加机器？等等……</p>
<p>在遇到这些问题时，都可以用Dubbo来解决。</p>
<p>可参见：<a href="http://alibaba.github.io/dubbo-doc-static/User+Guide-zh.htm#UserGuide-zh-%E5%85%A5%E9%97%A8" target="_blank" rel="external">Dubbo的背景及需求</a></p>
<h2 id="Dubbo的设计思路是什么？">Dubbo的设计思路是什么？</h2>
<p>该框架具有极高的扩展性，采用微核+插件体系，并且文档齐全，很方便二次开发，适应性极强。</p>
<p>可参见：<a href="http://alibaba.github.io/dubbo-doc-static/Developer+Guide-zh.htm#DeveloperGuide-zh-%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1" target="_blank" rel="external">开发者指南 - 框架设计</a></p>
<h2 id="Dubbo的需求和依赖情况？">Dubbo的需求和依赖情况？</h2>
<p>Dubbo运行JDK1.5之上，缺省依赖javassist、netty、spring等包，但不是必须依赖，通过配置Dubbo可不依赖任何三方库运行。</p>
<p>可参见：<a href="http://code.alibabatech.com/wiki/display/dubbo/User+Guide#UserGuide-Dependency" target="_blank" rel="external">用户指南 - 依赖</a></p>
<h2 id="Dubbo的性能如何？">Dubbo的性能如何？</h2>
<p>Dubbo通过长连接减少握手，通过NIO及线程池在单连接上并发拼包处理消息，通过二进制流压缩数据，比常规HTTP等短连接协议更快。在阿里巴巴内部，每天支撑2000多个服务，30多亿访问量，最大单机支撑每天近1亿访问量。</p>
<p>可参见：<a href="http://alibaba.github.io/dubbo-doc-static/User+Guide-zh.htm#UserGuide-zh-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A" target="_blank" rel="external">Dubbo性能测试报告</a></p>
<h2 id="和淘宝HSF相比，Dubbo的特点是什么？">和淘宝HSF相比，Dubbo的特点是什么？</h2>
<p>1.&nbsp; <strong>Dubbo比HSF的部署方式更轻量</strong>，HSF要求使用指定的JBoss等容器，还需要在JBoss等容器中加入sar包扩展，对用户运行环境的侵入性大，如果你要运行在Weblogic或Websphere等其它容器上，需要自行扩展容器以兼容HSF的ClassLoader加载，而Dubbo没有任何要求，可运行在任何Java环境中。</p>
<p>2.&nbsp; <strong>Dubbo比HSF的扩展性更好，很方便二次开发</strong>，一个框架不可能覆盖所有需求，Dubbo始终保持平等对待第三方理念，即所有功能，都可以在不修改Dubbo原生代码的情况下，在外围扩展，包括Dubbo自己内置的功能，也和第三方一样，是通过扩展的方式实现的，而HSF如果你要加功能或替换某部分实现是很困难的，比如支付宝和淘宝用的就是不同的HSF分支，因为加功能时改了核心代码，不得不拷一个分支单独发展，HSF现阶段就算开源出来，也很难复用，除非对架构重写。</p>
<p>3.&nbsp; <strong>HSF依赖比较多内部系统</strong>，比如配置中心，通知中心，监控中心，单点登录等等，如果要开源还需要做很多剥离工作，而Dubbo为每个系统的集成都留出了扩展点，并已梳理干清所有依赖，同时为开源社区提供了替代方案，用户可以直接使用。</p>
<p>4.&nbsp; <strong>Dubbo比HSF的功能更多</strong>，除了ClassLoader隔离，Dubbo基本上是HSF的超集，Dubbo也支持更多协议，更多注册中心的集成，以适应更多的网站架构。</p>
<h2 id="Dubbo在安全机制方面是如何解决的？">Dubbo在安全机制方面是如何解决的？</h2>
<p>Dubbo主要针对内部服务，对外的服务，阿里有开放平台来处理安全和流控，所以Dubbo在安全方面实现的功能较少，基本上只防君子不防小人，只防止误调用。</p>
<p>Dubbo通过Token令牌防止用户绕过注册中心直连，然后在注册中心上管理授权。Dubbo还提供服务黑白名单，来控制服务所允许的调用方。</p>
<p>可参见：<a href="http://alibaba.github.io/dubbo-doc-static/User+Guide-zh.htm#UserGuide-zh-%E4%BB%A4%E7%89%8C%E9%AA%8C%E8%AF%81" target="_blank" rel="external">Dubbo的令牌验证</a></p>
<h2 id="Dubbo在阿里巴巴内部以及外部的应用情况？">Dubbo在阿里巴巴内部以及外部的应用情况？</h2>
<p>在阿里内部，除淘系以外的其它阿里子公司，都在使用Dubbo，包括：中文主站，国际主站，AliExpress，阿里云，阿里金融，阿里学院，良无限，来往等等。</p>
<p>开源后，已被：去哪儿，京东，吉利汽车，方正证劵，海尔，焦点科技，中润四方，华新水泥，海康威视，等公司广泛使用，并不停的有新公司加入，社区讨论及贡献活跃，得到用户很高的评价。</p>
<p>可参见：<a href="http://alibaba.github.io/dubbo-doc-static/Community-zh.htm#Community-zh-%E5%B7%B2%E7%9F%A5%E7%94%A8%E6%88%B7" target="_blank" rel="external">Dubbo的已知用户</a></p>
<h2 id="在分布式事务、多语言支持方面，Dubbo的计划是什么？">在分布式事务、多语言支持方面，Dubbo的计划是什么？</h2>
<p>分布式事务可能暂不会支持，因为如果只是支持简单的XA/JTA两阶段提交事务，实用性并不强。用户可以自行实现业务补偿的事件，或更复杂的分布式事务，Dubbo有很多扩展点可以集成。</p>
<p>在多语言方面，Dubbo实现了C++版本，但在内部使用面极窄，没有得到很强的验证，并且C++开发资源紧张，没有精力准备C++开源事项。</p>
<h2 id="Dubbo采用的开源协议？商业应用应该注意哪些事项？">Dubbo采用的开源协议？商业应用应该注意哪些事项？</h2>
<p>Dubbo采用Apache License 2.0开源协议，它是一个商业友好的协议，你可以免费用于非开源的商业软件中。</p>
<p>你可以对它进行改造和二次发布，只要求保留阿里的著作权，并在再发布时保留原始许可声明。</p>
<p>可参见：<a href="http://alibaba.github.io/dubbo-doc-static/Download-zh.htm#Download-zh-%E5%BC%80%E6%BA%90%E8%AE%B8%E5%8F%AF" target="_blank" rel="external">Dubbo的开源许可证</a></p>
<h2 id="Dubbo开发团队情况？">Dubbo开发团队情况？</h2>
<p>Dubbo共有六个开发人员参与开发和测试，每一个开发人员都是很有经验，团队合作很默契，开发过程也很有节奏，有完善质量保障流程。团队组成：</p>
<ul>
<li><p>梁飞 （开发人员/产品管理）</p>
</li>
<li><p>刘昊旻 （开发人员/过程管理）</p>
</li>
<li><p>刘超 （开发人员/用户支持）</p>
</li>
<li><p>李鼎 （开发人员/用户支持）</p>
</li>
<li><p>陈雷 （开发人员/质量保障）</p>
</li>
<li><p>闾刚 （开发人员/开源运维）</p>
</li>
</ul>
<p><img src="http://dl.iteye.com/upload/attachment/0076/4588/a376775f-1550-3746-aad6-808c5989d96e.jpg" alt=""></p>
<p>从左至右：刘超，梁飞，闾刚，陈雷，刘昊旻，李鼎</p>
<p>可参见：<a href="http://alibaba.github.io/dubbo-doc-static/Community-zh.htm#Community-zh-%E5%9B%A2%E9%98%9F" target="_blank" rel="external">Dubbo的团队成员</a></p>
<h2 id="其他开发者如何参与？可以做哪些工作？">其他开发者如何参与？可以做哪些工作？</h2>
<p>开发者可以在Github上fork分支，然后将修改push过来，我们审核并测试后，会合并到主干中。</p>
<p>Github地址：<a href="https://github.com/alibaba/dubbo" target="_blank" rel="external">https://github.com/alibaba/dubbo</a></p>
<p>开发者可以在JIRA上认领小的BUG修复，也可以在开发者指南页面领取大的功能模块。</p>
<p>JIRA：<a href="http://code.alibabatech.com/jira/browse/DUBBO" target="_blank" rel="external">http://code.alibabatech.com/jira/browse/DUBBO</a>（暂不可用）</p>
<p>开发者指南：<a href="http://alibaba.github.io/dubbo-doc-static/Developer+Guide-zh.htm" target="_blank" rel="external">http://alibaba.github.io/dubbo-doc-static/Developer+Guide-zh.htm</a></p>
<h2 id="Dubbo未来的发展计划？">Dubbo未来的发展计划？</h2>
<p>Dubbo的RPC框架已基本稳定，未来的重心会放在服务治理上，包括架构分析、监控统计、降级控制、流程协作等等。</p>
<p>可参见：<a href="http://alibaba.github.io/dubbo-doc-static/Roadmap-zh.htm" target="_blank" rel="external">http://alibaba.github.io/dubbo-doc-static/Roadmap-zh.htm</a></p>
<h2 id="声明">声明</h2>
<p>本文属于转载:<a href="http://www.iteye.com/magazines/103" target="_blank" rel="external">原文(阿里巴巴分布式服务框架 Dubbo 团队成员梁飞专访)</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>Dubbo是阿里巴巴内部的SOA服务化治理方案的核心框架，每天为2000+ 个服务提供3,000,000,000+ 次访问量支持，并被广泛应用于阿里巴巴集团的各成员站点。Dubbo自2011年开源后，已被许多非阿里系公司使用。</p>
<p>项目主页：<a href="http://dubbo.io/Home-zh.htm" target="_blank" rel="external">http://dubbo.io/Home-zh.htm</a></p>
<h2 id="先来个自我介绍吧！">先来个自我介绍吧！</h2>
<p>我叫梁飞，花名虚极，之前负责Dubbo服务框架，现已调到天猫。</p>
<p>我的博客：<a href="http://javatar.iteye.com" target="_blank" rel="external">http://javatar.iteye.com</a></p>
<h2 id="Dubbo是什么？能做什么？">Dubbo是什么？能做什么？</h2>
<p>Dubbo是一个分布式服务框架，以及SOA治理方案。其功能主要包括：高性能NIO通讯及多协议集成，服务动态寻址与路由，软负载均衡与容错，依赖分析与降级等。</p>
<p>可参见：<a href="http://alibaba.github.io/dubbo-doc-static/Home-zh.htm" target="_blank" rel="external">http://alibaba.github.io/dubbo-doc-static/Home-zh.htm</a></p>
<h2 id="Dubbo适用于哪些场景？">Dubbo适用于哪些场景？</h2>
<p>当网站变大后，不可避免的需要拆分应用进行服务化，以提高开发效率，调优性能，节省关键竞争资源等。</p>
]]>
    
    </summary>
    
      <category term="多线程" scheme="http://arccode.net/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="NIO" scheme="http://arccode.net/tags/NIO/"/>
    
      <category term="WebService" scheme="http://arccode.net/tags/WebService/"/>
    
      <category term="Dubbo" scheme="http://arccode.net/tags/Dubbo/"/>
    
      <category term="中间件" scheme="http://arccode.net/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前后端完全分离之API设计]]></title>
    <link href="http://arccode.net/2015/04/18/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%8C%E5%85%A8%E5%88%86%E7%A6%BB%E4%B9%8BAPI%E8%AE%BE%E8%AE%A1/"/>
    <id>http://arccode.net/2015/04/18/前后端完全分离之API设计/</id>
    <published>2015-04-18T09:46:48.000Z</published>
    <updated>2015-04-20T01:51:19.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>API就是开发者使用的界面。我的目标不仅是能用，而且好用, 跨平台(PC, Android, IOS, etc…)使用; 本文将详细介绍API的设计及异常处理, 并将异常信息进行封装友好地反馈给前端.</p>
<p>上篇文章<a href="http://arccode.net/2015/04/08/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%8C%E5%85%A8%E5%88%86%E7%A6%BB%E5%88%9D%E6%8E%A2/" target="_blank" rel="external">前后端完全分离初探</a>只是讲了些宽泛的概念, 接下来的文章将直接上干货, 干货的源码会挂在<code>github</code>上.</p>
<p>前后端完全分离后, 前端和后端如何交互? </p>
<p>答: 通过双方协商好的API.</p>
<p>接下来我分享我自己设计的API接口, 欢迎各位朋友指教.</p>
<h2 id="API设计理念">API设计理念</h2>
<ol>
<li>将涉及的实体抽象成资源, 即按<code>id</code>访问资源, 在<code>url</code>上做文章, 以后再也不用为<code>url</code>起名字而苦恼了.</li>
<li>使用<code>HTTP</code>动词对资源进行<code>CRUD</code>(增删改查); get-&gt;查, post-&gt;增, put-&gt;改, delete-&gt;删.</li>
<li>URL命名规则, 对于资源无法使用一个单数名词表示的情况, 我使用中横线(<code>-</code>)连接.<ul>
<li>资源采用名词命名, e.g: 产品 -&gt; product</li>
<li>新增资源, e.g: 新增产品, url -&gt; /product ,  verb -&gt; POST</li>
<li>修改资源, e.g: 修改产品, url -&gt; /products/{id} ,  verb -&gt; PUT</li>
<li>资源详情, e.g: 指定产品详情, url -&gt; /products/{id} ,  verb -&gt; GET</li>
<li>删除资源, e.g: 删除产品, url -&gt; /products/{id} ,  verb -&gt; DELETE</li>
<li>资源列表, e.g: 产品列表, url -&gt; /products ,  verb -&gt; GET</li>
<li>资源关联关系, e.g: 收藏产品, url -&gt; /products/{id}/star ,  verb -&gt; PUT</li>
<li>资源关联关系, e.g: 删除收藏产品, url -&gt; /products/{id}/star ,  verb -&gt; DELETE</li>
</ul>
</li>
</ol>
<p>目前我API的设计只涉及这两点, 至于第三点<code>HATEOAS</code>(Hypermedia As The Engine Of Application State)那就由读者自己去选择了.</p>
<a id="more"></a>

<h2 id="项目地址">项目地址</h2>
<p>本文中只涉及了设计的理念, 具体的实现请下载源码<a href="https://github.com/arccode/rest-api" target="_blank" rel="external">rest-api</a>, 项目内写了比较详细的注释.</p>
<h2 id="项目实战">项目实战</h2>
<p>实战将从业务场景出发, 详细介绍如何使用HTTP verb对资源进行操作(<code>状态转移</code>), 使用JSON返回结果(<code>资源表述</code>), 并定义JSON的基础结构.</p>
<h3 id="JSON结构">JSON结构</h3>
<p>requestParams: </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="rules">{</span></div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>responseBody: </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">  },</div><div class="line">  "<span class="attribute">data</span>": <span class="value">{</span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<p><code>meta</code>中封装操作成功或失败的消息, <code>data</code>中封装返回的具体数据.</p>
<p>当新建商品或更新产品时, 相关属性封装在JSON中, 通过POST或PUT发送,</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"Apple Watch SPORT"</span></span>,</div><div class="line">  "<span class="attribute">description</span>": <span class="value"><span class="string">"Sport 系列的表壳材料为轻巧的银色及深空灰色阳极氧化铝金属，强化 Ion-X 玻璃材质为显示屏提供保护。搭配高性能 Fluoroelastomer 表带，共有 5 款缤纷色彩。"</span></span></div><div class="line">}</div></pre></td></tr></table></figure>

<p>当用户对商品进行操作后, 将得到响应结果,</p>
<p>GET, POST, PUT操作成功, 返回如下结果</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">201</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"创建成功"</span></span></div><div class="line">  },</div><div class="line">  "<span class="attribute">data</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">id</span>": <span class="value"><span class="string">"5308e9c2-a4ce-4dca-9373-cc1ffe63d5f9"</span></span>,</div><div class="line">    "<span class="attribute">name</span>": <span class="value"><span class="string">"Apple Watch SPORT"</span></span>,</div><div class="line">    "<span class="attribute">description</span>": <span class="value"><span class="string">"Sport 系列的表壳材料为轻巧的银色及深空灰色阳极氧化铝金属，强化 Ion-X 玻璃材质为显示屏提供保护。搭配高性能 Fluoroelastomer 表带，共有 5 款缤纷色彩。"</span></span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>DELETE操作成功, 返回如下结果</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">204</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"删除成功"</span></span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="业务场景一">业务场景一</h3>
<p>电商网站的管理员对商品进行新增,编辑,删除,浏览的操作; 暂时不考虑认证授权, 只关注对商品的操作.</p>
<p>为了以后便于做分布式, 所有资源id(表主键)均采用uuid.</p>
<h4 id="新增商品">新增商品</h4>
<p>1, url: <code>/api/product</code></p>
<p>2, method: <code>POST</code></p>
<p>3, requestParams: </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"Apple Watch SPORT"</span></span>,</div><div class="line">  "<span class="attribute">description</span>": <span class="value"><span class="string">"Sport 系列的表壳材料为轻巧的银色及深空灰色阳极氧化铝金属，强化 Ion-X 玻璃材质为显示屏提供保护。搭配高性能 Fluoroelastomer 表带，共有 5 款缤纷色彩。"</span></span></div><div class="line">}</div></pre></td></tr></table></figure>

<p>4, responseBody</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">201</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"创建成功"</span></span></div><div class="line">  },</div><div class="line">  "<span class="attribute">data</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">id</span>": <span class="value"><span class="string">"5308e9c2-a4ce-4dca-9373-cc1ffe63d5f9"</span></span>,</div><div class="line">    "<span class="attribute">name</span>": <span class="value"><span class="string">"Apple Watch SPORT"</span></span>,</div><div class="line">    "<span class="attribute">description</span>": <span class="value"><span class="string">"Sport 系列的表壳材料为轻巧的银色及深空灰色阳极氧化铝金属，强化 Ion-X 玻璃材质为显示屏提供保护。搭配高性能 Fluoroelastomer 表带，共有 5 款缤纷色彩。"</span></span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<h4 id="编辑商品">编辑商品</h4>
<p>1, url: <code>/api/products/{id}</code></p>
<p>2, method: <code>PUT</code></p>
<p>3, requestParams: </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"iPhone 6"</span></span>,</div><div class="line">  "<span class="attribute">description</span>": <span class="value"><span class="string">"此次苹果发布会发布了iPhone 6与iPhone 6 Plus，搭载iOS 8，尺寸分别是4.7和5.5英寸。外观设计不再棱角分明，表层玻璃边有一个弧度向下延伸，与阳极氧化铝金属机身边框衔接。机身背部采用三段式设计。机身更薄，续航能力更强。"</span></span></div><div class="line">}</div></pre></td></tr></table></figure>

<p>4, responseBody</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">200</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"修改成功"</span></span></div><div class="line">  },</div><div class="line">  "<span class="attribute">data</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">id</span>": <span class="value"><span class="string">"5308e9c2-a4ce-4dca-9373-cc1ffe63d5f9"</span></span>,</div><div class="line">    "<span class="attribute">name</span>": <span class="value"><span class="string">"iPhone 6"</span></span>,</div><div class="line">    "<span class="attribute">description</span>": <span class="value"><span class="string">"此次苹果发布会发布了iPhone 6与iPhone 6 Plus，搭载iOS 8，尺寸分别是4.7和5.5英寸。外观设计不再棱角分明，表层玻璃边有一个弧度向下延伸，与阳极氧化铝金属机身边框衔接。机身背部采用三段式设计。机身更薄，续航能力更强。"</span></span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<h4 id="删除商品">删除商品</h4>
<p>1, url: <code>/api/products/{id}</code></p>
<p>2, method: <code>DELETE</code></p>
<p>3, responseBody</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">204</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"删除成功"</span></span></div><div class="line">  },</div><div class="line">  "<span class="attribute">data</span>": <span class="value">{}</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h4 id="获取商品详情">获取商品详情</h4>
<p>1, url: <code>/api/products/{id}</code></p>
<p>2, method: <code>GET</code></p>
<p>3, responseBody</p>
<p>删除前</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">200</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"查询成功"</span></span></div><div class="line">  },</div><div class="line">  "<span class="attribute">data</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">id</span>": <span class="value"><span class="string">"5308e9c2-a4ce-4dca-9373-cc1ffe63d5f9"</span></span>,</div><div class="line">    "<span class="attribute">name</span>": <span class="value"><span class="string">"Apple Watch SPORT"</span></span>,</div><div class="line">    "<span class="attribute">description</span>": <span class="value"><span class="string">"Sport 系列的表壳材料为轻巧的银色及深空灰色阳极氧化铝金属，强化 Ion-X 玻璃材质为显示屏提供保护。搭配高性能 Fluoroelastomer 表带，共有 5 款缤纷色彩。"</span></span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>删除后</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">404</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"指定产品不存在"</span></span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<h4 id="获取商品列表(未分页)">获取商品列表(未分页)</h4>
<p>1, url: <code>/api/products</code></p>
<p>2, method: <code>GET</code></p>
<p>3, responseBody</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">200</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"获取全部商品成功"</span></span></div><div class="line">  },</div><div class="line">  "<span class="attribute">data</span>": <span class="value">[</span></div><div class="line">    {</div><div class="line">      "<span class="attribute">id</span>": <span class="value"><span class="string">"5308e9c2-a4ce-4dca-9373-cc1ffe63d5f9"</span></span>,</div><div class="line">      "<span class="attribute">name</span>": <span class="value"><span class="string">"Apple Watch SPORT"</span></span>,</div><div class="line">      "<span class="attribute">description</span>": <span class="value"><span class="string">"Sport 系列的表壳材料为轻巧的银色及深空灰色阳极氧化铝金属，强化 Ion-X 玻璃材质为显示屏提供保护。搭配高性能 Fluoroelastomer 表带，共有 5 款缤纷色彩。"</span></span></div><div class="line">    },</div><div class="line">    {</div><div class="line">      "<span class="attribute">id</span>": <span class="value"><span class="string">"9db1992a-c342-4ff0-a2a4-aeb3dbfd93f6"</span></span>,</div><div class="line">      "<span class="attribute">name</span>": <span class="value"><span class="string">"Apple Watch SPORT"</span></span>,</div><div class="line">      "<span class="attribute">description</span>": <span class="value"><span class="string">"Sport 系列的表壳材料为轻巧的银色及深空灰色阳极氧化铝金属，强化 Ion-X 玻璃材质为显示屏提供保护。搭配高性能 Fluoroelastomer 表带，共有 5 款缤纷色彩。"</span></span></div><div class="line">    },</div><div class="line">    {</div><div class="line">      "<span class="attribute">id</span>": <span class="value"><span class="string">"4481619b-45c5-4729-9539-f93bb01f10d8"</span></span>,</div><div class="line">      "<span class="attribute">name</span>": <span class="value"><span class="string">"Apple Watch SPORT"</span></span>,</div><div class="line">      "<span class="attribute">description</span>": <span class="value"><span class="string">"Sport 系列的表壳材料为轻巧的银色及深空灰色阳极氧化铝金属，强化 Ion-X 玻璃材质为显示屏提供保护。搭配高性能 Fluoroelastomer 表带，共有 5 款缤纷色彩。"</span></span></div><div class="line">    }</div><div class="line">  ]</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="业务场景二">业务场景二</h3>
<p><code>业务场景一</code>中只涉及了单个资源的操作, 但实际场景中还有些关联操作; 如用户去电商网站浏览商品, 并收藏了一些商品, 之后又取消收藏了部分商品.</p>
<p>暂时不考虑用户认证授权, 以后加了<code>token</code>后, 用户信息可以从中获取.</p>
<h4 id="收藏商品">收藏商品</h4>
<p>1, url: <code>/api/products/{id}/star</code></p>
<p>2, method: <code>PUT</code></p>
<p>3, responseBody</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">200</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"收藏商品[5308e9c2-a4ce-4dca-9373-cc1ffe63d5f9]成功"</span></span></div><div class="line">  },</div><div class="line">  "<span class="attribute">data</span>": <span class="value">[</span></div><div class="line">    {</div><div class="line">      "<span class="attribute">id</span>": <span class="value"><span class="string">"5308e9c2-a4ce-4dca-9373-cc1ffe63d5f9"</span></span>,</div><div class="line">      "<span class="attribute">name</span>": <span class="value"><span class="string">"iPhone 6"</span></span>,</div><div class="line">      "<span class="attribute">description</span>": <span class="value"><span class="string">"此次苹果发布会发布了iPhone 6与iPhone 6 Plus，搭载iOS 8，尺寸分别是4.7和5.5英寸。外观设计不再棱角分明，表层玻璃边有一个弧度向下延伸，与阳极氧化铝金属机身边框衔接。机身背部采用三段式设计。机身更薄，续航能力更强。"</span></span></div><div class="line">    }</div><div class="line">  ]</div><div class="line">}</div></pre></td></tr></table></figure>

<h4 id="取消收藏商品">取消收藏商品</h4>
<p>1, url: <code>/api/products/{id}/star</code></p>
<p>2, method: <code>DELETE</code></p>
<p>3, responseBody</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">200</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"删除收藏商品[5308e9c2-a4ce-4dca-9373-cc1ffe63d5f9]成功"</span></span></div><div class="line">  },</div><div class="line">  "<span class="attribute">data</span>": <span class="value">[]</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="自定义异常和异常处理">自定义异常和异常处理</h2>
<p>所有自定义异常继承RuntimeException, 在业务层抛出, 统一在Controller层进行处理.</p>
<p>异常分为全局异常和局部异常, 例如http method unsupported(405), unauthorized(401), accessDenied(403), not found(404)等属于全局异常; 针对对独立业务的一些异常属于局部异常, 例如产品编辑出错; </p>
<p>异常在Controller中进行处理, 并封装成json返回给前端, 封装后的数据如下, 相关实现见<a href="https://github.com/arccode/rest-api" target="_blank" rel="external">源码</a>;</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">404</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"指定产品不存在"</span></span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">meta</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">405</span></span>,</div><div class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"Request method 'POST' not supported"</span></span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="项目运行截图部分">项目运行截图部分</h2>
<p><img src="/images/arc/arc_add.png" alt=""></p>
<p><img src="/images/arc/arc_list.png" alt=""></p>
<p><img src="/images/arc/arc_exception.png" alt=""></p>
<h2 id="本系列文章">本系列文章</h2>
<ul>
<li><a href="http://arccode.net/2015/04/08/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%8C%E5%85%A8%E5%88%86%E7%A6%BB%E5%88%9D%E6%8E%A2/" target="_blank" rel="external">前后端完全分离初探</a></li>
<li><a href="http://arccode.net/2015/04/18/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%8C%E5%85%A8%E5%88%86%E7%A6%BB%E4%B9%8BAPI%E8%AE%BE%E8%AE%A1/" target="_blank" rel="external">前后端完全分离之API设计</a></li>
<li>前后端完全分离之安全认证与授权-上</li>
<li>前后端完全分离之安全认证与授权-下</li>
<li>前后端完全分离之前端模块化开发</li>
<li>前后端完全分离之前端路由系统</li>
<li>前后端完全分离之后端面向服务的模块化开发</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>API就是开发者使用的界面。我的目标不仅是能用，而且好用, 跨平台(PC, Android, IOS, etc…)使用; 本文将详细介绍API的设计及异常处理, 并将异常信息进行封装友好地反馈给前端.</p>
<p>上篇文章<a href="http://arccode.net/2015/04/08/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%8C%E5%85%A8%E5%88%86%E7%A6%BB%E5%88%9D%E6%8E%A2/" target="_blank" rel="external">前后端完全分离初探</a>只是讲了些宽泛的概念, 接下来的文章将直接上干货, 干货的源码会挂在<code>github</code>上.</p>
<p>前后端完全分离后, 前端和后端如何交互? </p>
<p>答: 通过双方协商好的API.</p>
<p>接下来我分享我自己设计的API接口, 欢迎各位朋友指教.</p>
<h2 id="API设计理念">API设计理念</h2>
<ol>
<li>将涉及的实体抽象成资源, 即按<code>id</code>访问资源, 在<code>url</code>上做文章, 以后再也不用为<code>url</code>起名字而苦恼了.</li>
<li>使用<code>HTTP</code>动词对资源进行<code>CRUD</code>(增删改查); get-&gt;查, post-&gt;增, put-&gt;改, delete-&gt;删.</li>
<li>URL命名规则, 对于资源无法使用一个单数名词表示的情况, 我使用中横线(<code>-</code>)连接.<ul>
<li>资源采用名词命名, e.g: 产品 -&gt; product</li>
<li>新增资源, e.g: 新增产品, url -&gt; /product ,  verb -&gt; POST</li>
<li>修改资源, e.g: 修改产品, url -&gt; /products/{id} ,  verb -&gt; PUT</li>
<li>资源详情, e.g: 指定产品详情, url -&gt; /products/{id} ,  verb -&gt; GET</li>
<li>删除资源, e.g: 删除产品, url -&gt; /products/{id} ,  verb -&gt; DELETE</li>
<li>资源列表, e.g: 产品列表, url -&gt; /products ,  verb -&gt; GET</li>
<li>资源关联关系, e.g: 收藏产品, url -&gt; /products/{id}/star ,  verb -&gt; PUT</li>
<li>资源关联关系, e.g: 删除收藏产品, url -&gt; /products/{id}/star ,  verb -&gt; DELETE</li>
</ul>
</li>
</ol>
<p>目前我API的设计只涉及这两点, 至于第三点<code>HATEOAS</code>(Hypermedia As The Engine Of Application State)那就由读者自己去选择了.</p>
]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="Javascript" scheme="http://arccode.net/tags/Javascript/"/>
    
      <category term="Rest" scheme="http://arccode.net/tags/Rest/"/>
    
      <category term="架构" scheme="http://arccode.net/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SpringSecurity-AntPathMatcher-Rest-Match]]></title>
    <link href="http://arccode.net/2015/04/14/SpringSecurity-AntPathMatcher-Rest-Match/"/>
    <id>http://arccode.net/2015/04/14/SpringSecurity-AntPathMatcher-Rest-Match/</id>
    <published>2015-04-14T15:05:45.000Z</published>
    <updated>2015-04-18T09:17:10.000Z</updated>
    <content type="html"><![CDATA[<h2 id="简介">简介</h2>
<p>使用Spring的AntPathMatch对RESTful的URL进行匹配.</p>
<h2 id="匹配规则">匹配规则</h2>
<p>ANT方式的通配符有三种：</p>
<ul>
<li><code>?   匹配任何单字符</code></li>
<li><code>*   匹配0或者任意数量的字符</code></li>
<li><code>**  匹配0或者更多的目录</code></li>
</ul>
<p>注: 所有的通配符均不包含路径分隔符<code>/</code>.</p>
<a id="more"></a>

<h2 id="单元测试">单元测试</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.junit.Test;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> org.springframework.util.AntPathMatcher;</div><div class="line"></div><div class="line"><span class="javadoc">/**</span></div><div class="line"> * AntPathMatchTest :</div><div class="line"> *</div><div class="line"> *<span class="javadoctag"> @author</span> http://arccode.net</div><div class="line"> *<span class="javadoctag"> @since</span> 2015-04-14 23:12</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AntPathMatchTest</span> </span>{</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(AntPathMatchTest.class);</div><div class="line"></div><div class="line">    <span class="annotation">@Test</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span>() {</div><div class="line"></div><div class="line">        AntPathMatcher matcher = <span class="keyword">new</span> AntPathMatcher();</div><div class="line">        String[] currUrls = {<span class="string">"/bop/wallpapers"</span>, <span class="string">"/bop/wallpapers1"</span>, <span class="string">"/bop/wallpapers11"</span>, <span class="string">"/bop/wallpapers/1"</span>, <span class="string">"/bop/wallpapers/1/labels/2"</span>};</div><div class="line">        String[] userAuths = {<span class="string">"/bop/wallpapers"</span>, <span class="string">"/bop/wallpapers?"</span>,<span class="string">"/bop/wallpapers/*"</span>, <span class="string">"/bop/wallpapers/**"</span>};</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (String currUrl: currUrls) {</div><div class="line">            <span class="keyword">for</span> (String userAuth: userAuths) {</div><div class="line">                logger.info(currUrl + <span class="string">"-----"</span> + userAuth + <span class="string">"-----"</span> + matcher.match(userAuth, currUrl) + <span class="string">""</span>);</div><div class="line">            }</div><div class="line">        }</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h2 id="简介">简介</h2>
<p>使用Spring的AntPathMatch对RESTful的URL进行匹配.</p>
<h2 id="匹配规则">匹配规则</h2>
<p>ANT方式的通配符有三种：</p>
<ul>
<li><code>?   匹配任何单字符</code></li>
<li><code>*   匹配0或者任意数量的字符</code></li>
<li><code>**  匹配0或者更多的目录</code></li>
</ul>
<p>注: 所有的通配符均不包含路径分隔符<code>/</code>.</p>
]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="Spring" scheme="http://arccode.net/tags/Spring/"/>
    
      <category term="路由" scheme="http://arccode.net/tags/%E8%B7%AF%E7%94%B1/"/>
    
      <category term="架构" scheme="http://arccode.net/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前后端完全分离初探]]></title>
    <link href="http://arccode.net/2015/04/08/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%8C%E5%85%A8%E5%88%86%E7%A6%BB%E5%88%9D%E6%8E%A2/"/>
    <id>http://arccode.net/2015/04/08/前后端完全分离初探/</id>
    <published>2015-04-08T15:13:37.000Z</published>
    <updated>2015-04-20T01:50:51.000Z</updated>
    <content type="html"><![CDATA[<h2 id="核心思路">核心思路</h2>
<p>后端负责业务逻辑处理, 前端负责展示逻辑的处理.</p>
<h2 id="背景">背景</h2>
<ul>
<li><p>2013年3月,首次接触了<a href="http://underscorejs.org/" target="_blank" rel="external">underscore.js</a>这个区区45k大小的js库, 在使用其提供的简单模板完成表格异步分页后,从此我开始慢慢践行前后端完全分离的架构.</p>
</li>
<li><p>2013年7月,我接触到了REST这种重用HTTP应用协议的架构, 更坚定了我践行前后端分离的决心.</p>
</li>
<li><p>2014年3月,国内刮起了nodeJS的风暴, 此时我采用国外的一个开源项目<a href="http://mean.io/" target="_blank" rel="external">MEAN</a>开发了一套完整的CMS系统, 此次开发学习到了API接口如何标准化, API具体的设计参考了<a href="https://developer.github.com/v3/" target="_blank" rel="external">github API</a>, <a href="https://instagram.com/developer/endpoints/" target="_blank" rel="external">Instagram API</a>.</p>
</li>
<li><p>2015年1月, 公司开发新产品, 需要新开发一套支持平台及数据下发平台, 在该产品中我主要参与API的设计, 并主导开发支撑平台, 下面我就介绍下这套支撑平台.</p>
</li>
</ul>
<a id="more"></a>


<h2 id="工具">工具</h2>
<p>工欲善其事, 必先利其器, 先介绍下自己使用的工具</p>
<p><a href="https://www.jetbrains.com/idea/" target="_blank" rel="external">IntelliJ IDEA</a></p>
<p>强大的Java集成开发工具, 没有之一.</p>
<p><a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="external">Webstorm</a></p>
<p>强大的HTML,CSS,Javascript集成开发工具, 没有之一.</p>
<p><a href="http://www.sublimetext.com/" target="_blank" rel="external">Sublime</a></p>
<p>强大的文本编辑工具, 目前我主要用于临时文件查看, 临时json数据格式化查看, 集成了plugin后, 它的功能会吓到人.</p>
<p><a href="http://www.navicat.com/" target="_blank" rel="external">Navicat</a></p>
<p>小巧强大的关系数据库建模工具, 相当易用.</p>
<p><a href="https://www.zennaware.com/cornerstone/index.php" target="_blank" rel="external">Cornerstone</a></p>
<p>强大的版本控制客户端.</p>
<p><a href="http://25.io/mou/" target="_blank" rel="external">Mou</a></p>
<p>一款简洁强大的MarkDown可视化编辑工具.</p>
<p><a href="http://www.emtec.com/zoc/" target="_blank" rel="external">Zoc6</a></p>
<p>一款强大的Linux SSH客户端工具.</p>
<p><a href="https://panic.com/transmit/" target="_blank" rel="external">Transmit</a></p>
<p>一款强大的Linux SFTP客户端可视化工具.</p>
<h2 id="代理">代理</h2>
<p><a href="https://www.cloudtizi.com/" target="_blank" rel="external">云梯</a></p>
<p>强大的VPN, 连接稳定, 速度快, 价格实惠, 可做全局代理, 包括terminal.</p>
<h2 id="项目">项目</h2>
<h3 id="目的">目的</h3>
<ul>
<li>提高使用者的工作效率</li>
<li>提高开发人员的开发效率</li>
</ul>
<h3 id="前端类库">前端类库</h3>
<p><a href="http://vuejs.org/" target="_blank" rel="external">vue.js</a></p>
<p>一个用于创建web交互界面的库, 主要用于数据双向绑定.</p>
<p><a href="http://visionmedia.github.io/superagent/" target="_blank" rel="external">superagent.js</a></p>
<p>一个非常方便的客户端请求代理模块，可方便的使用get,post,put,delete,head动词, 异步回调中封装了http状态码和业务数据等等.</p>
<p><a href="http://www.dropzonejs.com/" target="_blank" rel="external">dropzone.js</a></p>
<p>一个强大的文件上传库, 可获取文件mime, 文件大小等; 针对图片可生成缩略图, 获取图片宽度,高度.</p>
<p><a href="http://backgridjs.com/" target="_blank" rel="external">backgrid.js</a></p>
<p>一个强大的表格组件.</p>
<p><a href="https://github.com/flatiron/director" target="_blank" rel="external">director.js</a></p>
<p>一个强大的前端路由库, 通过<code>#</code>符号进行路径组织, 结合<code>vue</code>的<code>component</code>可进行单页的局部模块刷新.</p>
<h3 id="后端类库">后端类库</h3>
<p><a href="http://spring.io/guides/tutorials/bookmarks/" target="_blank" rel="external">spring hateoas</a></p>
<p>spring 超文本驱动库, 可根据需求返回不同的httpStatus及links.</p>
<p><a href="http://projects.spring.io/spring-framework/" target="_blank" rel="external">spring framework</a></p>
<p>对架构进行分层, 目前分三层</p>
<ul>
<li>web接入层: 提供API接口,对前端传过来的数据进行校验, 校验未通过的话使用spring hateoas包装返回错误消息, 校验通过的话调用业务逻辑层</li>
<li>业务逻辑层: 该层主要处理上层传进来的数据, 调用数据访问层进行数据持久化, 该层具有强大的扩展性;<ul>
<li>对于高并发写<code>db</code>的操作, 可集成消息队列库(如<a href="http://activemq.apache.org/" target="_blank" rel="external">ActiveMQ</a>)将消息发送至队列, 采用队列依次消费减轻<code>db</code>写负担.</li>
<li>对于高并发频繁读<code>db</code>的操作, 可集成缓存库(如<a href="http://redis.io/" target="_blank" rel="external">redis</a>), 把读<code>db</code>的操作改为先读缓存, 未命中才去读<code>db</code>, 这样可大大减轻数据库读负担.</li>
<li>在该层上还可以使用<code>spring AOP</code>对业务进行事务控制及日志记录.</li>
</ul>
</li>
<li>数据访问层: 该层只做一件事, 对数据库中的表记录进行增删改查, 不进行业务逻辑判断.</li>
</ul>
<p><a href="http://mybatis.github.io/mybatis-3/zh/" target="_blank" rel="external">mybatis</a></p>
<p>一个半自动ORM(对象关系映射库)库, 简单灵活, 使用原生sql, 可完成较复杂的查询.</p>
<p><a href="http://mybatis.github.io/generator/running/runningWithMaven.html" target="_blank" rel="external">mybatis-generator-maven-plugin</a></p>
<p>mybatis插件, 可根据数据库中的表生成JavaBean,Dao接口,Dao的xml文件, 本人修改了部分源码, 可在JavaBean中自动添加注释, 详见另一篇博文<a href="http://arccode.net/2015/02/07/MyBatis-Generator%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/" target="_blank" rel="external">MyBatis-Generator最佳实践</a>.</p>
<p><a href="http://projects.spring.io/spring-security/" target="_blank" rel="external">spring security</a></p>
<p>完成用户的认证和授权.</p>
<p><a href="https://code.google.com/p/thumbnailator/" target="_blank" rel="external">thumbnailator</a>(注: 需翻墙)</p>
<p>一个Java端的图片处理库, 可完成图片压缩, 裁剪, 水印等功能.</p>
<h3 id="实战">实战</h3>
<p>如何提高使用者的工作效率?</p>
<ul>
<li>使用者看见就知道怎么使用</li>
<li>为使用者自动完成部分可推导的表单填写</li>
<li>拥有尽可能全的提示</li>
</ul>
<p>如何提高开发人员的开发效率?</p>
<ul>
<li>技术选型时权衡考虑学习曲线与其提供的功能</li>
<li>设计一套通用的可扩展的架构</li>
<li>对常用操作及模块进行封装.</li>
</ul>
<p>目前, 后端中将数据访问层和业务逻辑层中常用的方法封装成了泛型接口, 并使用抽象类来实现最基础的逻辑, 开发人员如果觉得指定方法无法满足需求, 可重写指定方法或使用新方法. 具体封装如下:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="javadoc">/**</span></div><div class="line"> * GenericDao : 封装通用dao操作, 服务于GenericService</div><div class="line"> *</div><div class="line"> *<span class="javadoctag"> @author</span> http://arccode.net</div><div class="line"> *<span class="javadoctag"> @since</span> 2014-12-03</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GenericDao</span>&lt;<span class="title">Model</span>, <span class="title">PK</span>&gt; </span>{</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     *  插入</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @param</span> model</div><div class="line">     */</div><div class="line">    <span class="keyword">int</span> insertSelective(Model model);</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     *  删除</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @param</span> id</div><div class="line">     */</div><div class="line">    <span class="keyword">int</span> deleteByPrimaryKey(PK id);</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     *  更新</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @param</span> model</div><div class="line">     */</div><div class="line">    <span class="keyword">int</span> updateByPrimaryKeySelective(Model model);</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     *  查询单条记录</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @param</span> id</div><div class="line">     */</div><div class="line">    Model selectByPrimaryKey(PK id);</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 分页查询</div><div class="line">     *<span class="javadoctag"> @param</span> page</div><div class="line">     *<span class="javadoctag"> @param</span> model</div><div class="line">     *<span class="javadoctag"> @return</span></div><div class="line">     */</div><div class="line">    List selectAndPage(Page&lt;Model&gt; page, Model model);</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="javadoc">/**</span></div><div class="line"> * GenericService : 所有自定义Service的顶级接口,封装常用的增删查改操作</div><div class="line"> *</div><div class="line"> * Model : 代表数据库中的表映射的Java对象类型</div><div class="line"> * PK :代表对象的主键类型</div><div class="line"> *</div><div class="line"> *<span class="javadoctag"> @author</span> http://arccode.net</div><div class="line"> *<span class="javadoctag"> @since</span> 2014-12-03</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GenericService</span>&lt;<span class="title">Model</span>, <span class="title">PK</span>&gt; </span>{</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 分页获取集合, 带过滤功能</div><div class="line">     *<span class="javadoctag"> @param</span> page 分页对象</div><div class="line">     *<span class="javadoctag"> @param</span> model 分页条件, eg: model.name = "zhangsan", 对应sql语句为where name like %zhangsan%</div><div class="line">     *<span class="javadoctag"> @return</span></div><div class="line">     */</div><div class="line">    List getModels(Page&lt;Model&gt; page, Model model);</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 新增</div><div class="line">     *<span class="javadoctag"> @param</span> model</div><div class="line">     *<span class="javadoctag"> @return</span></div><div class="line">     */</div><div class="line">    Integer addModel(Model model);</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 删除</div><div class="line">     *<span class="javadoctag"> @param</span> id</div><div class="line">     *<span class="javadoctag"> @return</span></div><div class="line">     */</div><div class="line">    Integer removeModelById(PK id);</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 修改</div><div class="line">     *<span class="javadoctag"> @param</span> model</div><div class="line">     *<span class="javadoctag"> @return</span></div><div class="line">     */</div><div class="line">    Integer modifyModelById(Model model);</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 根据主键id获取单条记录详情</div><div class="line">     *<span class="javadoctag"> @param</span> id</div><div class="line">     *<span class="javadoctag"> @return</span></div><div class="line">     */</div><div class="line">    Model getModelById(PK id);</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="javadoc">/**</span></div><div class="line"> * GenericServiceSupport : 通用接口的实现类</div><div class="line"> *</div><div class="line"> *<span class="javadoctag"> @author</span> http://arccode.net</div><div class="line"> *<span class="javadoctag"> @since</span> 2014-12-03</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">GenericServiceSupport</span>&lt;<span class="title">Model</span>, <span class="title">PK</span>&gt;  <span class="keyword">implements</span> <span class="title">GenericService</span>&lt;<span class="title">Model</span>, <span class="title">PK</span>&gt;</span>{</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 定义成抽象方法,由子类实现,完成dao的注入</div><div class="line">     *<span class="javadoctag"> @return</span></div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> GenericDao&lt;Model, PK&gt; <span class="title">getDao</span>();</div><div class="line"></div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> List <span class="title">getModels</span>(Page&lt;Model&gt; page, Model model) {</div><div class="line">        <span class="keyword">return</span> getDao().selectAndPage(page, model);</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> Integer <span class="title">addModel</span>(Model model) {</div><div class="line">        <span class="keyword">return</span> getDao().insertSelective(model);</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> Integer <span class="title">removeModelById</span>(PK id) {</div><div class="line">        <span class="keyword">return</span> getDao().deleteByPrimaryKey(id);</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> Integer <span class="title">modifyModelById</span>(Model model) {</div><div class="line">        <span class="keyword">return</span> getDao().updateByPrimaryKeySelective(model);</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> Model <span class="title">getModelById</span>(PK id) {</div><div class="line">        <span class="keyword">return</span> getDao().selectByPrimaryKey(id);</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>熟练使用该模式, 开发一套业务逻辑的增删改查, 那速度是相当快.</p>
<p>针对前段也做了一些组件式的封装, 表格采用<code>backgrid.js</code>完成展示及分页操作, 只需要在html文件指定位置写入两个带id的html元素(一个用于展示表格, 一个用于分页), 之后copy写好的js模板, 在js中修改属性便可快速完成表格异步分页.</p>
<p>接下来将陆续发布实战干货.</p>
<h2 id="本系列文章">本系列文章</h2>
<ul>
<li><a href="http://arccode.net/2015/04/08/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%8C%E5%85%A8%E5%88%86%E7%A6%BB%E5%88%9D%E6%8E%A2/" target="_blank" rel="external">前后端完全分离初探</a></li>
<li><a href="http://arccode.net/2015/04/18/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%8C%E5%85%A8%E5%88%86%E7%A6%BB%E4%B9%8BAPI%E8%AE%BE%E8%AE%A1/" target="_blank" rel="external">前后端完全分离之API设计</a></li>
<li>前后端完全分离之安全认证与授权-上</li>
<li>前后端完全分离之安全认证与授权-下</li>
<li>前后端完全分离之前端模块化开发</li>
<li>前后端完全分离之前端路由系统</li>
<li>前后端完全分离之后端面向服务的模块化开发</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="核心思路">核心思路</h2>
<p>后端负责业务逻辑处理, 前端负责展示逻辑的处理.</p>
<h2 id="背景">背景</h2>
<ul>
<li><p>2013年3月,首次接触了<a href="http://underscorejs.org/" target="_blank" rel="external">underscore.js</a>这个区区45k大小的js库, 在使用其提供的简单模板完成表格异步分页后,从此我开始慢慢践行前后端完全分离的架构.</p>
</li>
<li><p>2013年7月,我接触到了REST这种重用HTTP应用协议的架构, 更坚定了我践行前后端分离的决心.</p>
</li>
<li><p>2014年3月,国内刮起了nodeJS的风暴, 此时我采用国外的一个开源项目<a href="http://mean.io/" target="_blank" rel="external">MEAN</a>开发了一套完整的CMS系统, 此次开发学习到了API接口如何标准化, API具体的设计参考了<a href="https://developer.github.com/v3/" target="_blank" rel="external">github API</a>, <a href="https://instagram.com/developer/endpoints/" target="_blank" rel="external">Instagram API</a>.</p>
</li>
<li><p>2015年1月, 公司开发新产品, 需要新开发一套支持平台及数据下发平台, 在该产品中我主要参与API的设计, 并主导开发支撑平台, 下面我就介绍下这套支撑平台.</p>
</li>
</ul>
]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="Javascript" scheme="http://arccode.net/tags/Javascript/"/>
    
      <category term="Rest" scheme="http://arccode.net/tags/Rest/"/>
    
      <category term="架构" scheme="http://arccode.net/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[冒泡型事件和捕获型事件]]></title>
    <link href="http://arccode.net/2015/03/06/%E5%86%92%E6%B3%A1%E5%9E%8B%E4%BA%8B%E4%BB%B6%E5%92%8C%E6%8D%95%E8%8E%B7%E5%9E%8B%E4%BA%8B%E4%BB%B6/"/>
    <id>http://arccode.net/2015/03/06/冒泡型事件和捕获型事件/</id>
    <published>2015-03-06T01:18:47.000Z</published>
    <updated>2015-03-06T01:37:28.000Z</updated>
    <content type="html"><![CDATA[<p>冒泡型事件的基本思想是、事件按照从最特定的事件目标到最不特定的事件目标(document对象)的顺序触发。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span>   </div><div class="line">    <span class="tag">&lt;<span class="title">head</span>&gt;</span>   </div><div class="line">        <span class="tag">&lt;<span class="title">title</span>&gt;</span><span class="tag">&lt;/<span class="title">title</span>&gt;</span>   </div><div class="line">    <span class="tag">&lt;/<span class="title">head</span>&gt;</span>   </div><div class="line">    <span class="tag">&lt;<span class="title">body</span> <span class="attribute">onclick</span>=<span class="value">"theClick()"</span>&gt;</span>   </div><div class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">onclick</span>=<span class="value">"theClick()"</span>&gt;</span>点击<span class="tag">&lt;/<span class="title">div</span>&gt;</span>   </div><div class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span>   </div><div class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></div></pre></td></tr></table></figure>

<a id="more"></a>

<p>IE5.5冒泡顺序如下：</p>
<p>(1)&lt;div&gt;</p>
<p>(2)&lt;body&gt;</p>
<p>(3)&lt;document&gt;</p>
<p><img src="/images/javascript/javascript-capture-bubble-1.jpg" alt=""></p>
<p>为什么称作冒泡、因为事件按照DOM的层次结构像水泡一样不断上升。让我想起了一首歌：”吹泡泡、吹泡泡、泡泡飞啊飞得高、飞到天空中、问声太阳好”。</p>
<p>IE6呢、稍微修改了冒泡型事件、这样&lt;html&gt;元素也可以接收冒泡的事件、还是上面的代码。</p>
<p>IE6的冒泡顺序如下：</p>
<p>(1)&lt;div&gt;</p>
<p>(2)&lt;body&gt;</p>
<p>(3)&lt;html&gt;</p>
<p>(4)&lt;document&gt;</p>
<p><img src="/images/javascript/javascript-capture-bubble-2.jpg" alt=""></p>
<p>Mozilla1.0及更高版本也支持冒泡事件但到达了另一层次。类似IE6.0，它也支持&lt;html&gt;元素级别的事件、不过，事件”起泡”一直上升到Windows窗口对象。继续前面的代码、点击&lt;div&gt;元素将造成下图所示的事件冒泡：</p>
<p><img src="/images/javascript/javascript-capture-bubble-3.jpg" alt=""></p>
<p>捕获型事件：</p>
<p>IE使用冒泡型事件、相对的、Netscape使用了另一种称为捕获型事件(eventcapturing)的解决方案、事件的捕获和冒泡刚好相反的两种 过程——捕获型事件中、事件从最不精确的对象(document对象)开始触发、然后到最精确(也可以在窗口级别捕获事件，不过必寻由开发人员特别指 定)。Netscape不会将页面上的很多元素暴露给事件。继续使用前面的代码示例、事件按照下面的路径传播：</p>
<p>(1)document</p>
<p>(2)&lt;div&gt;</p>
<p>有些人也称之为自顶向下的事件模型，因为它是从DOM层次的顶端开始向下延伸的：</p>
<p><img src="/images/javascript/javascript-capture-bubble-4.jpg" alt=""></p>
<p>DOM事件流：</p>
<p>DOM(文档对象模型)结构是一个树型结构，当一个HTML元素产生一个事件时，该事件会在元素结点与根节点之间按特定的顺序传播，路径所经过的节点都会收到该事件，这个传播过程可称为DOM事件流。事件顺序有两种类型：事件捕捉和事件冒泡。</p>
<p>DOM标准的事件模型</p>
<p>我们已经对上面两个不同的事件模型进行了解释和对比。DOM标准同时支持两种事件模型，即捕获型事件与冒泡型事件，但是，捕获型事件先发生。两种事件流都 会触发DOM中的所有对象，从document对象开始，也在document对象结束（大部分兼容标准的浏览器会继续将事件是捕捉/冒泡延续到 window对象）。继续使用前面的例子、在与DOM兼容的浏览器中点击&lt;div&gt;元素时、事件流的进行如下图：</p>
<p><img src="/images/javascript/javascript-capture-bubble-5.jpg" alt=""></p>
<p>注意因为事件的目标(&lt;div&gt;元素)是最精确的元素(于是，在DOM树中最深)，实际上它会接收两次事件，一次在捕获过程中，另一次在冒泡 过程中。DOM事件模型的最独特的性质是，文本节点也触发事件(在IE不会)。所以如果点击示例中的&lt;div&gt;点 击&lt;/div&gt;、实际的事件流应该是：</p>
<p><img src="/images/javascript/javascript-capture-bubble-6.jpg" alt=""></p>
<p>参考资料</p>
<ul>
<li><a href="http://hzw2312.blog.51cto.com/2590340/780230" target="_blank" rel="external">好好学一遍JavaScript 笔记(八)——冒泡型事件、捕获型事件</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>冒泡型事件的基本思想是、事件按照从最特定的事件目标到最不特定的事件目标(document对象)的顺序触发。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span>   </div><div class="line">    <span class="tag">&lt;<span class="title">head</span>&gt;</span>   </div><div class="line">        <span class="tag">&lt;<span class="title">title</span>&gt;</span><span class="tag">&lt;/<span class="title">title</span>&gt;</span>   </div><div class="line">    <span class="tag">&lt;/<span class="title">head</span>&gt;</span>   </div><div class="line">    <span class="tag">&lt;<span class="title">body</span> <span class="attribute">onclick</span>=<span class="value">"theClick()"</span>&gt;</span>   </div><div class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">onclick</span>=<span class="value">"theClick()"</span>&gt;</span>点击<span class="tag">&lt;/<span class="title">div</span>&gt;</span>   </div><div class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span>   </div><div class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
      <category term="Javascript" scheme="http://arccode.net/tags/Javascript/"/>
    
      <category term="Event" scheme="http://arccode.net/tags/Event/"/>
    
      <category term="Javascript" scheme="http://arccode.net/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[致我们即将逝去的高中]]></title>
    <link href="http://arccode.net/2015/03/01/%E8%87%B4%E6%88%91%E4%BB%AC%E5%8D%B3%E5%B0%86%E9%80%9D%E5%8E%BB%E7%9A%84%E9%AB%98%E4%B8%AD/"/>
    <id>http://arccode.net/2015/03/01/致我们即将逝去的高中/</id>
    <published>2015-03-01T04:22:50.000Z</published>
    <updated>2015-03-01T04:51:45.000Z</updated>
    <content type="html"><![CDATA[<p><strong>看见一位朋友画了这篇漫画, 深有体会, 特此转载到该博文, 其实除了高中, 我们的初中又何尝不是如此呢!</strong></p>
<p><strong>以前我们嚷着不想上课，以后，我们再也不用上课了……</strong></p>
<h6 id="三年前，懵懂的我们踏进了校园。">三年前，懵懂的我们踏进了校园。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_1.jpeg" alt=""></p>
<h6 id="不解释。">不解释。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_2.jpeg" alt=""></p>
<a id="more"></a>

<h6 id="百日誓师，我们志在必得。">百日誓师，我们志在必得。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_3.jpeg" alt=""></p>
<h6 id="各种不服气。">各种不服气。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_4.jpeg" alt=""></p>
<h6 id="女生一起去厕所，男生在厕所抽烟的日子悄然离去。">女生一起去厕所，男生在厕所抽烟的日子悄然离去。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_5.jpeg" alt=""></p>
<h6 id="那些欢乐的时光一去不复返了。">那些欢乐的时光一去不复返了。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_6.jpeg" alt=""></p>
<h6 id="泡面永远是命中率最高的，在食堂，在宿舍，在楼道，在班里……无处不在的快餐。">泡面永远是命中率最高的，在食堂，在宿舍，在楼道，在班里……无处不在的快餐。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_7.jpeg" alt=""></p>
<h6 id="我们的拔河比赛，场场精彩，每个人都拼尽了全力。">我们的拔河比赛，场场精彩，每个人都拼尽了全力。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_8.jpeg" alt=""></p>
<h6 id="万恶的熄灯制度，逼我们钻被窝，举个小手电看小说。">万恶的熄灯制度，逼我们钻被窝，举个小手电看小说。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_9.jpeg" alt=""></p>
<h6 id="情人节，圣诞节，元旦节，七夕节……中学的时光里，节节都是情人节，节节快乐！">情人节，圣诞节，元旦节，七夕节……中学的时光里，节节都是情人节，节节快乐！</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_10.jpeg" alt=""></p>
<h6 id="成绩不好时，给家人打电话是最安慰的时光。">成绩不好时，给家人打电话是最安慰的时光。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_11.jpeg" alt=""></p>
<h6 id="再也看不见热水房那长长的队伍。">再也看不见热水房那长长的队伍。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_12.jpeg" alt=""></p>
<h6 id="宣传栏里的那些新鲜事、新资讯和同学们的获奖作品，渐渐淡出了我们的视野。">宣传栏里的那些新鲜事、新资讯和同学们的获奖作品，渐渐淡出了我们的视野。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_13.jpeg" alt=""></p>
<h6 id="高中男生最喜欢玩的这种游戏。">高中男生最喜欢玩的这种游戏。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_14.jpeg" alt=""></p>
<h6 id="染指流年，自习课、自习室的那些光景一去不复返。">染指流年，自习课、自习室的那些光景一去不复返。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_15.jpeg" alt=""></p>
<h6 id="每天的课间操，总是回荡着我们此起彼伏的口号声。">每天的课间操，总是回荡着我们此起彼伏的口号声。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_16.jpeg" alt=""></p>
<h6 id="以后我们再也不用三三俩俩，在打铃的那一秒飞奔进教室。">以后我们再也不用三三俩俩，在打铃的那一秒飞奔进教室。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_17.jpeg" alt=""></p>
<h6 id="那些上课神侃、偷吃、书山缝里上人人刷围脖的日子，将要一去不复返。">那些上课神侃、偷吃、书山缝里上人人刷围脖的日子，将要一去不复返。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_18.jpeg" alt=""></p>
<h6 id="兄弟一起看球的日子，再没有了。">兄弟一起看球的日子，再没有了。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_19.jpeg" alt=""></p>
<h6 id="离别倒计时开启，滴答滴答……">离别倒计时开启，滴答滴答……</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_20.jpeg" alt=""></p>
<h6 id="以后我们天各一方，再也没有往昔朝夕相处的日子，各自珍重！">以后我们天各一方，再也没有往昔朝夕相处的日子，各自珍重！</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_21.jpeg" alt=""></p>
<h6 id="声明">声明</h6>
<p>该文章属于转载,<a href="http://blog.qq.com/qzone/80796072/1369490464.htm" target="_blank" rel="external">原文(致我们即将逝去的高中—终生难忘的回忆!)</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>看见一位朋友画了这篇漫画, 深有体会, 特此转载到该博文, 其实除了高中, 我们的初中又何尝不是如此呢!</strong></p>
<p><strong>以前我们嚷着不想上课，以后，我们再也不用上课了……</strong></p>
<h6 id="三年前，懵懂的我们踏进了校园。">三年前，懵懂的我们踏进了校园。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_1.jpeg" alt=""></p>
<h6 id="不解释。">不解释。</h6>
<p><img src="/images/cartoon/zhi_gao_zhong_2.jpeg" alt=""></p>
]]>
    
    </summary>
    
      <category term="图集" scheme="http://arccode.net/tags/%E5%9B%BE%E9%9B%86/"/>
    
      <category term="漫画" scheme="http://arccode.net/tags/%E6%BC%AB%E7%94%BB/"/>
    
      <category term="图集" scheme="http://arccode.net/categories/%E5%9B%BE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[图集]]></title>
    <link href="http://arccode.net/2015/02/28/%E5%9B%BE%E9%9B%86/"/>
    <id>http://arccode.net/2015/02/28/图集/</id>
    <published>2015-02-28T13:59:55.000Z</published>
    <updated>2015-03-01T04:53:46.000Z</updated>
    <content type="html"><![CDATA[<p><strong>今天看了些图片, 觉得很唯美, 特制作该图集, 用于收集唯美之图</strong></p>
<h6 id="妈妈(这个世界上最美的女人)">妈妈(这个世界上最美的女人)</h6>
<p><img src="/images/pics/pic_1.jpg" alt=""></p>
<h6 id="人生最可悲的事情，莫过于胸怀大志，却又虚度光阴。">人生最可悲的事情，莫过于胸怀大志，却又虚度光阴。</h6>
<p><img src="/images/pics/pic_2.jpg" alt=""></p>
<h6 id="用叶子来诠释生命的循环，从诞生到死亡，直至腐烂，人生如是。">用叶子来诠释生命的循环，从诞生到死亡，直至腐烂，人生如是。</h6>
<p><img src="/images/pics/pic_3.jpg" alt=""></p>
<a id="more"></a>]]></content>
    <summary type="html">
    <![CDATA[<p><strong>今天看了些图片, 觉得很唯美, 特制作该图集, 用于收集唯美之图</strong></p>
<h6 id="妈妈(这个世界上最美的女人)">妈妈(这个世界上最美的女人)</h6>
<p><img src="/images/pics/pic_1.jpg" alt=""></p>
<h6 id="人生最可悲的事情，莫过于胸怀大志，却又虚度光阴。">人生最可悲的事情，莫过于胸怀大志，却又虚度光阴。</h6>
<p><img src="/images/pics/pic_2.jpg" alt=""></p>
<h6 id="用叶子来诠释生命的循环，从诞生到死亡，直至腐烂，人生如是。">用叶子来诠释生命的循环，从诞生到死亡，直至腐烂，人生如是。</h6>
<p><img src="/images/pics/pic_3.jpg" alt=""></p>
]]>
    
    </summary>
    
      <category term="图集" scheme="http://arccode.net/tags/%E5%9B%BE%E9%9B%86/"/>
    
      <category term="随笔" scheme="http://arccode.net/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="图集" scheme="http://arccode.net/categories/%E5%9B%BE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git-简明指南]]></title>
    <link href="http://arccode.net/2015/02/28/Git-%E7%AE%80%E6%98%8E%E6%8C%87%E5%8D%97/"/>
    <id>http://arccode.net/2015/02/28/Git-简明指南/</id>
    <published>2015-02-28T02:35:16.000Z</published>
    <updated>2015-02-28T06:35:10.000Z</updated>
    <content type="html"><![CDATA[<p>助你入门 git 的简明指南，木有高深内容 ;)</p>
<h2 id="安装">安装</h2>
<p><a href="http://code.google.com/p/git-osx-installer/downloads/list?can=3" target="_blank" rel="external">下载 git OSX 版</a></p>
<p><a href="http://msysgit.github.io/" target="_blank" rel="external">下载 git Windows 版</a></p>
<p><a href="http://book.git-scm.com/2_installing_git.html" target="_blank" rel="external">下载 git Linux 版</a></p>
<h2 id="工作流程图">工作流程图</h2>
<h3 id="概要">概要</h3>
<p><img src="/images/git_operate_pic_1.png" alt=""></p>
<a id="more"></a>

<h3 id="详情">详情</h3>
<p><img src="/images/git_operate_pic_2.png" alt=""></p>
<h2 id="创建新仓库">创建新仓库</h2>
<p>创建新文件夹，打开，然后执行如下命令创建新的git仓库。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">init</span></div></pre></td></tr></table></figure>

<h2 id="检出仓库">检出仓库</h2>
<p>执行如下命令以创建一个本地仓库的克隆</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone /path/<span class="keyword">to</span>/repository</div></pre></td></tr></table></figure>

<p>如果是远端服务器上的仓库，你的命令会是这个</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone username<span class="variable">@host</span><span class="symbol">:/path/to/repository</span></div></pre></td></tr></table></figure>

<h2 id="工作流">工作流</h2>
<p>你的本地仓库由 git 维护的三棵“树”组成。第一个是你的 <code>工作目录</code>，它持有实际文件；第二个是 <code>暂存区（Index）</code>，它像个缓存区域，临时保存你的改动；最后是 <code>HEAD</code>，它指向你最后一次提交的结果.</p>
<p><img src="/images/trees.png" alt=""></p>
<h2 id="添加和提交">添加和提交</h2>
<p>你可以提出更改（把它们添加到暂存区），使用如下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">add</span> &lt;filename&gt;</div><div class="line">git <span class="built_in">add</span> *</div></pre></td></tr></table></figure>

<p>这是 git 基本工作流程的第一步；使用如下命令以实际提交改动：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="operator"><span class="keyword">commit</span> -m <span class="string">"代码提交信息"</span></span></div></pre></td></tr></table></figure>

<p>现在，你的改动已经提交到了 <strong>HEAD</strong>，但是还没到你的远端仓库。</p>
<h2 id="推送改动">推送改动</h2>
<p>你的改动现在已经在本地仓库的 <strong>HEAD</strong> 中了。执行如下命令以将这些改动提交到远端</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">push</span> origin master</div></pre></td></tr></table></figure>

<p>可以把 <em>master</em> 换成你想要推送的任何分支。</p>
<p>如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote <span class="built_in">add</span> origin &lt;server&gt;</div></pre></td></tr></table></figure>

<p>如此你就能够将你的改动推送到所添加的服务器上去了。</p>
<h2 id="分支">分支</h2>
<p>分支是用来将特性开发绝缘开来的。在你创建仓库的时候，<em>master</em> 是“默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。</p>
<p><img src="/images/branches.png" alt=""></p>
<p>创建一个叫做“feature_x”的分支，并切换过去：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">git</span> checkout -b feature_x</div></pre></td></tr></table></figure>

<p>切换回主分支：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">git</span> checkout master</div></pre></td></tr></table></figure>

<p>再把新建的分支删掉：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch <span class="operator">-d</span> feature_x</div></pre></td></tr></table></figure>

<p>除非你将分支推送到远端仓库，不然该分支就是 <em>不为他人所见的</em>：</p>
<p><code>git push origin &lt;branch&gt;</code></p>
<h2 id="更新与合并">更新与合并</h2>
<p>要更新你的本地仓库至最新改动，执行：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">git</span> pull</div></pre></td></tr></table></figure>

<p>可在你的工作目录中 <em>获取（fetch）</em> 并 <em>合并（merge）</em> 远端的改动。</p>
<p>要合并其他分支到你的当前分支（例如 master），执行：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git merge <span class="tag">&lt;<span class="title">branch</span>&gt;</span></div></pre></td></tr></table></figure>

<p>在这两种情况下，git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现<em>冲突（conflicts）</em>。这时候就需要你修改这些文件来手动合并这些<em>冲突（conflicts）</em>。改完之后，你需要执行如下命令以将它们标记为合并成功：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">add</span> &lt;filename&gt;</div></pre></td></tr></table></figure>

<p>在合并改动之前，你可以使用如下命令预览差异：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="input"><span class="prompt">git diff &lt;source_branch&gt;</span> &lt;target_branch&gt;</span></div></pre></td></tr></table></figure>

<h2 id="标签">标签</h2>
<p>为软件发布创建标签是推荐的。这个概念早已存在，在 SVN 中也有。你可以执行如下命令创建一个叫做<em>1.0.0</em> 的标签：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">tag</span> <span class="number">1.0</span>.<span class="number">0</span> <span class="number">1</span>b2e1d63ff</div></pre></td></tr></table></figure>

<p><em>1b2e1d63ff</em> 是你想要标记的提交 ID 的前 10 位字符。可以使用下列命令获取提交 ID：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">log</span></div></pre></td></tr></table></figure>

<p>你也可以使用少一点的提交 ID 前几位，只要它的指向具有唯一性。</p>
<h2 id="替换本地改动">替换本地改动</h2>
<p>假如你操作失误（当然，这最好永远不要发生），你可以使用如下命令替换掉本地改动：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">git</span> <span class="comment">checkout</span> <span class="literal">-</span><span class="literal">-</span> &lt;<span class="comment">filename</span>&gt;</div></pre></td></tr></table></figure>

<p>此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到暂存区的改动以及新文件都不会受到影响。</p>
<p>假如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git fetch origin</div><div class="line"></div><div class="line">git <span class="operator"><span class="keyword">reset</span> <span class="comment">--hard origin/master</span></span></div></pre></td></tr></table></figure>

<h2 id="实用小贴士">实用小贴士</h2>
<p>内建的图形化 git：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gitk</div></pre></td></tr></table></figure>

<p>彩色的 git 输出：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">git</span> config color.ui <span class="built_in">true</span></div></pre></td></tr></table></figure>

<p>显示历史记录时，每个提交的信息只显示一行：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config <span class="built_in">format</span>.pretty oneline</div></pre></td></tr></table></figure>

<p>交互式添加文件到暂存区：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">add</span> -<span class="keyword">i</span></div></pre></td></tr></table></figure>

<h2 id="图形化客户端">图形化客户端</h2>
<ul>
<li><a href="http://gitx.laullon.com/" target="_blank" rel="external">GitX (L) (OSX, 开源软件)</a></li>
<li><a href="http://www.git-tower.com/" target="_blank" rel="external">Tower (OSX)</a></li>
<li><a href="http://www.sourcetreeapp.com/" target="_blank" rel="external">Source Tree (OSX, 免费)</a></li>
<li><a href="http://mac.github.com/" target="_blank" rel="external">GitHub for Mac (OSX, 免费)</a></li>
<li><a href="https://itunes.apple.com/gb/app/gitbox/id403388357?mt=12" target="_blank" rel="external">GitBox (OSX, App Store)</a></li>
</ul>
<h2 id="指南和手册">指南和手册</h2>
<ul>
<li><a href="http://book.git-scm.com/" target="_blank" rel="external">Git 社区参考书</a></li>
<li><a href="http://progit.org/book/" target="_blank" rel="external">专业 Git</a></li>
<li><a href="http://think-like-a-git.net/" target="_blank" rel="external">像 git 那样思考</a></li>
<li><a href="http://help.github.com/" target="_blank" rel="external">GitHub 帮助</a></li>
<li><a href="http://marklodato.github.io/visual-git-guide/index-zh-cn.html" target="_blank" rel="external">图解 Git</a></li>
</ul>
<h2 id="参考资料">参考资料</h2>
<ul>
<li><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="external">git - 简明指南</a></li>
<li><a href="http://nettedfish.sinaapp.com/blog/2013/08/05/deep-into-git-with-diagrams/" target="_blank" rel="external">图解GIT</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>助你入门 git 的简明指南，木有高深内容 ;)</p>
<h2 id="安装">安装</h2>
<p><a href="http://code.google.com/p/git-osx-installer/downloads/list?can=3" target="_blank" rel="external">下载 git OSX 版</a></p>
<p><a href="http://msysgit.github.io/" target="_blank" rel="external">下载 git Windows 版</a></p>
<p><a href="http://book.git-scm.com/2_installing_git.html" target="_blank" rel="external">下载 git Linux 版</a></p>
<h2 id="工作流程图">工作流程图</h2>
<h3 id="概要">概要</h3>
<p><img src="/images/git_operate_pic_1.png" alt=""></p>
]]>
    
    </summary>
    
      <category term="Git" scheme="http://arccode.net/tags/Git/"/>
    
      <category term="版本控制" scheme="http://arccode.net/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Nginx配置小记]]></title>
    <link href="http://arccode.net/2015/02/27/Nginx%E9%85%8D%E7%BD%AE%E5%B0%8F%E8%AE%B0/"/>
    <id>http://arccode.net/2015/02/27/Nginx配置小记/</id>
    <published>2015-02-27T07:37:23.000Z</published>
    <updated>2015-02-28T09:05:39.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>之前一直使用Apache做静态资源私服及反向代理, 配置稍显复杂, 今天使用nginx来替换Apache, 在此小记一下探索的过程及碰到的问题.</p>
<h2 id="安装">安装</h2>
<p>本人使用Mac系统, 偷懒的使用了homebrew, 一键完成了安装. 对于其它<code>OS</code>使用解压<code>zip</code>的方式.</p>
<p>下面从安装—&gt;配置(静态资源私服 php 反向代理)—&gt;问题展开吧</p>
<a id="more"></a>

<h3 id="安装Homebrew">安装Homebrew</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ruby <span class="operator">-e</span> <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></div><div class="line"></div><div class="line">brew cleanup</div><div class="line"></div><div class="line">brew doctor</div></pre></td></tr></table></figure>

<h3 id="安装Nginx">安装Nginx</h3>
<p>安装</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew <span class="operator"><span class="keyword">install</span> nginx</span></div></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> nginx</div></pre></td></tr></table></figure>

<p>停止</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> nginx <span class="operator">-s</span> stop</div></pre></td></tr></table></figure>

<h2 id="配置">配置</h2>
<h3 id="文件目录">文件目录</h3>
<p>nginx安装文件目录</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/usr/</span>local<span class="regexp">/Cellar/</span>nginx</div></pre></td></tr></table></figure>

<p>nginx配置文件目录</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/usr/</span>local<span class="regexp">/etc/</span>nginx</div></pre></td></tr></table></figure>

<p>系统hosts位置</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/<span class="keyword">private</span>/etc/hosts</div></pre></td></tr></table></figure>

<h3 id="配置nginx">配置nginx</h3>
<p>使用多个配置来管理nginx下的多个websites</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> /usr/local/etc/nginx</div><div class="line"></div><div class="line"><span class="built_in">mkdir</span> <span class="keyword">conf</span>.<span class="keyword">d</span></div><div class="line"></div><div class="line"><span class="keyword">vim</span> /usr/local/etc/nginx/nginx.<span class="keyword">conf</span></div></pre></td></tr></table></figure>

<p>在nginx.conf中进行修改, 大致配置可如下, 详细配置见<a href="http://nginx.org/cn/docs/" target="_blank" rel="external">官方文档</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="title">user</span>  your_username staff;</div><div class="line"><span class="title">worker_processes</span>  <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="title">events</span> {</div><div class="line">    <span class="title">worker_connections</span>  <span class="number">1024</span>;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="title">http</span> {</div><div class="line">    <span class="title">include</span>       mime.types;</div><div class="line">    <span class="title">default_type</span>  application/octet-stream;</div><div class="line">    <span class="title">sendfile</span>        <span class="built_in">on</span>;</div><div class="line">    <span class="title">keepalive_timeout</span>  <span class="number">65</span>;</div><div class="line">    <span class="title">include</span> conf.d/<span class="regexp">*.conf</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<p>注意修改该配置中的<code>your_username</code>为你的Mac用户名.</p>
<p>到此父级配置已配置完成, 接下来配置用户希望的功能, 例如静态资源私服或反向代理.</p>
<p>配置自己的静态资源服务器(username.conf), 如下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="title">server</span> {</div><div class="line">        <span class="title">listen</span>       <span class="number">80</span>;</div><div class="line">        <span class="title">server_name</span>  resource.com;</div><div class="line">        <span class="title">charset</span> utf-<span class="number">8</span>,gbk; </div><div class="line">        <span class="title">location</span> / {</div><div class="line">            <span class="title">root</span>   /Users/username/resource;</div><div class="line">            <span class="comment">#index  index.html index.htm;</span></div><div class="line">            <span class="title">autoindex</span> <span class="built_in">on</span>;</div><div class="line">            <span class="title">autoindex_exact_size</span> <span class="built_in">on</span>;</div><div class="line">            <span class="title">autoindex_localtime</span> <span class="built_in">on</span>;</div><div class="line">        }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>配置反向代理, 如下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="title">server</span> {</div><div class="line">    <span class="title">listen</span>       <span class="number">80</span>;</div><div class="line">    <span class="title">server_name</span>  app.com;</div><div class="line">	</div><div class="line">	<span class="comment"># oauth2的资源服务器</span></div><div class="line">	<span class="title">location</span> / {</div><div class="line">		<span class="title">proxy_set_header</span>        Host <span class="variable">$http_host</span>;</div><div class="line">	    <span class="title">proxy_pass</span> <span class="url">http://localhost:8080/resource-app/</span>;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="title">location</span> /resource-app/ {</div><div class="line">		<span class="title">proxy_set_header</span>        Host <span class="variable">$http_host</span>;</div><div class="line">	    <span class="title">proxy_pass</span> <span class="url">http://localhost:8080/resource-app/</span>;</div><div class="line">	}</div><div class="line">	</div><div class="line">	<span class="comment"># oauth2的授权服务器	</span></div><div class="line">	<span class="title">location</span> /actor-app/ {</div><div class="line">		<span class="title">proxy_set_header</span>        Host <span class="variable">$http_host</span>;</div><div class="line">	    <span class="title">proxy_pass</span> <span class="url">http://localhost:8082/actor-app/</span>;</div><div class="line">	}</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="配置Php">配置Php</h3>
<p>安装php-fpm</p>
<p>Mac OSX 10.9的系统自带了PHP、php-fpm，省去了安装php-fpm的麻烦。 这里需要简单地修改下php-fpm的配置，否则运行php-fpm会报错。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo <span class="keyword">cp</span> /private/etc/php-fpm.<span class="keyword">conf</span>.default /private/etc/php-fpm.<span class="keyword">conf</span></div><div class="line"><span class="keyword">vim</span> /private/etc/php-fpm.<span class="keyword">conf</span></div></pre></td></tr></table></figure>

<p>修改php-fpm.conf文件中的error_log项，默认该项被注释掉，这里需要去注释并且修改为error_log = /usr/local/var/log/php-fpm.log。如果不修改该值，运行php-fpm的时候会提示log文件输出路径不存在的错误。</p>
<h3 id="配置hosts">配置hosts</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /<span class="keyword">private</span>/etc/hosts</div></pre></td></tr></table></figure>

<p>在末尾加入如下代码, 该域名是<code>nginx</code>中<code>server</code>指定的<code>server_name</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 针对静态资源私服</span></div><div class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> resource.com</div><div class="line"><span class="preprocessor"># 针对反向代理</span></div><div class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> app.com</div></pre></td></tr></table></figure>

<p>配置完毕, 在浏览器中键入<code>http://resource.com/</code>可以对指定目录的文件进行浏览,下载; 键入<code>http://app.com/resource-app</code>或<code>http://app.com/actor-app</code>可分别进入不同的应用.</p>
<h2 id="测试">测试</h2>
<p>在<code>root</code>根目录中创建文件index.php, 内容如下,</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="preprocessor">&lt;?php</span> phpinfo(); <span class="preprocessor">?&gt;</span></span></div></pre></td></tr></table></figure>

<p>启动nginx</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> nginx</div></pre></td></tr></table></figure>

<p>重启nginx</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> nginx <span class="operator">-s</span> reload</div></pre></td></tr></table></figure>

<p>停止nginx</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> nginx <span class="operator">-s</span> stop</div></pre></td></tr></table></figure>

<p>启动php</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> php-fpm</div></pre></td></tr></table></figure>

<p>在浏览器中输入<code>http://resource.com/index.php</code>即可看到php的详细信息.</p>
<h2 id="问题">问题</h2>
<p>1.键入<code>http://resource.com/</code>, 服务器返回<code>403</code>界面</p>
<p>该问题是因为访问权限不够造成, 在<code>nginx.conf</code>首行配置即可,</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="literal">user</span>  your_username staff<span class="comment">;</span></div></pre></td></tr></table></figure>

<p>2.目录未显示, 只显示index.html页面</p>
<p>该问题是指定站点(website)未启用目录浏览功能, 在指定<code>server</code>的<code>location</code>节点启用目录浏览功能,如下,</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">autoindex <span class="command"><span class="keyword">on</span>;</span></div><div class="line">autoindex_exact_size </div><div class="line">autoindex_localtime <span class="command"><span class="keyword">on</span>;</span></div></pre></td></tr></table></figure>

<h2 id="参考资料">参考资料</h2>
<p><a href="https://gist.github.com/netpoetica/5879685" target="_blank" rel="external">Setting up Nginx on Your Local System</a></p>
<p><a href="http://nginx.org/cn/docs/" target="_blank" rel="external">Nginx文档</a></p>
<p><a href="http://my.oschina.net/chen0dgax/blog/190161" target="_blank" rel="external">Mac OSX 10.9搭建nginx+mysql+php-fpm环境</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>之前一直使用Apache做静态资源私服及反向代理, 配置稍显复杂, 今天使用nginx来替换Apache, 在此小记一下探索的过程及碰到的问题.</p>
<h2 id="安装">安装</h2>
<p>本人使用Mac系统, 偷懒的使用了homebrew, 一键完成了安装. 对于其它<code>OS</code>使用解压<code>zip</code>的方式.</p>
<p>下面从安装—&gt;配置(静态资源私服 php 反向代理)—&gt;问题展开吧</p>
]]>
    
    </summary>
    
      <category term="Mac" scheme="http://arccode.net/tags/Mac/"/>
    
      <category term="Nginx" scheme="http://arccode.net/tags/Nginx/"/>
    
      <category term="负载均衡" scheme="http://arccode.net/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
      <category term="服务器" scheme="http://arccode.net/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RESTful最佳实践]]></title>
    <link href="http://arccode.net/2015/02/26/RESTful%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    <id>http://arccode.net/2015/02/26/RESTful最佳实践/</id>
    <published>2015-02-26T02:50:23.000Z</published>
    <updated>2015-04-20T01:21:45.000Z</updated>
    <content type="html"><![CDATA[<h1 id="背景">背景</h1>
<p>此文为实践总结，是自己在实践过程中积累的经验和”哲学”。部分内容参考相关资料，参考内容请看尾页。建议对RESTful有一定了解者阅读!</p>
<h1 id="哲学">哲学</h1>
<ul>
<li>不要为了RESTful而RESTful</li>
<li>在能表达清楚的情况下，简单就是美</li>
</ul>
<h1 id="接口路径设计">接口路径设计</h1>
<h2 id="接口设计原则">接口设计原则</h2>
<h3 id="URI指向的是唯一的资源对象">URI指向的是唯一的资源对象</h3>
<p><strong>示例:</strong> 指向ID为<code>yanbo.ai</code>的<code>Account</code>对象</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/accounts/yanbo.ai</div></pre></td></tr></table></figure>

<h3 id="URI可以隐式指向唯一的集合列表">URI可以隐式指向唯一的集合列表</h3>
<p><strong>示例:</strong> 隐式地指向trades list 集合</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades/(list)</div><div class="line">等同于</div><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades</div></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="聚合资源必须通过父级资源操作">聚合资源必须通过父级资源操作</h3>
<p><strong>示例:</strong> <code>Profile</code>是<code>User</code>的聚合资源，<code>User</code>有一个唯一且私有的<code>Profile</code>资源，只能通过<code>User</code>操作<code>Profile</code>。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">更新user_id为<span class="number">123456</span>的<span class="constant">Profile</span>资源</div><div class="line"><span class="constant">PUT</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/users/<span class="number">123456</span>/profiles</div><div class="line"><span class="constant">Request</span> <span class="constant">Body</span><span class="symbol">:</span></div><div class="line">{</div><div class="line">    <span class="string">"full_name"</span><span class="symbol">:</span> <span class="string">"yanbo.ai"</span>,</div><div class="line">    <span class="string">"state"</span><span class="symbol">:</span> <span class="string">"Shanghai"</span>,</div><div class="line">    <span class="string">"title"</span><span class="symbol">:</span> <span class="string">"Senior software engineer"</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="组合资源要避免资源路径嵌套">组合资源要避免资源路径嵌套</h3>
<p><strong>示例:</strong> 一个系统里面包含多个 applications，一个 application 又包含多个 users。那获取 user 资源的路径应该是怎样的？</p>
<p>看一个路径嵌套的例子：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/systems/<span class="symbol">:systemId/applications/</span><span class="symbol">:applicationId/users/</span><span class="symbol">:userId</span></div></pre></td></tr></table></figure>

<p>这样做是不合理的，它会让你的接口变得越来越混乱和缺少灵活性。正确的做法是：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/systems/<span class="symbol">:systemId</span></div><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/applications/<span class="symbol">:applicationId</span> </div><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/users/<span class="symbol">:userId/</span></div></pre></td></tr></table></figure>

<h2 id="Http_Methods">Http Methods</h2>
<table>
<thead>
<tr>
<th>HTTP Operation</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>GET</td>
<td>获取，查找</td>
</tr>
<tr>
<td>POST</td>
<td>新增创建</td>
</tr>
<tr>
<td>PUT</td>
<td>更新</td>
</tr>
<tr>
<td>PATCH</td>
<td>部分更新</td>
</tr>
<tr>
<td>DELETE</td>
<td>删除</td>
</tr>
</tbody>
</table>
<h2 id="URL组成">URL组成</h2>
<ol>
<li>网络协议(<em>HTTP</em>, <em>HTTPS</em>)</li>
<li>服务器地址</li>
<li>版本</li>
<li>接口名称</li>
<li>?参数列表</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET http<span class="variable">s:</span>//github.<span class="keyword">com</span>/v1/trades</div></pre></td></tr></table></figure>

<p><strong>为什么需要版本?</strong></p>
<p>当服务被更多其他系统使用的时候，服务的可用性和上下兼容变得至关重要。被外部系统依赖的服务在升级时是一个非常麻烦的事情，既要发布新的接口，又要保留旧的接口留出时间让调用者去升级。在URL中加入<code>Version</code>标示能很好地解决上下兼容(新老版本共存)问题。</p>
<p><strong>示例1:</strong> URL中新增了Path parameter</p>
<p>v1版本</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">GET http://~/v1/trades?user_id</span>=<span class="string">123456</span></div></pre></td></tr></table></figure>

<p>v2版本</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/v</span>2/<span class="symbol">:user_id/trades</span></div></pre></td></tr></table></figure>

<p>示例1中的<code>user_id</code>参数在v2版本被加入到path parameter中，使用<code>$version</code>保证了<code>v1</code>和<code>v2</code>接口的共存。</p>
<p><strong>示例2:</strong> 数据接口发生变化</p>
<p>v1版本</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">GET http:<span class="comment">//~/v1/accounts/yanbo.ai</span></div><div class="line">Response Body:</div><div class="line">{</div><div class="line">    <span class="string">"user_name"</span>: <span class="string">"yanbo.ai"</span>,</div><div class="line">    <span class="string">"e_mail"</span>: <span class="string">"yanbo.ai@gmail.com"</span>,</div><div class="line">    <span class="string">"state"</span>: <span class="string">"Shanghai"</span>,</div><div class="line">    <span class="string">"title"</span>: <span class="string">"Senior software engineer"</span></div><div class="line">}</div></pre></td></tr></table></figure>

<p>v2版本</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">GET http:<span class="comment">//~/v2/accounts/yanbo.ai</span></div><div class="line">Response Body:</div><div class="line">{</div><div class="line">    <span class="string">"user_name"</span>: <span class="string">"yanbo.ai"</span>,</div><div class="line">    <span class="string">"e_mail"</span>: <span class="string">"yanbo.ai@gmail.com"</span>,</div><div class="line">    <span class="string">"profile"</span>: {</div><div class="line">        <span class="string">"state"</span>: <span class="string">"Shanghai"</span>,</div><div class="line">        <span class="string">"title"</span>: <span class="string">"Senior software engineer"</span></div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>示例2中的接口返回数据结构已经发生了变化。使用<code>$version</code>保证了<code>v1</code>和<code>v2</code>接口的共存。</p>
<h2 id="URL定义限制">URL定义限制</h2>
<ol>
<li>不使用大写字母</li>
<li>使用中线<code>-</code>代替下划线<code>_</code></li>
<li>参数列表应该被encode过</li>
</ol>
<h2 id="接口分类">接口分类</h2>
<h3 id="资源对象的CURD操作">资源对象的CURD操作</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades            获取trades列表</div><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades/<span class="symbol">:id</span>        根据id获取单个trade</div><div class="line"><span class="constant">POST</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades           创建trade</div><div class="line"><span class="constant">PUT</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades/<span class="symbol">:id</span>        根据id更新trade</div><div class="line"><span class="constant">PATCH</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades/<span class="symbol">:id</span>      根据id部分更新trade</div><div class="line"><span class="constant">DELETE</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades/<span class="symbol">:id</span>     根据id删除trade</div></pre></td></tr></table></figure>

<h3 id="服务型接口">服务型接口</h3>
<p>使用<code>services</code>标识，根据服务的属性选择http方法。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">http:</span>/<span class="regexp">/~/services</span><span class="regexp">/$version/server</span>-name</div></pre></td></tr></table></figure>

<h3 id="系统设置">系统设置</h3>
<p>使用<code>settings</code>标识，根据服务的属性选择http方法。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">http:</span>/<span class="regexp">/~/settings</span><span class="regexp">/$version/server</span>-name</div></pre></td></tr></table></figure>

<p><strong>示例1:</strong> 搜索</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET <span class="keyword">http</span>://~/services/$<span class="built_in">version</span>/search?q=<span class="built_in">filter</span>?category=<span class="built_in">file</span></div></pre></td></tr></table></figure>

<p><strong>示例2:</strong> 任务队列操作</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PUT <span class="keyword">http</span>://~/services/$<span class="built_in">version</span>/queued/jobs          往任务队列里面添加一个新的任务</div><div class="line">DELETE <span class="keyword">http</span>://~/services/$<span class="built_in">version</span>/queued/jobs/:id   根据id删除任务</div></pre></td></tr></table></figure>

<p><strong>示例3:</strong> 更改界面语言环境</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">PUT <span class="keyword">http</span>://~/settings/$<span class="built_in">version</span>/gui/lang</div><div class="line">{</div><div class="line">    <span class="string">"lang"</span>: <span class="string">"zh-CN"</span></div><div class="line">}</div></pre></td></tr></table></figure>

<p><strong>为什么需要区分?</strong></p>
<p>1.<a href="http://martinfowler.com/articles/microservices.html" title="Microservices" target="_blank" rel="external">Microservices</a></p>
<p><code>Microservices</code>是一个全新的概念，它主要的观点是将一个大型的服务系统分解成多个微型系统。每个微型系统都能独立工作，并且提供各种不同的服务。独立运行的特点使微型系统之间不会产生相互影响，其中的一个微型系统宕机并不会牵连到其他的微型系统。这种架构使<a href="http://googlecloudplatform.blogspot.com/2014/01/large-akka-cluster-on-google-compute.html" title="Large Cluster" target="_blank" rel="external">分布式系统的节点数量</a>大大提升。因为RESTful服务是无状态的，所以这种分解并不会带来状态共享的问题。</p>
<p>2.路由规则(逻辑)</p>
<p>当我们需要对不同属性的接口做路由规则的时候，按功能划分接口是一个很好的方案。例如：我们要对系统设置接口设置增加更严格的调用限制。</p>
<h2 id="缓存">缓存</h2>
<p>网络接口相对于堆栈接口来说数据传输极其不稳定，尽可能地减少数据传输不仅能控制这种风险还能减少流量。使用缓存还能有效地提高后台的吞吐量。 </p>
<p>后台在响应请求时使用响应头<code>E-Tag</code>或<code>Last-Modified</code>来标记数据的版本，前台在发送请求时将数据版本通过请求头<code>If-Match</code>帮助后台判断缓存的使用。</p>
<p><strong>Request Header</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">If-Match</span>: <span class="string">2390239059405940</span></div></pre></td></tr></table></figure>

<p><strong>Response Header</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">E-Tag</span>: <span class="string">2390239059405940</span></div><div class="line"><span class="attribute">Last-Modified</span>: <span class="string">2014-04-05T14:30Z</span></div></pre></td></tr></table></figure>

<h2 id="Bookmarker">Bookmarker</h2>
<p>在实际的环境中，有大量的查询需求是相同的。将这些搜索需求标签化能降低使用难度也可以达到重用的目的。</p>
<p><strong>示例1:</strong> 查找状态为关闭的订单</p>
<p><strong>普通方式</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades?status=closed&sorting=-created_at</div></pre></td></tr></table></figure>

<p><strong>Bookmarker</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades<span class="comment">#recently_closed</span></div></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades/recently_closed</div></pre></td></tr></table></figure>

<h2 id="HATEOAS">HATEOAS</h2>
<p>HATEOAS通过<a href="http://tools.ietf.org/html/rfc5988" title="Web Linking" target="_blank" rel="external">Web Linking</a>的方式来描述程序的状态信息 </p>
<p>Link 主要包含以下属性:</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>rel</td>
<td>关联内容</td>
</tr>
<tr>
<td>href</td>
<td>URL</td>
</tr>
<tr>
<td>type</td>
<td>媒体类型</td>
</tr>
<tr>
<td>method</td>
<td>Http Method</td>
</tr>
<tr>
<td>title</td>
<td>标题</td>
</tr>
<tr>
<td>arguments</td>
<td>参数列表</td>
</tr>
<tr>
<td>value</td>
<td>返回值</td>
</tr>
</tbody>
</table>
<p><code>Rel</code> 可能为以下值:</p>
<table>
<thead>
<tr>
<th>Value</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>next</td>
<td>下一步</td>
</tr>
<tr>
<td>prev</td>
<td>上一步</td>
</tr>
<tr>
<td>first</td>
<td>第一步，最前</td>
</tr>
<tr>
<td>last</td>
<td>最后一步，最后</td>
</tr>
<tr>
<td>source</td>
<td>来源</td>
</tr>
<tr>
<td>self</td>
<td>资源自身，相对于this</td>
</tr>
</tbody>
</table>
<p>Web Linking 可以通过两种方式传递至客户端:</p>
<p><strong>Http Header</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Link: &lt;<span class="keyword">http</span>://~/$<span class="built_in">version</span>/trades?page_no=<span class="number">10</span>&gt;; <span class="built_in">rel</span>=<span class="string">"next"</span>, &lt;<span class="keyword">http</span>://~/$<span class="built_in">version</span>/trades?page_no=<span class="number">19</span>&gt;; <span class="built_in">rel</span>=<span class="string">"last"</span></div></pre></td></tr></table></figure>

<p><strong>Http JSON Body</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">    "<span class="attribute">links</span>": <span class="value">[</span></div><div class="line">        {</div><div class="line">            "<span class="attribute">rel</span>": <span class="value"><span class="string">"next"</span></span>,</div><div class="line">            "<span class="attribute">href</span>": <span class="value"><span class="string">"http://~/$version/trades?page_no=1"</span></span></div><div class="line">        },</div><div class="line">        {</div><div class="line">            "<span class="attribute">rel</span>": <span class="value"><span class="string">"last"</span></span>,</div><div class="line">            "<span class="attribute">href</span>": <span class="value"><span class="string">"http://~/$version/trades?page_no=19"</span></span></div><div class="line">        }</div><div class="line">    ]</div><div class="line">}</div></pre></td></tr></table></figure>

<p><strong>示例1:</strong> 用户注册业务</p>
<ol>
<li>用户填写E-Mail与密码</li>
<li>完善用户资料</li>
</ol>
<p><strong>Register Request</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="constant">POST</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/accounts</div><div class="line"><span class="constant">Headers</span><span class="symbol">:</span></div><div class="line">    <span class="constant">Accept</span><span class="symbol">:</span> application/json</div><div class="line">    <span class="constant">Content</span>-<span class="constant">Type</span><span class="symbol">:</span> application/json;charset=utf-<span class="number">8</span></div><div class="line"><span class="constant">Body</span><span class="symbol">:</span></div><div class="line">    {</div><div class="line">        <span class="string">"username"</span><span class="symbol">:</span> <span class="string">"yanbo.ai@gmail.com"</span>,</div><div class="line">        <span class="string">"e_mail"</span><span class="symbol">:</span> <span class="string">"yanbo.ai@gmail.com"</span>,</div><div class="line">        <span class="string">"password"</span><span class="symbol">:</span> <span class="string">"balabala"</span></div><div class="line">    }</div></pre></td></tr></table></figure>

<p><strong>Register Response</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="label">Headers:</span></div><div class="line">    Content-Type: application/json<span class="comment">;charset=utf-8</span></div><div class="line"><span class="label">Status:</span> <span class="number">201</span> Created</div><div class="line"><span class="label">Body:</span></div><div class="line">    {</div><div class="line">        <span class="string">"uri"</span>: <span class="string">"http://~/$version/accounts/yanbo.ai"</span>,</div><div class="line">        <span class="string">"identity"</span>: <span class="string">"yanbo.ai"</span>,</div><div class="line">        <span class="string">"created_at"</span>: <span class="string">"2014-04-05T14:30Z"</span>,</div><div class="line">        <span class="string">"links"</span>: [</div><div class="line">            {</div><div class="line">                <span class="string">"rel"</span>: <span class="string">"next"</span>,</div><div class="line">                <span class="string">"href"</span>: <span class="string">"http://~/$version/accounts/yanbo.ai/profiles"</span>,</div><div class="line">                <span class="string">"method"</span>: <span class="string">"POST"</span>,</div><div class="line">                <span class="string">"title"</span>: <span class="string">"Editing Profiles"</span>,</div><div class="line">                <span class="string">"arguments"</span>: <span class="string">"status=editing"</span></div><div class="line">            }</div><div class="line">        ]</div><div class="line">    }</div></pre></td></tr></table></figure>

<p><strong>Profile Request</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="constant">POST</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/accounts/yanbo.ai/profiles</div><div class="line"><span class="constant">Headers</span><span class="symbol">:</span></div><div class="line">    <span class="constant">Accept</span><span class="symbol">:</span> application/json</div><div class="line">    <span class="constant">Content</span>-<span class="constant">Type</span><span class="symbol">:</span> application/json;charset=utf-<span class="number">8</span></div><div class="line"><span class="constant">Body</span><span class="symbol">:</span></div><div class="line">    {</div><div class="line">        <span class="string">"full_name"</span><span class="symbol">:</span> <span class="string">"yanbo.ai"</span>,</div><div class="line">        <span class="string">"state"</span><span class="symbol">:</span> <span class="string">"Shanghai"</span>,</div><div class="line">        <span class="string">"title"</span><span class="symbol">:</span> <span class="string">"Senior software engineer"</span></div><div class="line">    }</div></pre></td></tr></table></figure>

<p><strong>Profile Response</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="label">Headers:</span></div><div class="line">    Content-Type: application/json<span class="comment">;charset=utf-8</span></div><div class="line"><span class="label">Status:</span> <span class="number">201</span> Created</div><div class="line"><span class="label">Body:</span></div><div class="line">    {</div><div class="line">        <span class="string">"uri"</span>: <span class="string">"http://~/$version/accounts/yanbo.ai/profiles"</span>,</div><div class="line">        <span class="string">"identity"</span>: <span class="string">"yanbo.ai"</span>,</div><div class="line">        <span class="string">"created_at"</span>: <span class="string">"2014-04-05T14:30Z"</span></div><div class="line">    }</div></pre></td></tr></table></figure>

<p><strong>示例2:</strong> 请看下节&lt;<strong>分页</strong>&gt;</p>
<p><strong>HATEOAS在解决什么问题?</strong></p>
<p><a href="http://en.wikipedia.org/wiki/HATEOAS" title="HATEOAS" target="_blank" rel="external">HATEOAS</a>是Hypermedia as the Engine of Application State的缩写形式，中文意思为：超媒体应用状态引擎。它的核心思想是使用超媒体表达应用状态，与hypertext-driven思想是一致的。在此之前，我们大多数的程序业务控制在前台完成。例如：我们会在前台做注册流程，我们在前台判定下一步应该做什么，可以做什么。当使用HATEOAS时，这些状态流程控制都在应用程序的后台完成。我们使用超媒体来表达前台做完某一步骤之后可以做哪些? 这样一来，前台的任务就变得相当简单了，前台需要处理的是理解状态表述，数据收集和结果显示。</p>
<p><strong>思考</strong></p>
<p>HATEOAS会带来怎样的改变? 使用它的意义在哪?</p>
<h2 id="分页">分页</h2>
<p><strong>Request</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades?page=<span class="number">10</span>&pre_page=<span class="number">100</span></div></pre></td></tr></table></figure>

<p><strong>Response</strong></p>
<p>Link Header</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Link: &lt;http://~/$version/trades?<span class="variable">page=</span><span class="number">11</span>&<span class="variable">pre_page=</span><span class="number">100</span>&gt;; <span class="variable">rel=</span><span class="string">"next"</span>, &lt;http://~/$version/trades?<span class="variable">page=</span><span class="number">19</span>&<span class="variable">pre_page=</span><span class="number">100</span>&gt;; <span class="variable">rel=</span><span class="string">"last"</span></div></pre></td></tr></table></figure>

<p>JSON Body</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">    "<span class="attribute">links</span>": <span class="value">[</span></div><div class="line">        {</div><div class="line">            "<span class="attribute">rel</span>": <span class="value"><span class="string">"next"</span></span>,</div><div class="line">            "<span class="attribute">href</span>": <span class="value"><span class="string">"http://~/$version/trades?page=11&pre_page=100"</span></span></div><div class="line">        },</div><div class="line">        {</div><div class="line">            "<span class="attribute">rel</span>": <span class="value"><span class="string">"last"</span></span>,</div><div class="line">            "<span class="attribute">href</span>": <span class="value"><span class="string">"http://~/$version/trades?page=19&pre_page=100"</span></span></div><div class="line">        }</div><div class="line">    ]</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="安全">安全</h1>
<h2 id="调用限制">调用限制</h2>
<p>为保证服务的可用性应对服务进行调用过载保护</p>
<p><strong>Response Headers</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">X-RateLimit-Limit</span>: <span class="string">3000             调用量的最大限制</span></div><div class="line"><span class="attribute">X-RateLimit-Reset</span>: <span class="string">1403162176516    调用限制重置时间</span></div><div class="line"><span class="attribute">X-RateLimit-Remaining</span>: <span class="string">299          剩余的调用量</span></div></pre></td></tr></table></figure>

<h2 id="安全验证">安全验证</h2>
<p>RESTful服务使用Oauth2的方式进行调用授权，使用http<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html" title="HTTP Header" target="_blank" rel="external">请求头</a><code>Authorization</code>设置授权码; 必须使用<code>User-Agent</code>设置客户端信息, 无<code>User-Agent</code>请求头的请求应该被拒绝访问。</p>
<p><strong>Request Header</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">User-Agent</span>: <span class="string">Data-Server-Client</span></div><div class="line"><span class="attribute">Authorzation</span>: <span class="string">Bearer 383w9JKJLJFw4ewpie2wefmjdlJLDJF</span></div></pre></td></tr></table></figure>

<p><strong>为什么建议使用Oauth2授权?</strong></p>
<p><a href="http://tools.ietf.org/html/rfc6749" title="Oauth2" target="_blank" rel="external">Oauth2</a>的参与者为：客户端，资源所有者，授权服务器，资源服务器。客户端先从资源所有者得到授权码之后使用授权码从授权服务器得到<code>token</code>，再使用<code>token</code>调用资源服务器获取经过资源所有者授权使用的资源。这种授权方式的特点有： </p>
<ol>
<li><p>资源所有者可以随时撤销授权许可 </p>
</li>
<li><p>可以通过撤销<code>token</code>拒绝客户端的调用 </p>
</li>
<li><p>资源服务器可以拒绝客户端的调用 </p>
</li>
</ol>
<p>通过这三种方式可以做到对资源的严格保护。资源的访问权限也把握在资源所有者的手中，而不是资源服务器。 </p>
<p>当然，Oauth2授权框架也允许受信任的客户端直接使用<code>token</code>调用资源服务器获取资源。这种灵活性完全取决于客户端类型和对资源的保护程度。</p>
<p><strong>为什么授权码要放在Http Header中?</strong></p>
<ol>
<li>WEB服务器对访问做记录已经成为了行业的一个标准，访问记录不仅可以用来做访问量统计还能用来做访问特征分析。互联网广告平台就是利用访问记录来做精准营销的。如果<code>token</code>(授权码)包含在URL中就有很大的安全风险。</li>
<li>包含在URL中的<code>token</code>串可能被进行重定向传递。通过这两种方式入侵者可以不通过授权而使用泄漏的授权码访问那些受保护的数据，会造成数据泄漏的风险。</li>
</ol>
<p>以Tomcat为例，访问日志为:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">127.0</span>.<span class="number">0.1</span> - - [<span class="number">24</span><span class="regexp">/Jun/</span><span class="number">2014</span>:<span class="number">14</span>:<span class="number">38</span>:<span class="number">04</span> +<span class="number">0800</span>] <span class="string">"GET /v1/accounts/yanbo.ai?token=dgdreLJLJLER798989erJKJK HTTPS/1.1"</span> <span class="number">200</span> <span class="number">343</span></div></pre></td></tr></table></figure>

<p>通过对访问日志的提取，很容易得到<code>token</code>信息。</p>
<hr>
<h1 id="数据设计">数据设计</h1>
<h2 id="交互原则">交互原则</h2>
<ol>
<li>查询，过滤条件使用query string。</li>
<li>用来描述数据或者请求的元数据放Header中，例如 <code>X-Result-Fields</code>。</li>
<li>Content body 仅仅用来传输数据。</li>
<li>数据要做到拿来就可用的原则，不需要“拆箱”的过程。</li>
<li>使用ISO-8601格式表达时间字段，例如: <code>2014-04-05T14:30Z</code>。</li>
</ol>
<h2 id="结构">结构</h2>
<p>使用JSON格式传输数据，在http请求头和响应头申明<code>Content-Type</code>。返回的数据结构应该做到尽可能简单，不要过于包装。响应状态应该包含在响应头中！</p>
<p><strong>Request</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Accept</span>: <span class="string">application/json</span></div><div class="line"><span class="attribute">Content-Type</span>: <span class="string">application/json;charset=UTF-8</span></div></pre></td></tr></table></figure>

<p><strong>Response</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Content-Type</span>: <span class="string">application/json;charset=UTF-8</span></div></pre></td></tr></table></figure>

<p><strong>错误的做法</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">    "<span class="attribute">status</span>": <span class="value"><span class="number">200</span></span>,</div><div class="line">    "<span class="attribute">data</span>": <span class="value">{</span></div><div class="line">        "<span class="attribute">trade_id</span>": <span class="value"><span class="number">1234</span></span>,</div><div class="line">        "<span class="attribute">trade_name</span>": <span class="value"><span class="string">"Bala bala"</span></span></div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p><strong>正确的做法</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Response</span> Headers:</div><div class="line">    Status: <span class="number">200</span></div><div class="line"><span class="built_in">Response</span> Body:</div><div class="line">    {</div><div class="line">        <span class="string">"trade_id"</span>: <span class="number">1234</span>,</div><div class="line">        <span class="string">"trade_name"</span>: <span class="string">"Bala bala"</span></div><div class="line">    }</div></pre></td></tr></table></figure>

<p><strong>示例1:</strong> 创建<code>User</code>对象</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">POST http:<span class="comment">//~/$version/users</span></div><div class="line">Request</div><div class="line">    headers:</div><div class="line">        Accept: application/json</div><div class="line">        Content-Type: application/json;charset=UTF-<span class="number">8</span></div><div class="line">    <span class="keyword">body</span>:</div><div class="line">        {</div><div class="line">            <span class="string">"user_name"</span>: <span class="string">"Andy Ai"</span></div><div class="line">        }</div><div class="line">Response</div><div class="line">    status: <span class="number">201</span> Created</div><div class="line">    headers:</div><div class="line">        Content-Type: application/json;charset=UTF-<span class="number">8</span></div><div class="line">    <span class="keyword">body</span>:</div><div class="line">        {</div><div class="line">            <span class="string">"uri"</span>: <span class="string">"http://~/$version/users/1234"</span>,</div><div class="line">            <span class="string">"identity"</span>: <span class="number">1234</span>,</div><div class="line">            <span class="string">"created_at"</span>: <span class="string">"2014-04-05T14:30Z"</span>,</div><div class="line">            <span class="string">"links"</span>: [</div><div class="line">                {</div><div class="line">                    <span class="string">"rel"</span>: <span class="string">"next"</span>,</div><div class="line">                    <span class="string">"href"</span>: <span class="string">"http://~/gui/users/1234"</span></div><div class="line">                }</div><div class="line">            ]</div><div class="line">        }</div></pre></td></tr></table></figure>

<p><strong>为什么是JSON?</strong></p>
<p><code>JSON</code> 是一种可以跨平台高扩展的轻量级的数据交换格式。易于人阅读和编写，同时也易于机器解析和生成。</p>
<h2 id="属性定义限制">属性定义限制</h2>
<ol>
<li>不能使用大写(大小写友好)</li>
<li>使用下划线_命名(连接两个单词)</li>
<li>属性和字符串值必须使用双引号””</li>
</ol>
<h2 id="提取部分字段">提取部分字段</h2>
<p>无状态服务器应该允许客户端对数据按需提取。在<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html" title="HTTP Header" target="_blank" rel="external">请求头</a>使用<code>X-Result-Fields</code>指定数据返回的字段集合。 </p>
<p>例如：trade 有<code>trade_id</code>, <code>trade_name</code>, <code>created_at</code> 三个属性，客户端只需其中的<code>trade_id</code>与<code>trade_name</code>属性。</p>
<p><strong>Request Header</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">X-Result-Fields</span>: <span class="string">trade_id,trade_name</span></div></pre></td></tr></table></figure>

<h2 id="子对象描述">子对象描述</h2>
<p>数据里面的子对象使用URI描述不应该被提取，除非用户指定需要提取子对象</p>
<p><strong>示例:</strong> <code>trade</code>里面的<code>order</code>对象 </p>
<p><strong>错误的做法</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">    "<span class="attribute">trade_id</span>": <span class="value"><span class="string">"123456789"</span></span>,</div><div class="line">    "<span class="attribute">full_path</span>": <span class="value"><span class="literal">null</span></span>,</div><div class="line">    "<span class="attribute">order</span>": <span class="value">{</span></div><div class="line">        "<span class="attribute">order_id</span>": <span class="value"><span class="string">"987654321"</span></span></div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p><strong>正确的做法</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">    "<span class="attribute">trade_id</span>": <span class="value"><span class="string">"123456789"</span></span>,</div><div class="line">    "<span class="attribute">order</span>": <span class="value"><span class="string">"http://~/$version/orders/987654321"</span></span></div><div class="line">}</div></pre></td></tr></table></figure>

<p>应用指定提取子对象，需要在请求头声明<code>X-Expansion-Fields</code></p>
<p><strong>Request</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">X-Expansion-Fields</span>: <span class="string">true</span></div></pre></td></tr></table></figure>

<p><strong>为什么要客户端指定提取子对象时才提取?</strong></p>
<p>懒模式服务能够最大程度地节省运算资源。虽然与客户端交互的次数有所增加，但是能做到按需提取，按需响应，这也是响应式设计的一大特点。客户端的用户行为模式无法真实地模拟，也就无法确定哪些资源需要做到一次性推送，让客户端按需使用是一个不错的方式。</p>
<p><strong>关于空字段</strong></p>
<p>应该在返回结果里面剔除空字段，因为null值传输到客户端并没有实际的含义，反而增加了占用空间。</p>
<p><strong>Tips</strong></p>
<p>使用<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html" title="HTTP Header" target="_blank" rel="external">HTTP Header</a>时，优先使用合适的标准头属性。用<code>X-</code>作为前缀自定义一个头属性，例如: <code>X-Result-Fields</code>。</p>
<hr>
<h1 id="状态码&amp;错误处理">状态码&amp;错误处理</h1>
<h2 id="应用状态码">应用状态码</h2>
<table>
<thead>
<tr>
<th>Code</th>
<th>HTTP Operation    Body</th>
<th>Contents</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>200</td>
<td>GET,PUT</td>
<td>资源</td>
<td>操作成功</td>
</tr>
<tr>
<td>201</td>
<td>POST</td>
<td>资源,元数据</td>
<td>对象创建成功</td>
</tr>
<tr>
<td>202</td>
<td>POST,PUT,DELETE,PATCH</td>
<td>N/A</td>
<td>请求已经被接受</td>
</tr>
<tr>
<td>204</td>
<td>DELETE,PUT,PATCH</td>
<td>N/A</td>
<td>操作已经执行成功，但是没有返回数据</td>
</tr>
<tr>
<td>301</td>
<td>GET</td>
<td>link</td>
<td>资源已被移除</td>
</tr>
<tr>
<td>303</td>
<td>GET</td>
<td>link</td>
<td>重定向</td>
</tr>
<tr>
<td>304</td>
<td>GET</td>
<td>N/A</td>
<td>资源没有被修改</td>
</tr>
<tr>
<td>400</td>
<td>GET,PSOT,PUT,DELETE,PATCH</td>
<td>错误提示(消息)</td>
<td>参数列表错误(缺少，格式不匹配)</td>
</tr>
<tr>
<td>401</td>
<td>GET,PSOT,PUT,DELETE,PATCH</td>
<td>错误提示(消息)</td>
<td>未授权</td>
</tr>
<tr>
<td>403</td>
<td>GET,PSOT,PUT,DELETE,PATCH</td>
<td>错误提示(消息)</td>
<td>访问受限，授权过期</td>
</tr>
<tr>
<td>404</td>
<td>GET,PSOT,PUT,DELETE,PATCH</td>
<td>错误提示(消息)</td>
<td>资源，服务未找到</td>
</tr>
<tr>
<td>405</td>
<td>GET,PSOT,PUT,DELETE,PATCH</td>
<td>错误提示(消息)</td>
<td>不允许的http方法</td>
</tr>
<tr>
<td>409</td>
<td>GET,PSOT,PUT,DELETE,PATCH</td>
<td>错误提示(消息)</td>
<td>资源冲突，或者资源被锁定</td>
</tr>
<tr>
<td>415</td>
<td>GET,PSOT,PUT,DELETE,PATCH</td>
<td>错误提示(消息)</td>
<td>不支持的数据(媒体)类型</td>
</tr>
<tr>
<td>429</td>
<td>GET,PSOT,PUT,DELETE,PATCH</td>
<td>错误提示(消息)</td>
<td>请求过多被限制</td>
</tr>
<tr>
<td>500</td>
<td>GET,PSOT,PUT,DELETE,PATCH</td>
<td>错误提示(消息)</td>
<td>系统内部错误</td>
</tr>
<tr>
<td>501</td>
<td>GET,PSOT,PUT,DELETE,PATCH</td>
<td>错误提示(消息)</td>
<td>接口未实现</td>
</tr>
</tbody>
</table>
<h2 id="容器状态码">容器状态码</h2>
<p>容器状态码是指http容器的状态码，应用不应该使用或限制使用</p>
<table>
<thead>
<tr>
<th>Code</th>
<th>HTTP Operation</th>
<th>Body Contents</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>303</td>
<td>GET</td>
<td>link</td>
<td>静态资源被移除,应用限制使用</td>
</tr>
<tr>
<td>503</td>
<td>GET,PSOT,PUT,DELETE,PATCH</td>
<td>text body</td>
<td>服务器宕机</td>
</tr>
</tbody>
</table>
<p><strong>Tips</strong></p>
<p>4开头的错误用来表达来自于客户端的错误，例如: 未授权，参数缺失。5开头的错误用来表达服务端的错误，例如: 在连接外部系统(DB)发生的IO错误。</p>
<h2 id="错误信息格式">错误信息格式</h2>
<p>错误信息应该包含下列内容: </p>
<ol>
<li>错误标题 <code>message</code>, 必须 </li>
<li>错误代码 <code>error code</code>, 必须 </li>
<li>错误信息 <code>error message</code>, 必须 </li>
<li>资源 <code>resource</code>, 可选 </li>
<li>属性 <code>field</code>, 可选 </li>
<li>文档地址 <code>document</code>, 可选</li>
</ol>
<p><strong>Tips</strong></p>
<p><code>Error Code</code> 尽可能做到简洁明了，提取异常的关键字并且使用下划线_把它们连接起来。</p>
<p><strong>示例:</strong> 调用频率超过限制，Response:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Headers:</div><div class="line">    Content-Type: application/json;charset=UTF-8</div><div class="line">    X-RateLimit-Limit: 3000</div><div class="line">    X-RateLimit-<span class="operator"><span class="keyword">Reset</span>: <span class="number">1403162176516</span></span></div><div class="line">    X-RateLimit-Remaining: <span class="number">0</span></div><div class="line">{</div><div class="line">    <span class="string">"message"</span>: <span class="string">"Message title"</span>,</div><div class="line">    <span class="string">"errors"</span>: [</div><div class="line">        {</div><div class="line">            <span class="string">"code"</span>: <span class="string">"rate_limit_exceeded"</span>,</div><div class="line">            <span class="string">"message"</span>: <span class="string">"Too Many Requests. API rate limit exceeded"</span>,</div><div class="line">            <span class="string">"document"</span>: <span class="string">"https://developer.github.com/v3/gists/"</span></div><div class="line">        }</div><div class="line">    ]</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="锦上添花">锦上添花</h1>
<ol>
<li>格式化(Pettyprint)JSON数据(返回结果)并且使用gzip压缩，Pettyprint易于阅读，多余的空格在经过gzip压缩之后占用空间比压缩之前更小。</li>
<li>重写<code>Server</code>头</li>
<li>返回<code>X-Powered-By</code></li>
</ol>
<p><strong>Response Headers</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">X-Pretty-Print</span>: <span class="string">true</span></div><div class="line"><span class="attribute">Content-Encoding</span>: <span class="string">gzip</span></div><div class="line"><span class="attribute">Server</span>: <span class="string">ods@shuyun.com</span></div><div class="line"><span class="attribute">X-Powered-By</span>: <span class="string">yanbo.ai;email=yanbo.ai@gmail.com</span></div></pre></td></tr></table></figure>

<h1 id="附页">附页</h1>
<h2 id="框架&amp;工具">框架&amp;工具</h2>
<ul>
<li><a href="http://raml.org/" target="_blank" rel="external">http://raml.org/</a></li>
<li><a href="https://jersey.java.net/" target="_blank" rel="external">https://jersey.java.net/</a></li>
<li><a href="https://dropwizard.github.io/dropwizard/" target="_blank" rel="external">https://dropwizard.github.io/dropwizard/</a></li>
<li><a href="https://github.com/aiyanbo/restful-hub/" target="_blank" rel="external">https://github.com/aiyanbo/restful-hub/</a></li>
</ul>
<h2 id="参考资料">参考资料</h2>
<ul>
<li><a href="http://restfulobjects.org/" target="_blank" rel="external">http://restfulobjects.org/</a></li>
<li><a href="https://developer.github.com/v3/" target="_blank" rel="external">https://developer.github.com/v3/</a></li>
<li><a href="http://tools.ietf.org/html/rfc5988" target="_blank" rel="external">http://tools.ietf.org/html/rfc5988</a></li>
<li><a href="http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api" target="_blank" rel="external">http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api</a></li>
<li><a href="https://developer.yahoo.com/social/rest_api_guide/http-response-codes.html" target="_blank" rel="external">https://developer.yahoo.com/social/rest_api_guide/http-response-codes.html</a></li>
<li><a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm" target="_blank" rel="external">http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm</a></li>
<li><a href="http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven" target="_blank" rel="external">http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven</a></li>
</ul>
<h2 id="声明">声明</h2>
<p>本文属于转载:<a href="https://www.zybuluo.com/yanbo-ai/note/17890" target="_blank" rel="external">原文(RESTful Best Practices)</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="背景">背景</h1>
<p>此文为实践总结，是自己在实践过程中积累的经验和”哲学”。部分内容参考相关资料，参考内容请看尾页。建议对RESTful有一定了解者阅读!</p>
<h1 id="哲学">哲学</h1>
<ul>
<li>不要为了RESTful而RESTful</li>
<li>在能表达清楚的情况下，简单就是美</li>
</ul>
<h1 id="接口路径设计">接口路径设计</h1>
<h2 id="接口设计原则">接口设计原则</h2>
<h3 id="URI指向的是唯一的资源对象">URI指向的是唯一的资源对象</h3>
<p><strong>示例:</strong> 指向ID为<code>yanbo.ai</code>的<code>Account</code>对象</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/accounts/yanbo.ai</div></pre></td></tr></table></figure>

<h3 id="URI可以隐式指向唯一的集合列表">URI可以隐式指向唯一的集合列表</h3>
<p><strong>示例:</strong> 隐式地指向trades list 集合</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades/(list)</div><div class="line">等同于</div><div class="line"><span class="constant">GET</span> <span class="symbol">http:</span>/<span class="regexp">/~/</span><span class="variable">$version</span>/trades</div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
      <category term="Http" scheme="http://arccode.net/tags/Http/"/>
    
      <category term="Rest" scheme="http://arccode.net/tags/Rest/"/>
    
      <category term="架构" scheme="http://arccode.net/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[理解本真的REST架构风格]]></title>
    <link href="http://arccode.net/2015/02/25/%E7%90%86%E8%A7%A3%E6%9C%AC%E7%9C%9F%E7%9A%84REST%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC/"/>
    <id>http://arccode.net/2015/02/25/理解本真的REST架构风格/</id>
    <published>2015-02-25T12:00:13.000Z</published>
    <updated>2015-04-20T01:22:17.000Z</updated>
    <content type="html"><![CDATA[<p>本文是<a href="http://www.infoq.com/cn/rest-deep-dive" target="_blank" rel="external">“深入探索REST”专栏</a>系列深度内容中的第二篇，它将带您领略REST架构的起源、与Web的关系、REST架构的本质及特性，以及REST架构与其他架构风格之间的比较。</p>
<h2 id="引子">引子</h2>
<p>在移动互联网、云计算迅猛发展的今天，作为一名Web开发者，如果您还没听说过“REST”这个buzzword，显然已经落伍了。夸张点说，甚至“出了门都不好意思跟别人打招呼”。尽管如此，对于REST这个泊来品的理解，大多数人（包括一些资深的架构师）仍然停留在“盲人摸象”的阶段。常常听到各种各样关于REST的说法，例如：有人说：“我们这套新的API决定不用Web Service（SOAP+WSDL），而是直接使用HTTP+JSON，也就是用RESTful的方式来开发。” 不用SOAP，甚至也不用XML，就自动变成了RESTful了。还有人认为：REST与传统的 Service其实没有本质区别，只是对于URI的构造方式提出了更多要求，而这些要求Web Service完全都可以实现。潜台词是：既生瑜，何生亮。Web Service已经足够好了，干嘛还要再折腾什么REST。这些对于REST的不同说法，果真如此吗？REST究竟是什么？是一种新的技术、一种新的架构、还是一种新的规范？</p>
<p>对于这些问题笔者先不解答，为了深入理解REST是什么，我们需要回顾一下Web发展的最初年代，从源头上讲讲REST是怎么得来的。</p>
<a id="more"></a>

<h2 id="Web技术发展与REST的由来">Web技术发展与REST的由来</h2>
<p>Web（万维网World Wide Web的简称）是个包罗万象的万花筒，不同的人从不同的角度观察，对于Web究竟是什么会得出大不相同的观点。作为Web开发者，我们需要从技术上来理解Web。从技术架构层面上看，Web的技术架构包括了四个基石：</p>
<ul>
<li>URI</li>
<li>HTTP</li>
<li>HyperText（除了HTML外，也可以是带有超链接的XML或JSON）</li>
<li>MIME</li>
</ul>
<p>这四个基石相互支撑，促使Web这座宏伟的大厦以几何级数的速度发展了起来。在这四个基石之上，Web开发技术的发展可以粗略划分成以下几个阶段：</p>
<ol>
<li>静态内容阶段：在这个最初的阶段，使用Web的主要是一些研究机构。Web由大量的静态HTML文档组成，其中大多是一些学术论文。Web服务器可以被看作是支持超文本的共享文件服务器。</li>
<li>CGI程序阶段：在这个阶段，Web服务器增加了一些编程API。通过这些API编写的应用程序，可以向客户端提供一些动态变化的内容。Web服务器与应用程序之间的通信，通过CGI（Common Gateway Interface）协议完成，应用程序被称作CGI程序。</li>
<li>脚本语言阶段：在这个阶段，服务器端出现了ASP、PHP、JSP、ColdFusion等支持session的脚本语言技术，浏览器端出现了Java Applet、JavaScript等技术。使用这些技术，可以提供更加丰富的动态内容。</li>
<li>瘦客户端应用阶段：在这个阶段，在服务器端出现了独立于Web服务器的应用服务器。同时出现了Web MVC开发模式，各种Web MVC开发框架逐渐流行，并且占据了统治地位。基于这些框架开发的Web应用，通常都是瘦客户端应用，因为它们是在服务器端生成全部的动态内容。</li>
<li>RIA应用阶段：在这个阶段，出现了多种RIA（Rich Internet Application）技术，大幅改善了Web应用的用户体验。应用最为广泛的RIA技术是DHTML+Ajax。Ajax技术支持在不刷新页面的情况下动态更新页面中的局部内容。同时诞生了大量的Web前端DHTML开发库，例如Prototype、Dojo、ExtJS、jQuery/jQuery UI等等，很多开发库都支持单页面应用（Single Page Application）的开发。其他的RIA技术还有Adobe公司的Flex、微软公司的Silverlight、Sun公司的JavaFX（现在为Oracle公司所有）等等。</li>
<li>移动Web应用阶段：在这个阶段，出现了大量面向移动设备的Web应用开发技术。除了Android、iOS、Windows Phone等操作系统平台原生的开发技术之外，基于HTML5的开发技术也变得非常流行。</li>
</ol>
<p>从上述Web开发技术的发展过程看，Web从最初其设计者所构思的主要支持静态文档的阶段，逐渐变得越来越动态化。Web应用的交互模式，变得越来越复杂：从静态文档发展到以内容为主的门户网站、电子商务网站、搜索引擎、社交网站，再到以娱乐为主的大型多人在线游戏、手机游戏。</p>
<p>在互联网行业，实践总是走在理论的前面。Web发展到了1995年，在CGI、ASP等技术出现之后，沿用了多年、主要面向静态文档的HTTP/1.0协议已经无法满足Web应用的开发需求，因此需要设计新版本的HTTP协议。在HTTP/1.0协议专家组之中，有一位年轻人脱颖而出，显示出了不凡的洞察力，后来他成为了HTTP/1.1协议专家组的负责人。这位年轻人就是Apache HTTP服务器的核心开发者Roy Fielding，他还是Apache软件基金会的合作创始人。</p>
<p>Roy Fielding和他的同事们在HTTP/1.1协议的设计工作中，对于Web之所以取得巨大成功，在技术架构方面的因素做了一番深入的总结。Fielding将这些总结纳入到了一套理论框架之中，然后使用这套理论框架中的指导原则，来指导HTTP/1.1协议的设计方向。HTTP/1.1协议的第一个草稿是在1996年1月发布的，经过了三年多时间的修订，于1999年6月成为了IETF的正式规范（包括了RFC 2616以及用于对客户端做身份认证的RFC 2617）。HTTP/1.1协议设计的极为成功，以至于发布之后整整10年时间里，都没有多少人认为有修订的必要。用来指导HTTP/1.1协议设计的这套理论框架，最初是以备忘录的形式在专家组成员之间交流，除了IETF/W3C的专家圈子，并没有在外界广泛流传。Fielding在完成HTTP/1.1协议的设计工作之后，回到了加州大学欧文分校继续攻读自己的博士学位。第二年（2000年）在他的博士学位论文Architectural Styles and the Design of Network-based Software Architectures中，Fielding更为系统、严谨地阐述了这套理论框架，并且使用这套理论框架推导出了一种新的架构风格，并且为这种架构风格取了一个令人轻松愉快的名字“REST”——Representational State Transfer（表述性状态转移）的缩写。</p>
<p>在笔者看来，Fielding这篇博士论文在Web发展史上的价值，不亚于Web之父Tim Berners-Lee关于超文本的那篇经典论文。然而遗憾的是，这篇博士论文在诞生之后的将近5年时间里，一直没有得到足够的重视。例如Web Service相关规范SOAP/WSDL的设计者们，显然不大理解REST是什么，HTTP/1.1究竟是一个什么样的协议、为何要设计成这个样子。</p>
<p>这种情况在2005年之后有了很大的改善，随着Ajax、Ruby on Rails等新的Web开发技术的兴起，在Web开发技术社区掀起了一场重归Web架构设计本源的运动，REST架构风格得到了越来越多的关注。在2007年1月，支持REST开发的Ruby on Rails 1.2版正式发布，并且将支持REST开发作为Rails未来发展中的优先内容。Ruby on Rails的创始人DHH做了一个名为“World of Resources”的精彩演讲，DHH在Web开发技术社区中的强大影响力，使得REST一下子处在Web开发技术舞台的聚光灯之下。</p>
<p>今天，各种流行的Web开发框架，几乎没有不支持REST开发的了。大多数Web开发者都是通过阅读某种REST开发框架的文档，以及通过一些例子代码来学习REST开发的。然而，通过例子代码来学习REST有非常大的局限性。因为REST并不是一种具体的技术，也不是一种具体的规范，REST其实是一种内涵非常丰富的架构风格。通过例子代码来学习REST，除了学习到一种有趣的Web开发技术之外，并不能全面深入的理解REST究竟是什么。甚至还会误以为这些简单的例子代码就是REST本身，REST不过是一种简单的Web开发技术而已。就像盲人摸象一样，有的人摸到了象鼻子、有的人摸到了象耳朵、有的人摸到了象腿、有的人摸到了象尾巴。他们都坚信自己感觉到的大象，才是最真实的大象，而其他人的感觉都是错误的。</p>
<p>对于不理解REST的Web开发者，人们习惯于展示一些例子代码来让他们理解REST，笔者不赞同上述做法。如果Web开发者想要深入理解REST是什么，就很难避开Fielding的这篇博士论文。笔者在本文中对于REST是什么的介绍，也是基于Fielding的博士论文的。尽管如此，笔者强烈建议本文的读者亲自去通读一下Fielding的博士论文，就像想要了解孔子的思想应该直接去读《论语》等著作，而不是首先去读其他人的转述一样。笔者在本文中也仅仅是努力不做一个把经书念错了的歪嘴和尚而已。那么，下面我们言归正传。</p>
<p>在Fielding的这篇名为Architectural Styles and the Design of Network-based Software Architectures的博士论文（中文版名为《架构风格与基于网络的软件架构设计》）中，提出了一整套基于网络的软件（即所谓的“分布式应用”）的设计方法，值得所有分布式应用的开发者仔细阅读、深入体会。</p>
<p>在论文的前三章中，Fielding在批判性继承前人研究成果的基础上，建立起来一整套研究和评价软件架构的方法论。这套方法论的核心是“架构风格”这个概念。架构风格是一种研究和评价软件架构设计的方法，它是比架构更加抽象的概念。一种架构风格是由一组相互协作的架构约束来定义的。架构约束是指软件的运行环境施加在架构设计之上的约束。</p>
<p>在论文的第四章中，Fielding研究了Web这样一个分布式系统对于软件架构设计提出了哪些需求。在第五章中，Fielding将第四章Web提出的需求具体化为一些架构约束，通过逐步添加各种架构约束，推导出来了REST这种新的架构风格。</p>
<p>REST架构风格的推导过程如下图所示：</p>
<p>图1：REST所继承的架构风格约束</p>
<p><img src="/images/understanding_restful_style_1.png" alt=""></p>
<p>在图1中，每一个椭圆形里面的缩写词代表了一种架构风格，而每一个箭头边的单词代表了一种架构约束。</p>
<p>REST架构风格最重要的架构约束有6个：</p>
<ul>
<li>客户-服务器（Client-Server）</li>
</ul>
<p>通信只能由客户端单方面发起，表现为请求-响应的形式。</p>
<ul>
<li>无状态（Stateless）</li>
</ul>
<p>通信的会话状态（Session State）应该全部由客户端负责维护。</p>
<ul>
<li>缓存（Cache）</li>
</ul>
<p>响应内容可以在通信链的某处被缓存，以改善网络效率。</p>
<ul>
<li>统一接口（Uniform Interface）</li>
</ul>
<p>通信链的组件之间通过统一的接口相互通信，以提高交互的可见性。</p>
<ul>
<li>分层系统（Layered System）</li>
</ul>
<p>通过限制组件的行为（即，每个组件只能“看到”与其交互的紧邻层），将架构分解为若干等级的层。</p>
<ul>
<li>按需代码（Code-On-Demand，可选）</li>
</ul>
<p>支持通过下载并执行一些代码（例如Java Applet、Flash或JavaScript），对客户端的功能进行扩展。</p>
<p>在论文中推导出的REST架构风格如下图所示：</p>
<p>图2：REST架构风格</p>
<p><img src="/images/understanding_restful_style_2.png" alt=""></p>
<p>而HTTP/1.1协议作为一种REST架构风格的架构实例，其架构如下图所示：</p>
<p>图3：一个基于REST的架构的过程视图</p>
<p><img src="/images/understanding_restful_style_3.png" alt=""></p>
<p>用户代理处在三个并行交互（a、b和c）的中间。用户代理的客户端连接器缓存无法满足请求，因此它根据每个资源标识符的属性和客户端连接器的配置，将每个请求路由到资源的来源。请求（a）被发送到一个本地代理，代理随后访问一个通过DNS查找发现的缓存网关，该网关将这个请求转发到一个能够满足该请求的来源服务器，服务器的内部资源由一个封装过的对象请求代理（object request broker）架构来定义。请求（b）直接发送到一个来源服务器，它能够通过自己的缓存来满足这个请求。请求（c）被发送到一个代理，它能够直接访问WAIS（一种与Web架构分离的信息服务），并将WAIS的响应翻译为一种通用的连接器接口能够识别的格式。每一个组件只知道与它们自己的客户端或服务器连接器的交互；整个过程拓扑是我们的视图的产物。</p>
<p>通过比较图2和图3，读者不难发现这两张图中的架构是高度一致的。对于HTTP/1.1协议为何要设计成这个样子，读者想必已经有所领悟。</p>
<p>在论文的第六章中，Fielding对于到2000年为止在Web基础架构协议的设计和开发方面的一些经验教训进行了深入的分析。其中，“HTTP不是RPC”、“HTTP不是一种传输协议”两部分值得读者反复阅读。时至13年之后的今日，对于HTTP协议的误解仍然广泛存在。</p>
<p>以上简要介绍了Fielding博士论文中的内容。为了帮助读者仔细阅读Fielding的博士论文，笔者整理了一套Fielding博士论文的导读，将在<a href="http://www.infoq.com/cn/rest-deep-dive" target="_blank" rel="external">本专栏</a>后续文章中载出。</p>
<h2 id="REST详解">REST详解</h2>
<p>REST究竟是什么？因为REST的内涵非常丰富，所以很难用一两句话解释清楚这个问题。</p>
<p>首先，REST是Web自身的架构风格。REST也是Web之所以取得成功的技术架构方面因素的总结。REST是世界上最成功的分布式应用架构风格（成功案例：Web，还不够吗？）。它是为 运行在互联网环境 的 分布式 超媒体系统量身定制的。互联网环境与企业内网环境有非常大的差别，最主要的差别是两个方面：</p>
<ul>
<li><p>可伸缩性需求无法控制：并发访问量可能会暴涨，也可能会暴跌。</p>
</li>
<li><p>安全性需求无法控制：无法控制客户端发来的请求的格式，很可能会是恶意的请求。</p>
</li>
</ul>
<p>而所谓的“超媒体系统”，即，使用了超文本的系统。可以把“超媒体”理解为超文本+媒体内容。</p>
<p>REST是HTTP/1.1协议等Web规范的设计指导原则，HTTP/1.1协议正是为实现REST风格的架构而设计的。新的Web规范，其设计必须符合REST的要求，否则整个Web的体系架构会因为引入严重矛盾而崩溃。这句话不是危言耸听，做个类比，假如苏州市政府同意在市区著名园林的附近大型土木，建造大量具有后现代风格的摩天大楼，那么不久之后世界闻名的苏州园林美景将不复存在。</p>
<p>上述这些关于“REST是什么”的描述，可以总结为一句话：REST是所有Web应用都应该遵守的架构设计指导原则。当然，REST并不是法律，违反了REST的指导原则，仍然能够实现应用的功能。但是违反了REST的指导原则，会付出很多代价，特别是对于大流量的网站而言。</p>
<p>要深入理解REST，需要理解REST的五个关键词：</p>
<ol>
<li>资源（Resource）</li>
<li>资源的表述（Representation）</li>
<li>状态转移（State Transfer）</li>
<li>统一接口（Uniform Interface）</li>
<li>超文本驱动（Hypertext Driven）</li>
</ol>
<p>什么是资源？</p>
<p>资源是一种看待服务器的方式，即，将服务器看作是由很多离散的资源组成。每个资源是服务器上一个可命名的抽象概念。因为资源是一个抽象的概念，所以它不仅仅能代表服务器文件系统中的一个文件、数据库中的一张表等等具体的东西，可以将资源设计的要多抽象有多抽象，只要想象力允许而且客户端应用开发者能够理解。与面向对象设计类似，资源是以名词为核心来组织的，首先关注的是名词。一个资源可以由一个或多个URI来标识。URI既是资源的名称，也是资源在Web上的地址。对某个资源感兴趣的客户端应用，可以通过资源的URI与其进行交互。</p>
<p>什么是资源的表述？</p>
<p>资源的表述是一段对于资源在某个特定时刻的状态的描述。可以在客户端-服务器端之间转移（交换）。资源的表述可以有多种格式，例如HTML/XML/JSON/纯文本/图片/视频/音频等等。资源的表述格式可以通过协商机制来确定。请求-响应方向的表述通常使用不同的格式。</p>
<p>什么是状态转移？</p>
<p>状态转移（state transfer）与状态机中的状态迁移（state transition）的含义是不同的。状态转移说的是：在客户端和服务器端之间转移（transfer）代表资源状态的表述。通过转移和操作资源的表述，来间接实现操作资源的目的。</p>
<p>什么是统一接口？</p>
<p>REST要求，必须通过统一的接口来对资源执行各种操作。对于每个资源只能执行一组有限的操作。以HTTP/1.1协议为例，HTTP/1.1协议定义了一个操作资源的统一接口，主要包括以下内容：</p>
<ul>
<li><p>7个HTTP方法：GET/POST/PUT/DELETE/PATCH/HEAD/OPTIONS</p>
</li>
<li><p>HTTP头信息（可自定义）</p>
</li>
<li><p>HTTP响应状态代码（可自定义）</p>
</li>
<li><p>一套标准的内容协商机制</p>
</li>
<li><p>一套标准的缓存机制</p>
</li>
<li><p>一套标准的客户端身份认证机制</p>
</li>
</ul>
<p>REST还要求，对于资源执行的操作，其操作语义必须由HTTP消息体之前的部分完全表达，不能将操作语义封装在HTTP消息体内部。这样做是为了提高交互的可见性，以便于通信链的中间组件实现缓存、安全审计等等功能。</p>
<p>什么是超文本驱动？</p>
<p>“超文本驱动”又名“将超媒体作为应用状态的引擎”（Hypermedia As The Engine Of Application State，来自Fielding博士论文中的一句话，缩写为HATEOAS）。将Web应用看作是一个由很多状态（应用状态）组成的有限状态机。资源之间通过超链接相互关联，超链接既代表资源之间的关系，也代表可执行的状态迁移。在超媒体之中不仅仅包含数据，还包含了状态迁移的语义。以超媒体作为引擎，驱动Web应用的状态迁移。通过超媒体暴露出服务器所提供的资源，服务器提供了哪些资源是在运行时通过解析超媒体发现的，而不是事先定义的。从面向服务的角度看，超媒体定义了服务器所提供服务的协议。客户端应该依赖的是超媒体的状态迁移语义，而不应该对于是否存在某个URI或URI的某种特殊构造方式作出假设。一切都有可能变化，只有超媒体的状态迁移语义能够长期保持稳定。</p>
<p>一旦读者理解了上述REST的五个关键词，就很容易理解REST风格的架构所具有的6个的主要特征：</p>
<ul>
<li><p>面向资源（Resource Oriented）</p>
</li>
<li><p>可寻址（Addressability）</p>
</li>
<li><p>连通性（Connectedness）</p>
</li>
<li><p>无状态（Statelessness）</p>
</li>
<li><p>统一接口（Uniform Interface）</p>
</li>
<li><p>超文本驱动（Hypertext Driven）</p>
</li>
</ul>
<p>这6个特征是REST架构设计优秀程度的判断标准。其中，面向资源是REST最明显的特征，即，REST架构设计是以资源抽象为核心展开的。可寻址说的是：每一个资源在Web之上都有自己的地址。连通性说的是：应该尽量避免设计孤立的资源，除了设计资源本身，还需要设计资源之间的关联关系，并且通过超链接将资源关联起来。无状态、统一接口是REST的两种架构约束，超文本驱动是REST的一个关键词，在前面都已经解释过，就不再赘述了。</p>
<p>从架构风格的抽象高度来看，常见的分布式应用架构风格有三种：</p>
<ul>
<li>分布式对象（Distributed Objects，简称DO）</li>
</ul>
<p>架构实例有CORBA/RMI/EJB/DCOM/.NET Remoting等等</p>
<ul>
<li>远程过程调用（Remote Procedure Call，简称RPC）</li>
</ul>
<p>架构实例有SOAP/XML-RPC/Hessian/Flash AMF/DWR等等</p>
<ul>
<li>表述性状态转移（Representational State Transfer，简称REST）</li>
</ul>
<p>架构实例有HTTP/WebDAV</p>
<p>DO和RPC这两种架构风格在企业应用中非常普遍，而REST则是Web应用的架构风格，它们之间有非常大的差别。</p>
<p>REST与DO的差别在于：</p>
<ul>
<li><p>REST支持抽象（即建模）的工具是资源，DO支持抽象的工具是对象。在不同的编程语言中，对象的定义有很大差别，所以DO风格的架构通常都是与某种编程语言绑定的。跨语言交互即使能实现，实现起来也会非常复杂。而REST中的资源，则完全中立于开发平台和编程语言，可以使用任何编程语言来实现。</p>
</li>
<li><p>DO中没有统一接口的概念。不同的API，接口设计风格可以完全不同。DO也不支持操作语义对于中间组件的可见性。</p>
</li>
<li><p>DO中没有使用超文本，响应的内容中只包含对象本身。REST使用了超文本，可以实现更大粒度的交互，交互的效率比DO更高。</p>
</li>
<li><p>REST支持数据流和管道，DO不支持数据流和管道。</p>
</li>
<li><p>DO风格通常会带来客户端与服务器端的紧耦合。在三种架构风格之中，DO风格的耦合度是最大的，而REST的风格耦合度是最小的。REST松耦合的源泉来自于统一接口+超文本驱动。</p>
</li>
</ul>
<p>REST与RPC的差别在于：</p>
<ul>
<li><p>REST支持抽象的工具是资源，RPC支持抽象的工具是过程。REST风格的架构建模是以名词为核心的，RPC风格的架构建模是以动词为核心的。简单类比一下，REST是面向对象编程，RPC则是面向过程编程。</p>
</li>
<li><p>RPC中没有统一接口的概念。不同的API，接口设计风格可以完全不同。RPC也不支持操作语义对于中间组件的可见性。</p>
</li>
<li><p>RPC中没有使用超文本，响应的内容中只包含消息本身。REST使用了超文本，可以实现更大粒度的交互，交互的效率比RPC更高。</p>
</li>
<li><p>REST支持数据流和管道，RPC不支持数据流和管道。</p>
</li>
<li><p>因为使用了平台中立的消息，RPC风格的耦合度比DO风格要小一些，但是RPC风格也常常会带来客户端与服务器端的紧耦合。支持统一接口+超文本驱动的REST风格，可以达到最小的耦合度。</p>
</li>
</ul>
<p>比较了三种架构风格之间的差别之后，从面向实用的角度来看，REST架构风格可以为Web开发者带来三方面的利益：</p>
<ul>
<li>简单性</li>
</ul>
<p>采用REST架构风格，对于开发、测试、运维人员来说，都会更简单。可以充分利用大量HTTP服务器端和客户端开发库、Web功能测试/性能测试工具、HTTP缓存、HTTP代理服务器、防火墙。这些开发库和基础设施早已成为了日常用品，不需要什么火箭科技（例如神奇昂贵的应用服务器、中间件）就能解决大多数可伸缩性方面的问题。</p>
<ul>
<li>可伸缩性</li>
</ul>
<p>充分利用好通信链各个位置的HTTP缓存组件，可以带来更好的可伸缩性。其实很多时候，在Web前端做性能优化，产生的效果不亚于仅仅在服务器端做性能优化，但是HTTP协议层面的缓存常常被一些资深的架构师完全忽略掉。</p>
<ul>
<li>松耦合</li>
</ul>
<p>统一接口+超文本驱动，带来了最大限度的松耦合。允许服务器端和客户端程序在很大范围内，相对独立地进化。对于设计面向企业内网的API来说，松耦合并不是一个很重要的设计关注点。但是对于设计面向互联网的API来说，松耦合变成了一个必选项，不仅在设计时应该关注，而且应该放在最优先位置。</p>
<p>有的读者可能会问：“你说了这么多，REST难道就没有任何缺点了吗？”当然不是，正如Fielding在博士论文中阐述的那样，评价一种软件架构的优劣，不能脱离开软件的具体运行环境。永远不存在适用于任何运行环境的、包治百病的银弹式架构。笔者在前面强调过REST是一种为运行在互联网环境中的Web应用量身定制的架构风格。REST在互联网这个运行环境之中已经占据了统治地位，然而，在企业内网运行环境之中，REST还会面临DO、RPC的巨大挑战。特别是一些对实时性要求很高的应用，REST的表现不如DO和RPC。所以需要针对具体的运行环境来具体问题具体分析。但是，REST可以带来的上述三方面的利益即使在开发企业应用时，仍然是非常有价值的。所以REST在企业应用开发，特别是在SOA架构的开发中，已经得到了越来越大的重视。本专栏将有一篇文章专门介绍REST在企业级应用中与SOA的结合。</p>
<p>到了这里，“REST究竟是什么”这个问题笔者就解答完了。本文开头那些说法是否正确，笔者还是笑而不语，读者此时应该已经有了自己的判断。在接下来的REST系列文章中，我将会为读者澄清一些关于HTTP协议和REST的常见误解。</p>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm" target="_blank" rel="external">Roy Fielding博士论文英文版</a></p>
<p><a href="http://www.infoq.com/cn/minibooks/dissertation-rest-cn" target="_blank" rel="external">Roy Fielding博士论文中文版</a></p>
<p>HTTP/1.1协议<a href="http://www.ietf.org/rfc/rfc2616.txt" target="_blank" rel="external">RFC2616</a>、<a href="http://www.ietf.org/rfc/rfc2617.txt" target="_blank" rel="external">RFC2617</a></p>
<h2 id="声明">声明</h2>
<p>本文属于转载:<a href="http://www.infoq.com/cn/articles/understanding-restful-style" target="_blank" rel="external">原文(理解本真的REST架构风格)</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文是<a href="http://www.infoq.com/cn/rest-deep-dive" target="_blank" rel="external">“深入探索REST”专栏</a>系列深度内容中的第二篇，它将带您领略REST架构的起源、与Web的关系、REST架构的本质及特性，以及REST架构与其他架构风格之间的比较。</p>
<h2 id="引子">引子</h2>
<p>在移动互联网、云计算迅猛发展的今天，作为一名Web开发者，如果您还没听说过“REST”这个buzzword，显然已经落伍了。夸张点说，甚至“出了门都不好意思跟别人打招呼”。尽管如此，对于REST这个泊来品的理解，大多数人（包括一些资深的架构师）仍然停留在“盲人摸象”的阶段。常常听到各种各样关于REST的说法，例如：有人说：“我们这套新的API决定不用Web Service（SOAP+WSDL），而是直接使用HTTP+JSON，也就是用RESTful的方式来开发。” 不用SOAP，甚至也不用XML，就自动变成了RESTful了。还有人认为：REST与传统的 Service其实没有本质区别，只是对于URI的构造方式提出了更多要求，而这些要求Web Service完全都可以实现。潜台词是：既生瑜，何生亮。Web Service已经足够好了，干嘛还要再折腾什么REST。这些对于REST的不同说法，果真如此吗？REST究竟是什么？是一种新的技术、一种新的架构、还是一种新的规范？</p>
<p>对于这些问题笔者先不解答，为了深入理解REST是什么，我们需要回顾一下Web发展的最初年代，从源头上讲讲REST是怎么得来的。</p>
]]>
    
    </summary>
    
      <category term="Http" scheme="http://arccode.net/tags/Http/"/>
    
      <category term="Rest" scheme="http://arccode.net/tags/Rest/"/>
    
      <category term="架构" scheme="http://arccode.net/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MyBatis-Generator最佳实践]]></title>
    <link href="http://arccode.net/2015/02/07/MyBatis-Generator%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    <id>http://arccode.net/2015/02/07/MyBatis-Generator最佳实践/</id>
    <published>2015-02-07T02:21:53.000Z</published>
    <updated>2015-02-25T15:47:55.000Z</updated>
    <content type="html"><![CDATA[<p>最近使用MyBatis开发项目,为了快速开发,发现了一个可快速生成mapper类和mapper配置文件及Model的插件-<code>MyBatis-Generator</code>,总结下该插件的使用及最佳实践.</p>
<h2 id="需求">需求</h2>
<ol>
<li>为数据库中的表teacher生成Teacher.java, TeacherMapper.java, TeacherMapper.xml</li>
<li>由于该插件生成的TeacherMapper.java, TeacherMapper.xml会带有example, 不希望生成example</li>
<li>数据库中的字段写有注释, 希望注释能自动生成在Teacher.java中</li>
</ol>
<a id="more"></a>


<h2 id="实现">实现</h2>
<h3 id="实现需求一">实现需求一</h3>
<p>1&gt; 建表-teacher</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`test`</span>.<span class="string">`teacher`</span> (</span></div><div class="line">	<span class="string">`id`</span> <span class="built_in">bigint</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">'主键id'</span>,</div><div class="line">	<span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">40</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> COMMENT <span class="string">'名称'</span>,</div><div class="line">	<span class="string">`age`</span> <span class="built_in">smallint</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">'年龄'</span>,</div><div class="line">	<span class="keyword">PRIMARY</span> <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line">) COMMENT=<span class="string">'教师表'</span>;</div></pre></td></tr></table></figure>

<p>2&gt; 配置properties常量</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 数据库驱动jar 路径</span></div><div class="line">drive.class.<span class="variable">path=</span>/Users/arccode/repo/mysql/mysql-connector-java/<span class="number">5.1</span>.<span class="number">30</span>/mysql-connector-java-<span class="number">5.1</span>.<span class="number">30</span>.jar</div><div class="line"></div><div class="line"><span class="comment"># 数据库连接参数</span></div><div class="line">jdbc.<span class="variable">driver=</span>com.mysql.jdbc.Driver</div><div class="line">jdbc.<span class="variable">url=</span>jdbc:mysql://localhost:<span class="number">3306</span>/test?<span class="variable">useUnicode=</span><span class="constant">true</span>&<span class="variable">characterEncoding=</span>utf-<span class="number">8</span></div><div class="line">jdbc.<span class="variable">username=</span>mysql</div><div class="line">jdbc.<span class="variable">password=</span>mysqlpwd</div><div class="line"></div><div class="line"><span class="comment"># 包路径配置</span></div><div class="line">model.<span class="variable">package=</span>com.arccode.web.model</div><div class="line">dao.<span class="variable">package=</span>com.arccode.web.dao</div><div class="line">xml.mapper.<span class="variable">package=</span>com.arccode.web.dao</div><div class="line"></div><div class="line">target.<span class="variable">project=</span>src/main/java</div></pre></td></tr></table></figure>

<p>3&gt; 配置文件-generatorConfig.xml</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></div><div class="line"><span class="doctype">&lt;!DOCTYPE generatorConfiguration</span></div><div class="line">        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</div><div class="line">        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="title">generatorConfiguration</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 配置文件路径 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">properties</span> <span class="attribute">url</span>=<span class="value">"${mybatis.generator.generatorConfig.properties}"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--数据库驱动包路径 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">classPathEntry</span> <span class="attribute">location</span>=<span class="value">"${drive.class.path}"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="title">context</span> <span class="attribute">id</span>=<span class="value">"MySQLTables"</span> <span class="attribute">targetRuntime</span>=<span class="value">"MyBatis3"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!--关闭注释 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">commentGenerator</span>&gt;</span>	</div><div class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"suppressDate"</span> <span class="attribute">value</span>=<span class="value">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="title">commentGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!--数据库连接信息 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">jdbcConnection</span> <span class="attribute">driverClass</span>=<span class="value">"${jdbc.driver}"</span> <span class="attribute">connectionURL</span>=<span class="value">"${jdbc.url}"</span> <span class="attribute">userId</span>=<span class="value">"${jdbc.username}"</span></span></div><div class="line">                        <span class="attribute">password</span>=<span class="value">"${jdbc.password}"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="title">jdbcConnection</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!--生成的model 包路径 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">javaModelGenerator</span> <span class="attribute">targetPackage</span>=<span class="value">"${model.package}"</span> <span class="attribute">targetProject</span>=<span class="value">"${target.project}"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"enableSubPackages"</span> <span class="attribute">value</span>=<span class="value">"ture"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"trimStrings"</span> <span class="attribute">value</span>=<span class="value">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="title">javaModelGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!--生成xml mapper文件 路径 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">sqlMapGenerator</span> <span class="attribute">targetPackage</span>=<span class="value">"${xml.mapper.package}"</span> <span class="attribute">targetProject</span>=<span class="value">"${target.project}"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"enableSubPackages"</span> <span class="attribute">value</span>=<span class="value">"ture"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="title">sqlMapGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 生成的Dao接口 的包路径 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">javaClientGenerator</span> <span class="attribute">type</span>=<span class="value">"XMLMAPPER"</span> <span class="attribute">targetPackage</span>=<span class="value">"${dao.package}"</span> <span class="attribute">targetProject</span>=<span class="value">"${target.project}"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"enableSubPackages"</span> <span class="attribute">value</span>=<span class="value">"ture"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="title">javaClientGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!--对应数据库表名 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">table</span> <span class="attribute">tableName</span>=<span class="value">"teacher"</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="title">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="title">context</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">generatorConfiguration</span>&gt;</span></div></pre></td></tr></table></figure>

<p>4&gt; 运行maven - Run As Maven build</p>
<p>Goals 参数 : mybatis-generator:generate -Dmybatis.generator.overwrite=true</p>
<h3 id="实现需求二">实现需求二</h3>
<p>修改配置文件-generatorConfig.xml, 将table标签修改如下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;table <span class="variable">tableName=</span><span class="string">"teacher"</span> <span class="variable">enableCountByExample=</span><span class="string">"false"</span> </div><div class="line">	<span class="variable">enableUpdateByExample=</span><span class="string">"false"</span> <span class="variable">enableDeleteByExample=</span><span class="string">"false"</span> </div><div class="line">	<span class="variable">enableSelectByExample=</span><span class="string">"false"</span> <span class="variable">selectByExampleQueryId=</span><span class="string">"false"</span>&gt;</div><div class="line">&lt;/table&gt;</div></pre></td></tr></table></figure>

<h3 id="实现需求三">实现需求三</h3>
<p>修改mybatis-generator源码</p>
<p>位置: <code>mybatis-generator-core/src/main/java/org/mybatis/generator/internal/DefaultCommentGenerator.java</code></p>
<p>修改该类的方法: addFieldComment</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> addFieldComment(Field field,</div><div class="line">            IntrospectedTable introspectedTable,</div><div class="line">            IntrospectedColumn introspectedColumn) {</div><div class="line">        <span class="keyword">if</span> (suppressAllComments) {</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        }</div><div class="line"></div><div class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line"></div><div class="line">        field.addJavaDocLine(<span class="string">"/**"</span>); <span class="comment">//$NON-NLS-1$</span></div><div class="line"><span class="comment">//        field.addJavaDocLine(" * This field was generated by MyBatis Generator."); //$NON-NLS-1$</span></div><div class="line"></div><div class="line">        sb.<span class="keyword">append</span>(<span class="string">" *  "</span>); <span class="comment">//$NON-NLS-1$</span></div><div class="line">        sb.<span class="keyword">append</span>(introspectedColumn.getRemarks());</div><div class="line">        sb.<span class="keyword">append</span>(<span class="string">",所属表字段为"</span>);</div><div class="line">        sb.<span class="keyword">append</span>(introspectedTable.getFullyQualifiedTable());</div><div class="line">        sb.<span class="keyword">append</span>(<span class="string">'.'</span>);</div><div class="line">        sb.<span class="keyword">append</span>(introspectedColumn.getActualColumnName());</div><div class="line">        field.addJavaDocLine(sb.toString());</div><div class="line"></div><div class="line"><span class="comment">//        addJavadocTag(field, false);</span></div><div class="line"></div><div class="line">        field.addJavaDocLine(<span class="string">" */"</span>); <span class="comment">//$NON-NLS-1$</span></div><div class="line">    }</div></pre></td></tr></table></figure>

<p>如果不想修改源码, 可以下载<a href="https://github.com/arccode/mybatisn_generator_cn" target="_blank" rel="external">mybatis生成中文注释</a>项目, maven本地安装后在pom中配置version即可.</p>
<p>使用git克隆github项目(mybatis-generator源项目)</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 克隆 parent</span></div><div class="line">git <span class="keyword">clone</span> https:<span class="comment">//github.com/mybatis/parent.git</span></div><div class="line"><span class="comment">// 将该项目安装到本地maven库, mybatis-generator依赖于该项目</span></div><div class="line">mvn clean install -Dmaven.test.skip=<span class="keyword">true</span></div><div class="line"><span class="comment">// 克隆 mybatis-generator</span></div><div class="line">git <span class="keyword">clone</span> https:<span class="comment">//github.com/mybatis/generator.git</span></div><div class="line"><span class="comment">// 将该jar安装到本地, 之后项目中使用, 时间有点长, 可以喝杯咖啡</span></div><div class="line">mvn clean install -Dmaven.test.skip=<span class="keyword">true</span></div></pre></td></tr></table></figure>

<p>碰到的问题:</p>
<ol>
<li>Could not find artifact com.sun:tools:jar:0 at specified path…</li>
</ol>
<p>平台: Mac</p>
<p>Jdk: 自带的jdk_1.6.0</p>
<p>解决办法: 安装jdk1.7, 该版本带有tools.jar</p>
<h2 id="最佳实践">最佳实践</h2>
<p>在以上三点需求完成后, 还可做以下修改使得开发更快更敏捷</p>
<ol>
<li>配置文件中commentGenerator配置项最好不要设置为不生成注释，因为这样带来的问题是在自动生成的代码上不会存在@mbggenerated 这样的标记，这个标记是用来标注这些代码是代码生成器生成的，如果关闭了注释，我们在多次使用mybatis generator重新生成代码时会导致在已有生成的文件上追加生成重复的内容，导致代码错误，故我建议如果你只生成一次代码，以后再不用工具生成可以关闭注释，如果会重复生成就要把注释开关打开。以下配置参数是关闭时间注释：</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">commentGenerator</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"suppressDate"</span> <span class="attribute">value</span>=<span class="value">"false"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">commentGenerator</span>&gt;</span></div></pre></td></tr></table></figure>

<h2 id="Model示例">Model示例</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>{</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     *  主键id,所属表字段为teacher.id</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> Long id;</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     *  名称,所属表字段为teacher.name</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     *  年龄,所属表字段为teacher.age</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> Short age;</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     *  性别,所属表字段为teacher.sex</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> String sex;</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 获取 主键id 字段:teacher.id</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @return</span> teacher.id, 主键id</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> Long <span class="title">getId</span>() {</div><div class="line">        <span class="keyword">return</span> id;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 设置 主键id 字段:teacher.id</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @param</span> id teacher.id, 主键id</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span>(Long id) {</div><div class="line">        <span class="keyword">this</span>.id = id;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 获取 名称 字段:teacher.name</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @return</span> teacher.name, 名称</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> String <span class="title">getName</span>() {</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 设置 名称 字段:teacher.name</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @param</span> name teacher.name, 名称</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span>(String name) {</div><div class="line">        <span class="keyword">this</span>.name = name == <span class="keyword">null</span> ? <span class="keyword">null</span> : name.trim();</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 获取 年龄 字段:teacher.age</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @return</span> teacher.age, 年龄</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> Short <span class="title">getAge</span>() {</div><div class="line">        <span class="keyword">return</span> age;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 设置 年龄 字段:teacher.age</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @param</span> age teacher.age, 年龄</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span>(Short age) {</div><div class="line">        <span class="keyword">this</span>.age = age;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 获取 性别 字段:teacher.sex</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @return</span> teacher.sex, 性别</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> String <span class="title">getSex</span>() {</div><div class="line">        <span class="keyword">return</span> sex;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="javadoc">/**</span></div><div class="line">     * 设置 性别 字段:teacher.sex</div><div class="line">     *</div><div class="line">     *<span class="javadoctag"> @param</span> sex teacher.sex, 性别</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span>(String sex) {</div><div class="line">        <span class="keyword">this</span>.sex = sex == <span class="keyword">null</span> ? <span class="keyword">null</span> : sex.trim();</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="参考资料">参考资料</h2>
<p><a href="http://leeon.me/a/mybatis-generator-note" target="_blank" rel="external">MyBatis Generator使用小记</a></p>
<p><a href="http://blog.csdn.net/bluishglc/article/details/8721994" target="_blank" rel="external">为Maven指定tools.jar ，解决Missing artifact com.sun:tools:jar:1.5.0错误</a></p>
<p><a href="http://maven.apache.org/general.html#tools-jar-dependency" target="_blank" rel="external">Maven Frequently Asked Technical Questions</a></p>
<p><a href="http://my.oschina.net/huangyong/blog/195559" target="_blank" rel="external">使用 OSC Maven 第三方仓库</a></p>
<p><a href="http://www.cnphp6.com/archives/68863" target="_blank" rel="external">MYBATIS GENEATOR 详解</a></p>
<p><a href="https://github.com/sogyf/mybatisn_generator_cn" target="_blank" rel="external">mybatisn_generator_cn中文注释项目</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近使用MyBatis开发项目,为了快速开发,发现了一个可快速生成mapper类和mapper配置文件及Model的插件-<code>MyBatis-Generator</code>,总结下该插件的使用及最佳实践.</p>
<h2 id="需求">需求</h2>
<ol>
<li>为数据库中的表teacher生成Teacher.java, TeacherMapper.java, TeacherMapper.xml</li>
<li>由于该插件生成的TeacherMapper.java, TeacherMapper.xml会带有example, 不希望生成example</li>
<li>数据库中的字段写有注释, 希望注释能自动生成在Teacher.java中</li>
</ol>
]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="MyBatis" scheme="http://arccode.net/tags/MyBatis/"/>
    
      <category term="Java" scheme="http://arccode.net/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[UltimateAndroid-demo效果图文档]]></title>
    <link href="http://arccode.net/2015/02/04/UltimateAndroid-demo%E6%95%88%E6%9E%9C%E5%9B%BE%E6%96%87%E6%A1%A3/"/>
    <id>http://arccode.net/2015/02/04/UltimateAndroid-demo效果图文档/</id>
    <published>2015-02-04T03:51:32.000Z</published>
    <updated>2015-02-25T15:27:03.000Z</updated>
    <content type="html"><![CDATA[<h1 id="打开该文章前请注意,该文章包含220张图片,合计在10M左右,主要目的为快速查看Demo效果">打开该文章前请注意,该文章包含220张图片,合计在10M左右,主要目的为快速查看Demo效果</h1>
<p>感谢MarshalChen开源了UltimateAndroid这个快速开发框架, 在此我把各个demo的效果图进行展示, 刚开始学习Android, 不对的解释请留言纠正, 欢迎各位极客加入到这个框架的开发中来.</p>
<p><a href="https://github.com/cymcsg/UltimateAndroid" target="_blank" rel="external">项目地址</a></p>
<p><a href="http://study.163.com/course/introduction.htm?courseId=990020" target="_blank" rel="external">Android快速开发教程第一季-视频</a></p>
<p><a href="http://blog.marshalchen.com/ultimateandroiddoc/index.html" target="_blank" rel="external">API</a></p>
<p>由于图片太多, 所有把文档分为五部分: </p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-二" target="_blank" rel="external">UltimateAndroid-demo效果图文档-二</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-三" target="_blank" rel="external">UltimateAndroid-demo效果图文档-三</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-四" target="_blank" rel="external">UltimateAndroid-demo效果图文档-四</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-五" target="_blank" rel="external">UltimateAndroid-demo效果图文档-五</a></p>
<p>在测试过程中有三个Demo在<code>小米3</code>机型上出现程序崩溃的情况:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="title">HomeActivity</span></div><div class="line">QuickReturnListViewActivity</div><div class="line">PasscodePreferencesActivity</div></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="MaterialDesignActivity">MaterialDesignActivity</h2>
<p>调色板,按钮样式及点击效果,checkbox及switch开关,进度条显示底部snackBar, dialog</p>
<p><img src="/images/android/material_design_1_1.jpg" alt="1-1 (Views)"></p>
<p><img src="/images/android/material_design_1_2.jpg" alt="1-2 (Button)"></p>
<p><img src="/images/android/material_design_1_3.jpg" alt="1-3 (Switches)"></p>
<p><img src="/images/android/material_design_1_4.jpg" alt="1-4 (Progress indicators)"></p>
<p><img src="/images/android/material_design_1_5.jpg" alt="1-5 (Widgets)"></p>
<h2 id="CoolDragAndDragActivity">CoolDragAndDragActivity</h2>
<p>拖动item</p>
<p><img src="/images/android/cool_drag_and_drag_1_1.jpg" alt="1-1"></p>
<h2 id="FloatingActionButtonDemo">FloatingActionButtonDemo</h2>
<p>上划按钮消失</p>
<p><img src="/images/android/floating_action_button_1_1.jpg" alt="1-1"></p>
<h2 id="GestureTouchActivity">GestureTouchActivity</h2>
<p>地球根据手势移动</p>
<p><img src="/images/android/gesture_touch_1_1.jpg" alt="1-1"></p>
<h2 id="KenBurnsViewActivity">KenBurnsViewActivity</h2>
<p>图片缓慢拉近拉远</p>
<p><img src="/images/android/ken_burns_view_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialListViewActivity">MaterialListViewActivity</h2>
<p>listview中的item图文混排, 点击提示, 手势左右滑动移除item</p>
<p><img src="/images/android/material_list_view_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialMenuToolbarActivity">MaterialMenuToolbarActivity</h2>
<p>导航栏图标动画效果</p>
<p><img src="/images/android/material_menu_toolbar_1_1.jpg" alt="1-1"></p>
<h2 id="MotionSampleActivity">MotionSampleActivity</h2>
<p>图片拉近拉远效果</p>
<p><img src="/images/android/motion_sample_1_1.jpg" alt="1-1"></p>
<h2 id="NumberProgressBarActivity">NumberProgressBarActivity</h2>
<p>带数值的直线进度条</p>
<p><img src="/images/android/number_progress_bar_1_1.jpg" alt="1-1"></p>
<h2 id="RippleEffectActivity">RippleEffectActivity</h2>
<p>点击按钮效果-波纹效果</p>
<p><img src="/images/android/ripple_effect_1_1.jpg" alt="1-1"></p>
<h2 id="SmoothProgressBarActivity">SmoothProgressBarActivity</h2>
<p>直线滚动的进度条</p>
<p><img src="/images/android/smooth_progress_bar_1_1.jpg" alt="1-1"></p>
<h2 id="SignaturePadActivity">SignaturePadActivity</h2>
<p>签名板, 画图</p>
<p><img src="/images/android/signature_pad_1_1.jpg" alt="1-1"></p>
<h2 id="ActivityAnimationsActivity">ActivityAnimationsActivity</h2>
<p>Activity到Activity过渡的动画效果</p>
<p><img src="/images/android/activity_animations_1_1.jpg" alt="1-1"></p>
<h2 id="ActivityTransitionActivity">ActivityTransitionActivity</h2>
<p>多种Activity到Activity过渡的动画效果</p>
<p><img src="/images/android/activity_transition_1_1.jpg" alt="1-1"></p>
<h2 id="AndroidAnimationsDemoActivity">AndroidAnimationsDemoActivity</h2>
<p>多种字体特效</p>
<p><img src="/images/android/android_animations_demo_1_1.jpg" alt="1-1"></p>
<h2 id="AndroidViewHoverActivity">AndroidViewHoverActivity</h2>
<p>Listview中item view Hover效果, 相当赞</p>
<p><img src="/images/android/android_view_hover_1_1.jpg" alt="1-1"></p>
<h2 id="AndroidWeekViewActivity">AndroidWeekViewActivity</h2>
<p>日历, 每天0~23时段事件</p>
<p><img src="/images/android/android_week_view_1_1.jpg" alt="1-1"></p>
<h2 id="AnimationUtilsDemo">AnimationUtilsDemo</h2>
<p>闪屏图</p>
<p><img src="/images/android/animation_utils_demo_1_1.jpg" alt="1-1"></p>
<h2 id="ArcMenuActivity">ArcMenuActivity</h2>
<p>父子菜单</p>
<p><img src="/images/android/arc_menu_1_1.jpg" alt="1-1"></p>
<h2 id="AutofitTextViewActivity">AutofitTextViewActivity</h2>
<p>文本自适应</p>
<p><img src="/images/android/autofit_text_view_1_1.jpg" alt="1-1"></p>
<h2 id="BlurDialogActivity">BlurDialogActivity</h2>
<p>弹出对话框后, 背景毛玻璃效果</p>
<p><img src="/images/android/blur_dialog_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/blur_dialog_1_2.jpg" alt="1-2"></p>
<h2 id="BlurNavigationDrawerActivity">BlurNavigationDrawerActivity</h2>
<p>左侧导航栏划出后, 背景毛玻璃效果</p>
<p><img src="/images/android/blur_navigation_drawer_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/blur_navigation_drawer_1_2.jpg" alt="1-2"></p>
<h2 id="CalendarListViewActivity">CalendarListViewActivity</h2>
<p>日历范围选择</p>
<p><img src="/images/android/calendar_list_view_1_1.jpg" alt="1-1"></p>
<h2 id="CalendarSquareActivity">CalendarSquareActivity</h2>
<p>多种日历选择方式</p>
<p><img src="/images/android/calendar_square_1_1.jpg" alt="1-1"></p>
<h2 id="CardsSwipedActivity">CardsSwipedActivity</h2>
<p>ViewPaper左右滑动效果</p>
<p><img src="/images/android/cards_swiped_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/cards_swiped_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/cards_swiped_1_3.jpg" alt="1-3"></p>
<h2 id="CircleProgressActivity">CircleProgressActivity</h2>
<p>圆圈进度条带数值</p>
<p><img src="/images/android/circle_progress_1_1.jpg" alt="1-1"></p>
<h2 id="CircularBarActivity">CircularBarActivity</h2>
<p>圆圈循环效果</p>
<p><img src="/images/android/circular_bar_1_1.jpg" alt="1-1"></p>
<h2 id="CircularProgressButtonActivity">CircularProgressButtonActivity</h2>
<p>多种按钮点击效果-圆圈进度条, 矩形等</p>
<p><img src="/images/android/circular_progress_button_1_1.jpg" alt="1-1"></p>
<h2 id="ConfigureStandupTimer">ConfigureStandupTimer</h2>
<p>分段计时, 带提示音</p>
<p><img src="/images/android/configure_standup_timer_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/configure_standup_timer_1_2.jpg" alt="1-2"></p>
<h2 id="CreditScrollDemoActivity">CreditScrollDemoActivity</h2>
<p>滚动文字</p>
<p><img src="/images/android/credit_scroll_demo_1_1.jpg" alt="1-1"></p>
<h2 id="CropExample">CropExample</h2>
<p>裁剪图片</p>
<p><img src="/images/android/crop_example_1_1.jpg" alt="1-1"></p>
<h2 id="CropperSample">CropperSample</h2>
<p>裁剪图片</p>
<p><img src="/images/android/cropper_sample_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/cropper_sample_1_2.jpg" alt="1-2"></p>
<h2 id="CustomPullToRefreshActivity">CustomPullToRefreshActivity</h2>
<p>下拉刷新</p>
<p><img src="/images/android/custom_pull_to_refresh_1_1.jpg" alt="1-1"></p>
<h2 id="CustomShapeImageViewActivity">CustomShapeImageViewActivity</h2>
<p>图片形状</p>
<p><img src="/images/android/custom_shape_image_view_1_1.jpg" alt="1-1"></p>
<h2 id="DifferentIconsActivity">DifferentIconsActivity</h2>
<p>图标按钮及点击效果</p>
<p><img src="/images/android/different_icons_1_1.jpg" alt="1-1"></p>
<h2 id="DiscreteSeekBarActivity">DiscreteSeekBarActivity</h2>
<p>滚动条-跳到某一页</p>
<p><img src="/images/android/discrete_seek_bar_1_1.jpg" alt="1-1"></p>
<h2 id="DiscrollActivity">DiscrollActivity</h2>
<p>上划图文飞入</p>
<p><img src="/images/android/discroll_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/discroll_1_2.jpg" alt="1-2"></p>
<h2 id="DraggableFlagViewActivity">DraggableFlagViewActivity</h2>
<p>手机QQ小红点</p>
<p><img src="/images/android/draggable_flag_view_1_1.jpg" alt="1-1"></p>
<h2 id="DraggableGridViewPaperTestActivity">DraggableGridViewPaperTestActivity</h2>
<p>添加gridview, 超出的放在第二页, 可以设计成桌面图标摆放框架</p>
<p><img src="/images/android/draggable_grid_view_paper_test_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/draggable_grid_view_paper_test_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/draggable_grid_view_paper_test_1_3.jpg" alt="1-3"></p>
<h2 id="DrawableActivity">DrawableActivity</h2>
<p>画图</p>
<p><img src="/images/android/drawable_1_1.jpg" alt="1-1"></p>
<h2 id="DropDownListViewDemo">DropDownListViewDemo</h2>
<p>下拉加载, 上拉加载</p>
<p><img src="/images/android/drop_down_list_view_demo_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/drop_down_list_view_demo_1_2.jpg" alt="1-2"></p>
<h2 id="DynamicGridActivity">DynamicGridActivity</h2>
<p>grid布局</p>
<p><img src="/images/android/dynamic_grid_1_1.jpg" alt="1-1"></p>
<h2 id="EasingActivity">EasingActivity</h2>
<p>多种平面直角坐标画曲线的效果</p>
<p><img src="/images/android/easing_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/easing_1_2.jpg" alt="1-2"></p>
<h2 id="EasyAnimationListActivity">EasyAnimationListActivity</h2>
<p>多种翻页效果</p>
<p><img src="/images/android/easy_animation_list_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/easy_animation_list_1_2.jpg" alt="1-2"></p>
<h2 id="EdgeEffectActivity">EdgeEffectActivity</h2>
<p>多种view的边缘效果</p>
<p><img src="/images/android/edge_effect_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/edge_effect_1_2.jpg" alt="1-2"></p>
<h2 id="ExpandCircleProgressExampleActivity">ExpandCircleProgressExampleActivity</h2>
<p>可扩充的圆圈进度条</p>
<p><img src="/images/android/expand_circle_progress_example_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/expand_circle_progress_example_1_2.jpg" alt="1-2"></p>
<h2 id="FaceCropActivity">FaceCropActivity</h2>
<p>面部裁剪</p>
<p><img src="/images/android/face_crop_1_1.jpg" alt="1-1"></p>
<h2 id="FancyCoverFlowActivity">FancyCoverFlowActivity</h2>
<p>多种图片旋转木马</p>
<p><img src="/images/android/fancy_cover_flow_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/fancy_cover_flow_1_2.jpg" alt="1-2"></p>
<h2 id="FilckerAnimationListActivity">FilckerAnimationListActivity</h2>
<p>动态增加viewItem</p>
<p><img src="/images/android/filcker_animation_list_1_1.jpg" alt="1-1"></p>
<h2 id="FlipViewActivity">FlipViewActivity</h2>
<p>图片上下翻页</p>
<p><img src="/images/android/flip_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/flip_view_1_2.jpg" alt="1-2"></p>
<h2 id="FloatingActionButtonActivity">FloatingActionButtonActivity</h2>
<p>浮动按钮, 带子按钮</p>
<p><img src="/images/android/floating_action_button_1_1.jpg" alt="1-1"></p>
<h2 id="FloatingActionButtonDemo-1">FloatingActionButtonDemo</h2>
<p>上划按钮消失</p>
<p><img src="/images/android/floating_action_button_1_1.jpg" alt="1-1"></p>
<h2 id="FloatLabelActivity">FloatLabelActivity</h2>
<p>浮动的Label</p>
<p><img src="/images/android/float_label_1_1.jpg" alt="1-1"></p>
<h2 id="FlowTextViewActivity">FlowTextViewActivity</h2>
<p>嵌在图片边缘的流动文本</p>
<p><img src="/images/android/flow_text_view_1_1.jpg" alt="1-1"></p>
<h2 id="FoldableListActivity">FoldableListActivity</h2>
<p>图片翻页效果</p>
<p><img src="/images/android/foldable_list_1_1.jpg" alt="1-1"></p>
<h2 id="FoldingActivitys">FoldingActivitys</h2>
<p>图片及左侧菜单折叠效果</p>
<p><img src="/images/android/folding_activitys_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/folding_activitys_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/folding_activitys_1_3.jpg" alt="1-3"></p>
<h2 id="FreeFlowArtbookActivity">FreeFlowArtbookActivity</h2>
<p>图片流加载</p>
<p><img src="/images/android/free_flow_artbook_1_1.jpg" alt="1-1"></p>
<h2 id="FreeFlowPhotoGridActivity">FreeFlowPhotoGridActivity</h2>
<p>变换的网格布局, 可滚动指定位置</p>
<p><img src="/images/android/free_flow_photo_grid_1_1.jpg" alt="1-1"></p>
<h2 id="GoogleProgressBarActivity">GoogleProgressBarActivity</h2>
<p>谷歌进度条</p>
<p><img src="/images/android/google_progress_bar_1_1.jpg" alt="1-1"></p>
<h2 id="HomeActivity">HomeActivity</h2>
<p>注: 该Demo测试失败</p>
<p>测试机型: 小米3</p>
<h2 id="ImageFilterActivity">ImageFilterActivity</h2>
<p>图层过滤</p>
<p><img src="/images/android/image_filter_1_1.jpg" alt="1-1"></p>
<h2 id="ImageProcessingActivity">ImageProcessingActivity</h2>
<p>图层处理</p>
<p><img src="/images/android/image_processing_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/image_processing_1_2.jpg" alt="1-2"></p>
<h2 id="ImageProcessingVideoImageActivity">ImageProcessingVideoImageActivity</h2>
<p>播放图片</p>
<p><img src="/images/android/image_processing_video_image_1_1.jpg" alt="1-1"></p>
<h2 id="JazzyViewActivity">JazzyViewActivity</h2>
<p>图片翻转效果</p>
<p><img src="/images/android/jazzy_view_1_1.jpg" alt="1-1"></p>
<h2 id="JumpingBeansActivity">JumpingBeansActivity</h2>
<p>字体跳动效果</p>
<p><img src="/images/android/jumping_beans_1_1.jpg" alt="1-1"></p>
<h2 id="ListAnimationActivity">ListAnimationActivity</h2>
<p>卡片加载, 网格图片, listview文本加载效果, viewItem点击效果</p>
<p><img src="/images/android/list_animation_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/list_animation_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/list_animation_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/list_animation_1_4.jpg" alt="1-4"></p>
<p><img src="/images/android/list_animation_1_5.jpg" alt="1-5"></p>
<p><img src="/images/android/list_animation_1_6.jpg" alt="1-6"></p>
<p><img src="/images/android/list_animation_1_7.jpg" alt="1-7"></p>
<h2 id="ListBuddiesActivity">ListBuddiesActivity</h2>
<p>分割列表流动</p>
<p><img src="/images/android/list_buddies_1_1.jpg" alt="1-1"></p>
<h2 id="ListViewFilterActivity">ListViewFilterActivity</h2>
<p>列表过滤</p>
<p><img src="/images/android/list_view_filter_1_1.jpg" alt="1-1"></p>
<h2 id="MarqueeViewSample">MarqueeViewSample</h2>
<p>文字选取框</p>
<p><img src="/images/android/marquee_view_sample_1_1.jpg" alt="1-1"></p>
<h2 id="MatchViewActivity">MatchViewActivity</h2>
<p>字体动画效果</p>
<p><img src="/images/android/match_view_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialEditTextActivity">MaterialEditTextActivity</h2>
<p>输入框样式</p>
<p><img src="/images/android/material_edit_text_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialProgressWheelActivity">MaterialProgressWheelActivity</h2>
<p>定制圆圈进度条</p>
<p><img src="/images/android/material_progress_wheel_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialRippleActivity">MaterialRippleActivity</h2>
<p>按钮波纹效果</p>
<p><img src="/images/android/material_ripple_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialTabsWithIconsActivity">MaterialTabsWithIconsActivity</h2>
<p>图标tab页</p>
<p><img src="/images/android/material_tabs_with_icons_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialTabTextActivity">MaterialTabTextActivity</h2>
<p>文本tab页</p>
<p><img src="/images/android/material_tab_text_1_1.jpg" alt="1-1"></p>
<h2 id="MenuCircleShowingAnimationActivity">MenuCircleShowingAnimationActivity</h2>
<p>浮动按钮, 带子按钮</p>
<p><img src="/images/android/menu_circle_showing_animation_1_1.jpg" alt="1-1"></p>
<h2 id="MultipleChoiceListView">MultipleChoiceListView</h2>
<p>多选列表</p>
<p><img src="/images/android/multiple_choice_list_view_1_1.jpg" alt="1-1"></p>
<h2 id="NiftyDialogActivity">NiftyDialogActivity</h2>
<p>多种对话框效果</p>
<p><img src="/images/android/nifty_dialog_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/nifty_dialog_1_2.jpg" alt="1-2"></p>
<h2 id="ObservableScrollViewActivity">ObservableScrollViewActivity</h2>
<p>多种视图滚动效果</p>
<p><img src="/images/android/observable_scroll_view_1_1.jpg" alt="1-1"></p>
<h2 id="PagerSlidingTabStripActivity">PagerSlidingTabStripActivity</h2>
<p>文本tab页, 可自定义tab颜色</p>
<p><img src="/images/android/pager_sliding_tab_strip_1_1.jpg" alt="1-1"></p>
<h2 id="PanningViewActivity">PanningViewActivity</h2>
<p>左右摇动图片</p>
<p><img src="/images/android/panning_view_1_1.jpg" alt="1-1"></p>
<h2 id="ParallaxScrollActivity">ParallaxScrollActivity</h2>
<p>多种list滚动, 有叠加效果</p>
<p><img src="/images/android/parallax_scroll_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/parallax_scroll_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/parallax_scroll_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/parallax_scroll_1_4.jpg" alt="1-4"></p>
<h2 id="PasscodePreferencesActivity">PasscodePreferencesActivity</h2>
<p>注: 该Demo测试失败</p>
<p>测试机型: 小米3</p>
<h2 id="PatioDemoActivity">PatioDemoActivity</h2>
<p>拍照, 选取本地图片, 可选择多张</p>
<p><img src="/images/android/patio_demo_1_1.jpg" alt="1-1"></p>
<h2 id="PhotoViewActivity">PhotoViewActivity</h2>
<p>图片自动播放, 可放大</p>
<p><img src="/images/android/photo_view_1_1.jpg" alt="1-1"></p>
<h2 id="ProgressbarWheelActivity">ProgressbarWheelActivity</h2>
<p>圆圈滚动条, 可选择转动方式</p>
<p><img src="/images/android/progressbar_wheel_1_1.jpg" alt="1-1"></p>
<h2 id="ProgressLayoutActivity">ProgressLayoutActivity</h2>
<p>页面加载圆圈进度条</p>
<p><img src="/images/android/progress_layout_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/progress_layout_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/progress_layout_1_3.jpg" alt="1-3"></p>
<h2 id="PullScrollViewActivity">PullScrollViewActivity</h2>
<p>滚动view, item点击事件</p>
<p><img src="/images/android/pull_scroll_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/pull_scroll_view_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/pull_scroll_view_1_3.jpg" alt="1-3"></p>
<h2 id="PullSplashActivity">PullSplashActivity</h2>
<p>上滑进入下一页, 可做成锁屏首页</p>
<p><img src="/images/android/pull_splash_1_1.jpg" alt="1-1"></p>
<h2 id="PullToZoomActivity">PullToZoomActivity</h2>
<p>滚动放大图片</p>
<p><img src="/images/android/pull_to_zoom_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/pull_to_zoom_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/pull_to_zoom_1_3.jpg" alt="1-3"></p>
<h2 id="QuickReturnListViewActivity">QuickReturnListViewActivity</h2>
<p>注: 该Demo测试失败</p>
<p>测试机型: 小米3</p>
<h2 id="ReboundActivity">ReboundActivity</h2>
<p>回弹图片效果</p>
<p><img src="/images/android/rebound_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/rebound_1_2.jpg" alt="1-2"></p>
<h2 id="ReboundActivitySample">ReboundActivitySample</h2>
<p>回弹图片效果Demo</p>
<p><img src="/images/android/rebound_activity_sample_1_1.jpg" alt="1-1"></p>
<h2 id="RecyclerViewItemAnimatorActivity">RecyclerViewItemAnimatorActivity</h2>
<p>动态增加item效果, 可从不同方向滑入</p>
<p><img src="/images/android/recycler_view_item_animator_1_1.jpg" alt="1-1"></p>
<h2 id="RecyclerViewPlayGroundActivity">RecyclerViewPlayGroundActivity</h2>
<p>Item点击效果</p>
<p><img src="/images/android/recycler_view_play_ground_1_1.jpg" alt="1-1"></p>
<h2 id="RecyclerViewSample">RecyclerViewSample</h2>
<p>RecyclerView</p>
<p><img src="/images/android/recycler_view_sample_1_1.jpg" alt="1-1"></p>
<h2 id="RecyclerViewStickyHeadersActivity">RecyclerViewStickyHeadersActivity</h2>
<p>StickyHeader折叠</p>
<p><img src="/images/android/recycler_view_sticky_headers_1_1.jpg" alt="1-1"></p>
<h2 id="ResideMenuActivity">ResideMenuActivity</h2>
<p>侧边菜单</p>
<p><img src="/images/android/reside_menu_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/reside_menu_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/reside_menu_1_3.jpg" alt="1-3"></p>
<h2 id="RippleBackgroundActivity">RippleBackgroundActivity</h2>
<p>波纹背景动画效果</p>
<p><img src="/images/android/ripple_background_1_1.jpg" alt="1-1"></p>
<h2 id="RippleDrawable">RippleDrawable</h2>
<p>点击item出现波纹效果</p>
<p><img src="/images/android/ripple_drawable_1_1.jpg" alt="1-1"></p>
<h2 id="RiseNumberActivity">RiseNumberActivity</h2>
<p>数字增加效果</p>
<p><img src="/images/android/rise_number_1_1.jpg" alt="1-1"></p>
<h2 id="RoundCornerProgressBarActivity">RoundCornerProgressBarActivity</h2>
<p>圆角进度条</p>
<p><img src="/images/android/round_corner_progress_bar_1_1.jpg" alt="1-1"></p>
<h2 id="RoundedImageViewActivity">RoundedImageViewActivity</h2>
<p>圆角图片</p>
<p><img src="/images/android/rounded_image_view_1_1.jpg" alt="1-1"></p>
<h2 id="ShapeImageViewActivity">ShapeImageViewActivity</h2>
<p>图片形状</p>
<p><img src="/images/android/shape_image_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/shape_image_view_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/shape_image_view_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/shape_image_view_1_4.jpg" alt="1-4"></p>
<p><img src="/images/android/shape_image_view_1_5.jpg" alt="1-5"></p>
<h2 id="ShowCaseSample">ShowCaseSample</h2>
<p>按钮显示,隐藏, 下一步效果</p>
<p><img src="/images/android/show_case_sample_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/show_case_sample_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/show_case_sample_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/show_case_sample_1_4.jpg" alt="1-4"></p>
<h2 id="SingleChoiceListView">SingleChoiceListView</h2>
<p>单选列表, item可拖动</p>
<p><img src="/images/android/single_choice_list_view_1_1.jpg" alt="1-1"></p>
<h2 id="SlideActivityActivity">SlideActivityActivity</h2>
<p>list列表, 点击进入详情, 右滑返回列表</p>
<p><img src="/images/android/slide_activity_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/slide_activity_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/slide_activity_1_3.jpg" alt="1-3"></p>
<h2 id="SliderActivity">SliderActivity</h2>
<p>轮播图片带文字, 多种轮播效果可选</p>
<p><img src="/images/android/slider_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/slider_1_2.jpg" alt="1-2"></p>
<h2 id="StaggeredGridViewActivity">StaggeredGridViewActivity</h2>
<p>多种GridView, ListView</p>
<p><img src="/images/android/staggered_grid_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/staggered_grid_view_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/staggered_grid_view_1_3.jpg" alt="1-3"></p>
<h2 id="StickGridItemListActivity">StickGridItemListActivity</h2>
<p>GridView分类Item</p>
<p><img src="/images/android/stick_grid_item_list_1_1.jpg" alt="1-1"></p>
<h2 id="SuperListViewActivity">SuperListViewActivity</h2>
<p>下拉刷新ListView GridView</p>
<p><img src="/images/android/super_list_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/super_list_view_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/super_list_view_1_3.jpg" alt="1-3"></p>
<h2 id="SwipeCardActivity">SwipeCardActivity</h2>
<p>左滑右滑浏览图片</p>
<p><img src="/images/android/swipe_card_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/swipe_card_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/swipe_card_1_3.jpg" alt="1-3"></p>
<h2 id="SwipeLayoutActivity">SwipeLayoutActivity</h2>
<p>左滑,右滑,上滑,下滑 ListView Item, 带ActionBar</p>
<p><img src="/images/android/swipe_layout_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/swipe_layout_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/swipe_layout_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/swipe_layout_1_4.jpg" alt="1-4"></p>
<p><img src="/images/android/swipe_layout_1_5.jpg" alt="1-5"></p>
<h2 id="SwipeRefreshLayoutDemo">SwipeRefreshLayoutDemo</h2>
<p>Swipe下拉刷新</p>
<p><img src="/images/android/swipe_refresh_layout_demo_1_1.jpg" alt="1-1"></p>
<h2 id="SwitchAnimationActivity">SwitchAnimationActivity</h2>
<p>在view中加载图片布局的动画效果</p>
<p><img src="/images/android/switch_animation_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/switch_animation_1_2.jpg" alt="1-2"></p>
<h2 id="SwitchButtonActivity">SwitchButtonActivity</h2>
<p>开关按钮切换</p>
<p><img src="/images/android/switch_button_1_1.jpg" alt="1-1"></p>
<h2 id="TestHTML5WebView">TestHTML5WebView</h2>
<p>多种webView效果, 音频, 视频, 文字排版</p>
<p><img src="/images/android/test_HTML5_web_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/test_HTML5_web_view_1_2.jpg" alt="1-2"></p>
<h2 id="TimelyViewActivity">TimelyViewActivity</h2>
<p>数字过渡效果</p>
<p><img src="/images/android/timely_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/timely_view_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/timely_view_1_3.jpg" alt="1-3"></p>
<h2 id="TransitionEverywhereActivity">TransitionEverywhereActivity</h2>
<p>图片移动动画效果</p>
<p><img src="/images/android/transition_everywhere_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/transition_everywhere_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/transition_everywhere_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/transition_everywhere_1_4.jpg" alt="1-4"></p>
<h2 id="TriangleFrameActivity">TriangleFrameActivity</h2>
<p>三角框架</p>
<p><img src="/images/android/triangle_frame_1_1.jpg" alt="1-1"></p>
<h2 id="TwoWayViewActivity">TwoWayViewActivity</h2>
<p>ListView Item点击效果, 显示位置</p>
<p><img src="/images/android/two_way_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/two_way_view_1_2.jpg" alt="1-2"></p>
<h2 id="UltimateListviewActivity">UltimateListviewActivity</h2>
<p>ListView下拉刷新</p>
<p><img src="/images/android/ultimate_listview_1_1.jpg" alt="1-1"></p>
<h2 id="UltraPullToRefreshActivity">UltraPullToRefreshActivity</h2>
<p>图片view下拉刷新</p>
<p><img src="/images/android/ultra_pull_to_refresh_1_1.jpg" alt="1-1"></p>
<h2 id="UltraPullToRefreshStoreHouseActivity">UltraPullToRefreshStoreHouseActivity</h2>
<p>图片view下拉刷新</p>
<p><img src="/images/android/ultra_pull_to_refresh_store_house_1_1.jpg" alt="1-1"></p>
<h2 id="UnfoldableDetailsActivity">UnfoldableDetailsActivity</h2>
<p>右滑Item展开图片详情</p>
<p><img src="/images/android/unfoldable_details_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/unfoldable_details_1_2.jpg" alt="1-2"></p>
<h2 id="UtilsDemoActivity">UtilsDemoActivity</h2>
<p>简单文本</p>
<p><img src="/images/android/utils_demo_1_1.jpg" alt="1-1"></p>
<h2 id="ViewpagerSlidingTabsActivity">ViewpagerSlidingTabsActivity</h2>
<p>文字tab页, 可换颜色, actionBar可点击</p>
<p><img src="/images/android/viewpager_sliding_tabs_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/viewpager_sliding_tabs_1_2.jpg" alt="1-2"></p>
<h2 id="ViewPagerTransformerActivity">ViewPagerTransformerActivity</h2>
<p>多种ViewPager过渡效果</p>
<p><img src="/images/android/view_pager_transformer_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/view_pager_transformer_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/view_pager_transformer_1_3.jpg" alt="1-3"></p>
<h2 id="ViewServerActivity">ViewServerActivity</h2>
<p>动态新建Activity</p>
<p><img src="/images/android/view_server_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/view_server_1_2.jpg" alt="1-2"></p>
<h2 id="WaveViewActivity">WaveViewActivity</h2>
<p>波浪状view, 可调节位置</p>
<p><img src="/images/android/wave_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/wave_view_1_2.jpg" alt="1-2"></p>
<h2 id="WireFrameActivity">WireFrameActivity</h2>
<p>柱状图, 直角坐标图</p>
<p><img src="/images/android/wire_frame_1_1.jpg" alt="1-1"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="打开该文章前请注意,该文章包含220张图片,合计在10M左右,主要目的为快速查看Demo效果">打开该文章前请注意,该文章包含220张图片,合计在10M左右,主要目的为快速查看Demo效果</h1>
<p>感谢MarshalChen开源了UltimateAndroid这个快速开发框架, 在此我把各个demo的效果图进行展示, 刚开始学习Android, 不对的解释请留言纠正, 欢迎各位极客加入到这个框架的开发中来.</p>
<p><a href="https://github.com/cymcsg/UltimateAndroid" target="_blank" rel="external">项目地址</a></p>
<p><a href="http://study.163.com/course/introduction.htm?courseId=990020" target="_blank" rel="external">Android快速开发教程第一季-视频</a></p>
<p><a href="http://blog.marshalchen.com/ultimateandroiddoc/index.html" target="_blank" rel="external">API</a></p>
<p>由于图片太多, 所有把文档分为五部分: </p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-二" target="_blank" rel="external">UltimateAndroid-demo效果图文档-二</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-三" target="_blank" rel="external">UltimateAndroid-demo效果图文档-三</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-四" target="_blank" rel="external">UltimateAndroid-demo效果图文档-四</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-五" target="_blank" rel="external">UltimateAndroid-demo效果图文档-五</a></p>
<p>在测试过程中有三个Demo在<code>小米3</code>机型上出现程序崩溃的情况:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="title">HomeActivity</span></div><div class="line">QuickReturnListViewActivity</div><div class="line">PasscodePreferencesActivity</div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
      <category term="UI" scheme="http://arccode.net/tags/UI/"/>
    
      <category term="Android" scheme="http://arccode.net/tags/Android/"/>
    
      <category term="UltimateAndroid" scheme="http://arccode.net/tags/UltimateAndroid/"/>
    
      <category term="Android" scheme="http://arccode.net/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[UltimateAndroid-demo效果图文档-一]]></title>
    <link href="http://arccode.net/2015/02/03/UltimateAndroid-demo%E6%95%88%E6%9E%9C%E5%9B%BE%E6%96%87%E6%A1%A3-%E4%B8%80/"/>
    <id>http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一/</id>
    <published>2015-02-03T01:15:41.000Z</published>
    <updated>2015-02-25T15:27:36.000Z</updated>
    <content type="html"><![CDATA[<p>感谢MarshalChen开源了UltimateAndroid这个快速开发框架, 在此我把各个demo的效果图进行展示, 刚开始学习Android, 不对的解释请留言纠正, 欢迎各位极客加入到这个框架的开发中来.</p>
<p><a href="https://github.com/cymcsg/UltimateAndroid" target="_blank" rel="external">项目地址</a></p>
<p><a href="http://study.163.com/course/introduction.htm?courseId=990020" target="_blank" rel="external">Android快速开发教程第一季-视频</a></p>
<p><a href="http://blog.marshalchen.com/ultimateandroiddoc/index.html" target="_blank" rel="external">API</a></p>
<p>由于图片太多, 所有把文档分为五部分: </p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-二" target="_blank" rel="external">UltimateAndroid-demo效果图文档-二</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-三" target="_blank" rel="external">UltimateAndroid-demo效果图文档-三</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-四" target="_blank" rel="external">UltimateAndroid-demo效果图文档-四</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-五" target="_blank" rel="external">UltimateAndroid-demo效果图文档-五</a></p>
<p>在测试过程中有三个Demo在<code>小米3</code>机型上出现程序崩溃的情况:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="title">HomeActivity</span></div><div class="line">QuickReturnListViewActivity</div><div class="line">PasscodePreferencesActivity</div></pre></td></tr></table></figure>

<h2 id="MaterialDesignActivity">MaterialDesignActivity</h2>
<p>调色板,按钮样式及点击效果,checkbox及switch开关,进度条显示底部snackBar, dialog</p>
<p><img src="/images/android/material_design_1_1.jpg" alt="1-1 (Views)"></p>
<p><img src="/images/android/material_design_1_2.jpg" alt="1-2 (Button)"></p>
<a id="more"></a>

<p><img src="/images/android/material_design_1_3.jpg" alt="1-3 (Switches)"></p>
<p><img src="/images/android/material_design_1_4.jpg" alt="1-4 (Progress indicators)"></p>
<p><img src="/images/android/material_design_1_5.jpg" alt="1-5 (Widgets)"></p>
<h2 id="CoolDragAndDragActivity">CoolDragAndDragActivity</h2>
<p>拖动item</p>
<p><img src="/images/android/cool_drag_and_drag_1_1.jpg" alt="1-1"></p>
<h2 id="FloatingActionButtonDemo">FloatingActionButtonDemo</h2>
<p>上划按钮消失</p>
<p><img src="/images/android/floating_action_button_1_1.jpg" alt="1-1"></p>
<h2 id="GestureTouchActivity">GestureTouchActivity</h2>
<p>地球根据手势移动</p>
<p><img src="/images/android/gesture_touch_1_1.jpg" alt="1-1"></p>
<h2 id="KenBurnsViewActivity">KenBurnsViewActivity</h2>
<p>图片缓慢拉近拉远</p>
<p><img src="/images/android/ken_burns_view_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialListViewActivity">MaterialListViewActivity</h2>
<p>listview中的item图文混排, 点击提示, 手势左右滑动移除item</p>
<p><img src="/images/android/material_list_view_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialMenuToolbarActivity">MaterialMenuToolbarActivity</h2>
<p>导航栏图标动画效果</p>
<p><img src="/images/android/material_menu_toolbar_1_1.jpg" alt="1-1"></p>
<h2 id="MotionSampleActivity">MotionSampleActivity</h2>
<p>图片拉近拉远效果</p>
<p><img src="/images/android/motion_sample_1_1.jpg" alt="1-1"></p>
<h2 id="NumberProgressBarActivity">NumberProgressBarActivity</h2>
<p>带数值的直线进度条</p>
<p><img src="/images/android/number_progress_bar_1_1.jpg" alt="1-1"></p>
<h2 id="RippleEffectActivity">RippleEffectActivity</h2>
<p>点击按钮效果-波纹效果</p>
<p><img src="/images/android/ripple_effect_1_1.jpg" alt="1-1"></p>
<h2 id="SmoothProgressBarActivity">SmoothProgressBarActivity</h2>
<p>直线滚动的进度条</p>
<p><img src="/images/android/smooth_progress_bar_1_1.jpg" alt="1-1"></p>
<h2 id="SignaturePadActivity">SignaturePadActivity</h2>
<p>签名板, 画图</p>
<p><img src="/images/android/signature_pad_1_1.jpg" alt="1-1"></p>
<h2 id="ActivityAnimationsActivity">ActivityAnimationsActivity</h2>
<p>Activity到Activity过渡的动画效果</p>
<p><img src="/images/android/activity_animations_1_1.jpg" alt="1-1"></p>
<h2 id="ActivityTransitionActivity">ActivityTransitionActivity</h2>
<p>多种Activity到Activity过渡的动画效果</p>
<p><img src="/images/android/activity_transition_1_1.jpg" alt="1-1"></p>
<h2 id="AndroidAnimationsDemoActivity">AndroidAnimationsDemoActivity</h2>
<p>多种字体特效</p>
<p><img src="/images/android/android_animations_demo_1_1.jpg" alt="1-1"></p>
<h2 id="AndroidViewHoverActivity">AndroidViewHoverActivity</h2>
<p>Listview中item view Hover效果, 相当赞</p>
<p><img src="/images/android/android_view_hover_1_1.jpg" alt="1-1"></p>
<h2 id="AndroidWeekViewActivity">AndroidWeekViewActivity</h2>
<p>日历, 每天0~23时段事件</p>
<p><img src="/images/android/android_week_view_1_1.jpg" alt="1-1"></p>
<h2 id="AnimationUtilsDemo">AnimationUtilsDemo</h2>
<p>闪屏图</p>
<p><img src="/images/android/animation_utils_demo_1_1.jpg" alt="1-1"></p>
<h2 id="ArcMenuActivity">ArcMenuActivity</h2>
<p>父子菜单</p>
<p><img src="/images/android/arc_menu_1_1.jpg" alt="1-1"></p>
<h2 id="AutofitTextViewActivity">AutofitTextViewActivity</h2>
<p>文本自适应</p>
<p><img src="/images/android/autofit_text_view_1_1.jpg" alt="1-1"></p>
<h2 id="BlurDialogActivity">BlurDialogActivity</h2>
<p>弹出对话框后, 背景毛玻璃效果</p>
<p><img src="/images/android/blur_dialog_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/blur_dialog_1_2.jpg" alt="1-2"></p>
<h2 id="BlurNavigationDrawerActivity">BlurNavigationDrawerActivity</h2>
<p>左侧导航栏划出后, 背景毛玻璃效果</p>
<p><img src="/images/android/blur_navigation_drawer_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/blur_navigation_drawer_1_2.jpg" alt="1-2"></p>
<h2 id="CalendarListViewActivity">CalendarListViewActivity</h2>
<p>日历范围选择</p>
<p><img src="/images/android/calendar_list_view_1_1.jpg" alt="1-1"></p>
<h2 id="CalendarSquareActivity">CalendarSquareActivity</h2>
<p>多种日历选择方式</p>
<p><img src="/images/android/calendar_square_1_1.jpg" alt="1-1"></p>
<h2 id="CardsSwipedActivity">CardsSwipedActivity</h2>
<p>ViewPaper左右滑动效果</p>
<p><img src="/images/android/cards_swiped_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/cards_swiped_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/cards_swiped_1_3.jpg" alt="1-3"></p>
<h2 id="CircleProgressActivity">CircleProgressActivity</h2>
<p>圆圈进度条带数值</p>
<p><img src="/images/android/circle_progress_1_1.jpg" alt="1-1"></p>
<h2 id="CircularBarActivity">CircularBarActivity</h2>
<p>圆圈循环效果</p>
<p><img src="/images/android/circular_bar_1_1.jpg" alt="1-1"></p>
<h2 id="CircularProgressButtonActivity">CircularProgressButtonActivity</h2>
<p>多种按钮点击效果-圆圈进度条, 矩形等</p>
<p><img src="/images/android/circular_progress_button_1_1.jpg" alt="1-1"></p>
<h2 id="ConfigureStandupTimer">ConfigureStandupTimer</h2>
<p>分段计时, 带提示音</p>
<p><img src="/images/android/configure_standup_timer_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/configure_standup_timer_1_2.jpg" alt="1-2"></p>
<h2 id="CreditScrollDemoActivity">CreditScrollDemoActivity</h2>
<p>滚动文字</p>
<p><img src="/images/android/credit_scroll_demo_1_1.jpg" alt="1-1"></p>
<h2 id="CropExample">CropExample</h2>
<p>裁剪图片</p>
<p><img src="/images/android/crop_example_1_1.jpg" alt="1-1"></p>
<h2 id="CropperSample">CropperSample</h2>
<p>裁剪图片</p>
<p><img src="/images/android/cropper_sample_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/cropper_sample_1_2.jpg" alt="1-2"></p>
<h2 id="相关内容">相关内容</h2>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-二" target="_blank" rel="external">UltimateAndroid-demo效果图文档-二</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-三" target="_blank" rel="external">UltimateAndroid-demo效果图文档-三</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-四" target="_blank" rel="external">UltimateAndroid-demo效果图文档-四</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-五" target="_blank" rel="external">UltimateAndroid-demo效果图文档-五</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>感谢MarshalChen开源了UltimateAndroid这个快速开发框架, 在此我把各个demo的效果图进行展示, 刚开始学习Android, 不对的解释请留言纠正, 欢迎各位极客加入到这个框架的开发中来.</p>
<p><a href="https://github.com/cymcsg/UltimateAndroid" target="_blank" rel="external">项目地址</a></p>
<p><a href="http://study.163.com/course/introduction.htm?courseId=990020" target="_blank" rel="external">Android快速开发教程第一季-视频</a></p>
<p><a href="http://blog.marshalchen.com/ultimateandroiddoc/index.html" target="_blank" rel="external">API</a></p>
<p>由于图片太多, 所有把文档分为五部分: </p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-二" target="_blank" rel="external">UltimateAndroid-demo效果图文档-二</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-三" target="_blank" rel="external">UltimateAndroid-demo效果图文档-三</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-四" target="_blank" rel="external">UltimateAndroid-demo效果图文档-四</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-五" target="_blank" rel="external">UltimateAndroid-demo效果图文档-五</a></p>
<p>在测试过程中有三个Demo在<code>小米3</code>机型上出现程序崩溃的情况:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="title">HomeActivity</span></div><div class="line">QuickReturnListViewActivity</div><div class="line">PasscodePreferencesActivity</div></pre></td></tr></table></figure>

<h2 id="MaterialDesignActivity">MaterialDesignActivity</h2>
<p>调色板,按钮样式及点击效果,checkbox及switch开关,进度条显示底部snackBar, dialog</p>
<p><img src="/images/android/material_design_1_1.jpg" alt="1-1 (Views)"></p>
<p><img src="/images/android/material_design_1_2.jpg" alt="1-2 (Button)"></p>
]]>
    
    </summary>
    
      <category term="UI" scheme="http://arccode.net/tags/UI/"/>
    
      <category term="Android" scheme="http://arccode.net/tags/Android/"/>
    
      <category term="UltimateAndroid" scheme="http://arccode.net/tags/UltimateAndroid/"/>
    
      <category term="Android" scheme="http://arccode.net/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[UltimateAndroid-demo效果图文档-二]]></title>
    <link href="http://arccode.net/2015/02/03/UltimateAndroid-demo%E6%95%88%E6%9E%9C%E5%9B%BE%E6%96%87%E6%A1%A3-%E4%BA%8C/"/>
    <id>http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-二/</id>
    <published>2015-02-03T01:14:01.000Z</published>
    <updated>2015-02-25T15:26:24.000Z</updated>
    <content type="html"><![CDATA[<p>该项目详细介绍见<a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<h2 id="CustomPullToRefreshActivity">CustomPullToRefreshActivity</h2>
<p>下拉刷新</p>
<p><img src="/images/android/custom_pull_to_refresh_1_1.jpg" alt="1-1"></p>
<h2 id="CustomShapeImageViewActivity">CustomShapeImageViewActivity</h2>
<p>图片形状</p>
<p><img src="/images/android/custom_shape_image_view_1_1.jpg" alt="1-1"></p>
<a id="more"></a>

<h2 id="DifferentIconsActivity">DifferentIconsActivity</h2>
<p>图标按钮及点击效果</p>
<p><img src="/images/android/different_icons_1_1.jpg" alt="1-1"></p>
<h2 id="DiscreteSeekBarActivity">DiscreteSeekBarActivity</h2>
<p>滚动条-跳到某一页</p>
<p><img src="/images/android/discrete_seek_bar_1_1.jpg" alt="1-1"></p>
<h2 id="DiscrollActivity">DiscrollActivity</h2>
<p>上划图文飞入</p>
<p><img src="/images/android/discroll_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/discroll_1_2.jpg" alt="1-2"></p>
<h2 id="DraggableFlagViewActivity">DraggableFlagViewActivity</h2>
<p>手机QQ小红点</p>
<p><img src="/images/android/draggable_flag_view_1_1.jpg" alt="1-1"></p>
<h2 id="DraggableGridViewPaperTestActivity">DraggableGridViewPaperTestActivity</h2>
<p>添加gridview, 超出的放在第二页, 可以设计成桌面图标摆放框架</p>
<p><img src="/images/android/draggable_grid_view_paper_test_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/draggable_grid_view_paper_test_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/draggable_grid_view_paper_test_1_3.jpg" alt="1-3"></p>
<h2 id="DrawableActivity">DrawableActivity</h2>
<p>画图</p>
<p><img src="/images/android/drawable_1_1.jpg" alt="1-1"></p>
<h2 id="DropDownListViewDemo">DropDownListViewDemo</h2>
<p>下拉加载, 上拉加载</p>
<p><img src="/images/android/drop_down_list_view_demo_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/drop_down_list_view_demo_1_2.jpg" alt="1-2"></p>
<h2 id="DynamicGridActivity">DynamicGridActivity</h2>
<p>grid布局</p>
<p><img src="/images/android/dynamic_grid_1_1.jpg" alt="1-1"></p>
<h2 id="EasingActivity">EasingActivity</h2>
<p>多种平面直角坐标画曲线的效果</p>
<p><img src="/images/android/easing_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/easing_1_2.jpg" alt="1-2"></p>
<h2 id="EasyAnimationListActivity">EasyAnimationListActivity</h2>
<p>多种翻页效果</p>
<p><img src="/images/android/easy_animation_list_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/easy_animation_list_1_2.jpg" alt="1-2"></p>
<h2 id="EdgeEffectActivity">EdgeEffectActivity</h2>
<p>多种view的边缘效果</p>
<p><img src="/images/android/edge_effect_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/edge_effect_1_2.jpg" alt="1-2"></p>
<h2 id="ExpandCircleProgressExampleActivity">ExpandCircleProgressExampleActivity</h2>
<p>可扩充的圆圈进度条</p>
<p><img src="/images/android/expand_circle_progress_example_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/expand_circle_progress_example_1_2.jpg" alt="1-2"></p>
<h2 id="FaceCropActivity">FaceCropActivity</h2>
<p>面部裁剪</p>
<p><img src="/images/android/face_crop_1_1.jpg" alt="1-1"></p>
<h2 id="FancyCoverFlowActivity">FancyCoverFlowActivity</h2>
<p>多种图片旋转木马</p>
<p><img src="/images/android/fancy_cover_flow_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/fancy_cover_flow_1_2.jpg" alt="1-2"></p>
<h2 id="FilckerAnimationListActivity">FilckerAnimationListActivity</h2>
<p>动态增加viewItem</p>
<p><img src="/images/android/filcker_animation_list_1_1.jpg" alt="1-1"></p>
<h2 id="FlipViewActivity">FlipViewActivity</h2>
<p>图片上下翻页</p>
<p><img src="/images/android/flip_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/flip_view_1_2.jpg" alt="1-2"></p>
<h2 id="FloatingActionButtonActivity">FloatingActionButtonActivity</h2>
<p>浮动按钮, 带子按钮</p>
<p><img src="/images/android/floating_action_button_1_1.jpg" alt="1-1"></p>
<h2 id="FloatingActionButtonDemo">FloatingActionButtonDemo</h2>
<p>上划按钮消失</p>
<p><img src="/images/android/floating_action_button_1_1.jpg" alt="1-1"></p>
<h2 id="FloatLabelActivity">FloatLabelActivity</h2>
<p>浮动的Label</p>
<p><img src="/images/android/float_label_1_1.jpg" alt="1-1"></p>
<h2 id="FlowTextViewActivity">FlowTextViewActivity</h2>
<p>嵌在图片边缘的流动文本</p>
<p><img src="/images/android/flow_text_view_1_1.jpg" alt="1-1"></p>
<h2 id="FoldableListActivity">FoldableListActivity</h2>
<p>图片翻页效果</p>
<p><img src="/images/android/foldable_list_1_1.jpg" alt="1-1"></p>
<h2 id="FoldingActivitys">FoldingActivitys</h2>
<p>图片及左侧菜单折叠效果</p>
<p><img src="/images/android/folding_activitys_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/folding_activitys_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/folding_activitys_1_3.jpg" alt="1-3"></p>
<h2 id="FreeFlowArtbookActivity">FreeFlowArtbookActivity</h2>
<p>图片流加载</p>
<p><img src="/images/android/free_flow_artbook_1_1.jpg" alt="1-1"></p>
<h2 id="FreeFlowPhotoGridActivity">FreeFlowPhotoGridActivity</h2>
<p>变换的网格布局, 可滚动指定位置</p>
<p><img src="/images/android/free_flow_photo_grid_1_1.jpg" alt="1-1"></p>
<h2 id="GoogleProgressBarActivity">GoogleProgressBarActivity</h2>
<p>谷歌进度条</p>
<p><img src="/images/android/google_progress_bar_1_1.jpg" alt="1-1"></p>
<h2 id="HomeActivity">HomeActivity</h2>
<p>注: 该Demo测试失败</p>
<p>测试机型: 小米3</p>
<h2 id="ImageFilterActivity">ImageFilterActivity</h2>
<p>图层过滤</p>
<p><img src="/images/android/image_filter_1_1.jpg" alt="1-1"></p>
<h2 id="ImageProcessingActivity">ImageProcessingActivity</h2>
<p>图层处理</p>
<p><img src="/images/android/image_processing_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/image_processing_1_2.jpg" alt="1-2"></p>
<h2 id="ImageProcessingVideoImageActivity">ImageProcessingVideoImageActivity</h2>
<p>播放图片</p>
<p><img src="/images/android/image_processing_video_image_1_1.jpg" alt="1-1"></p>
<h2 id="JazzyViewActivity">JazzyViewActivity</h2>
<p>图片翻转效果</p>
<p><img src="/images/android/jazzy_view_1_1.jpg" alt="1-1"></p>
<h2 id="JumpingBeansActivity">JumpingBeansActivity</h2>
<p>字体跳动效果</p>
<p><img src="/images/android/jumping_beans_1_1.jpg" alt="1-1"></p>
<h2 id="相关内容">相关内容</h2>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-二" target="_blank" rel="external">UltimateAndroid-demo效果图文档-二</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-三" target="_blank" rel="external">UltimateAndroid-demo效果图文档-三</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-四" target="_blank" rel="external">UltimateAndroid-demo效果图文档-四</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-五" target="_blank" rel="external">UltimateAndroid-demo效果图文档-五</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>该项目详细介绍见<a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<h2 id="CustomPullToRefreshActivity">CustomPullToRefreshActivity</h2>
<p>下拉刷新</p>
<p><img src="/images/android/custom_pull_to_refresh_1_1.jpg" alt="1-1"></p>
<h2 id="CustomShapeImageViewActivity">CustomShapeImageViewActivity</h2>
<p>图片形状</p>
<p><img src="/images/android/custom_shape_image_view_1_1.jpg" alt="1-1"></p>
]]>
    
    </summary>
    
      <category term="UI" scheme="http://arccode.net/tags/UI/"/>
    
      <category term="Android" scheme="http://arccode.net/tags/Android/"/>
    
      <category term="UltimateAndroid" scheme="http://arccode.net/tags/UltimateAndroid/"/>
    
      <category term="Android" scheme="http://arccode.net/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[UltimateAndroid-demo效果图文档-三]]></title>
    <link href="http://arccode.net/2015/02/03/UltimateAndroid-demo%E6%95%88%E6%9E%9C%E5%9B%BE%E6%96%87%E6%A1%A3-%E4%B8%89/"/>
    <id>http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-三/</id>
    <published>2015-02-03T01:13:05.000Z</published>
    <updated>2015-02-25T15:26:29.000Z</updated>
    <content type="html"><![CDATA[<p>该项目详细介绍见<a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<h2 id="ListAnimationActivity">ListAnimationActivity</h2>
<p>卡片加载, 网格图片, listview文本加载效果, viewItem点击效果</p>
<p><img src="/images/android/list_animation_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/list_animation_1_2.jpg" alt="1-2"></p>
<a id="more"></a>

<p><img src="/images/android/list_animation_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/list_animation_1_4.jpg" alt="1-4"></p>
<p><img src="/images/android/list_animation_1_5.jpg" alt="1-5"></p>
<p><img src="/images/android/list_animation_1_6.jpg" alt="1-6"></p>
<p><img src="/images/android/list_animation_1_7.jpg" alt="1-7"></p>
<h2 id="ListBuddiesActivity">ListBuddiesActivity</h2>
<p>分割列表流动</p>
<p><img src="/images/android/list_buddies_1_1.jpg" alt="1-1"></p>
<h2 id="ListViewFilterActivity">ListViewFilterActivity</h2>
<p>列表过滤</p>
<p><img src="/images/android/list_view_filter_1_1.jpg" alt="1-1"></p>
<h2 id="MarqueeViewSample">MarqueeViewSample</h2>
<p>文字选取框</p>
<p><img src="/images/android/marquee_view_sample_1_1.jpg" alt="1-1"></p>
<h2 id="MatchViewActivity">MatchViewActivity</h2>
<p>字体动画效果</p>
<p><img src="/images/android/match_view_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialEditTextActivity">MaterialEditTextActivity</h2>
<p>输入框样式</p>
<p><img src="/images/android/material_edit_text_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialProgressWheelActivity">MaterialProgressWheelActivity</h2>
<p>定制圆圈进度条</p>
<p><img src="/images/android/material_progress_wheel_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialRippleActivity">MaterialRippleActivity</h2>
<p>按钮波纹效果</p>
<p><img src="/images/android/material_ripple_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialTabsWithIconsActivity">MaterialTabsWithIconsActivity</h2>
<p>图标tab页</p>
<p><img src="/images/android/material_tabs_with_icons_1_1.jpg" alt="1-1"></p>
<h2 id="MaterialTabTextActivity">MaterialTabTextActivity</h2>
<p>文本tab页</p>
<p><img src="/images/android/material_tab_text_1_1.jpg" alt="1-1"></p>
<h2 id="MenuCircleShowingAnimationActivity">MenuCircleShowingAnimationActivity</h2>
<p>浮动按钮, 带子按钮</p>
<p><img src="/images/android/menu_circle_showing_animation_1_1.jpg" alt="1-1"></p>
<h2 id="MultipleChoiceListView">MultipleChoiceListView</h2>
<p>多选列表</p>
<p><img src="/images/android/multiple_choice_list_view_1_1.jpg" alt="1-1"></p>
<h2 id="NiftyDialogActivity">NiftyDialogActivity</h2>
<p>多种对话框效果</p>
<p><img src="/images/android/nifty_dialog_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/nifty_dialog_1_2.jpg" alt="1-2"></p>
<h2 id="ObservableScrollViewActivity">ObservableScrollViewActivity</h2>
<p>多种视图滚动效果</p>
<p><img src="/images/android/observable_scroll_view_1_1.jpg" alt="1-1"></p>
<h2 id="PagerSlidingTabStripActivity">PagerSlidingTabStripActivity</h2>
<p>文本tab页, 可自定义tab颜色</p>
<p><img src="/images/android/pager_sliding_tab_strip_1_1.jpg" alt="1-1"></p>
<h2 id="PanningViewActivity">PanningViewActivity</h2>
<p>左右摇动图片</p>
<p><img src="/images/android/panning_view_1_1.jpg" alt="1-1"></p>
<h2 id="ParallaxScrollActivity">ParallaxScrollActivity</h2>
<p>多种list滚动, 有叠加效果</p>
<p><img src="/images/android/parallax_scroll_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/parallax_scroll_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/parallax_scroll_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/parallax_scroll_1_4.jpg" alt="1-4"></p>
<h2 id="PasscodePreferencesActivity">PasscodePreferencesActivity</h2>
<p>注: 该Demo测试失败</p>
<p>测试机型: 小米3</p>
<h2 id="PatioDemoActivity">PatioDemoActivity</h2>
<p>拍照, 选取本地图片, 可选择多张</p>
<p><img src="/images/android/patio_demo_1_1.jpg" alt="1-1"></p>
<h2 id="PhotoViewActivity">PhotoViewActivity</h2>
<p>图片自动播放, 可放大</p>
<p><img src="/images/android/photo_view_1_1.jpg" alt="1-1"></p>
<h2 id="ProgressbarWheelActivity">ProgressbarWheelActivity</h2>
<p>圆圈滚动条, 可选择转动方式</p>
<p><img src="/images/android/progressbar_wheel_1_1.jpg" alt="1-1"></p>
<h2 id="ProgressLayoutActivity">ProgressLayoutActivity</h2>
<p>页面加载圆圈进度条</p>
<p><img src="/images/android/progress_layout_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/progress_layout_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/progress_layout_1_3.jpg" alt="1-3"></p>
<h2 id="PullScrollViewActivity">PullScrollViewActivity</h2>
<p>滚动view, item点击事件</p>
<p><img src="/images/android/pull_scroll_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/pull_scroll_view_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/pull_scroll_view_1_3.jpg" alt="1-3"></p>
<h2 id="PullSplashActivity">PullSplashActivity</h2>
<p>上滑进入下一页, 可做成锁屏首页</p>
<p><img src="/images/android/pull_splash_1_1.jpg" alt="1-1"></p>
<h2 id="PullToZoomActivity">PullToZoomActivity</h2>
<p>滚动放大图片</p>
<p><img src="/images/android/pull_to_zoom_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/pull_to_zoom_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/pull_to_zoom_1_3.jpg" alt="1-3"></p>
<h2 id="QuickReturnListViewActivity">QuickReturnListViewActivity</h2>
<p>注: 该Demo测试失败</p>
<p>测试机型: 小米3</p>
<h2 id="ReboundActivity">ReboundActivity</h2>
<p>回弹图片效果</p>
<p><img src="/images/android/rebound_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/rebound_1_2.jpg" alt="1-2"></p>
<h2 id="ReboundActivitySample">ReboundActivitySample</h2>
<p>回弹图片效果Demo</p>
<p><img src="/images/android/rebound_activity_sample_1_1.jpg" alt="1-1"></p>
<h2 id="相关内容">相关内容</h2>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-二" target="_blank" rel="external">UltimateAndroid-demo效果图文档-二</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-三" target="_blank" rel="external">UltimateAndroid-demo效果图文档-三</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-四" target="_blank" rel="external">UltimateAndroid-demo效果图文档-四</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-五" target="_blank" rel="external">UltimateAndroid-demo效果图文档-五</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>该项目详细介绍见<a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<h2 id="ListAnimationActivity">ListAnimationActivity</h2>
<p>卡片加载, 网格图片, listview文本加载效果, viewItem点击效果</p>
<p><img src="/images/android/list_animation_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/list_animation_1_2.jpg" alt="1-2"></p>
]]>
    
    </summary>
    
      <category term="UI" scheme="http://arccode.net/tags/UI/"/>
    
      <category term="Android" scheme="http://arccode.net/tags/Android/"/>
    
      <category term="UltimateAndroid" scheme="http://arccode.net/tags/UltimateAndroid/"/>
    
      <category term="Android" scheme="http://arccode.net/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[UltimateAndroid-demo效果图文档-四]]></title>
    <link href="http://arccode.net/2015/02/03/UltimateAndroid-demo%E6%95%88%E6%9E%9C%E5%9B%BE%E6%96%87%E6%A1%A3-%E5%9B%9B/"/>
    <id>http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-四/</id>
    <published>2015-02-03T01:12:08.000Z</published>
    <updated>2015-02-25T15:26:35.000Z</updated>
    <content type="html"><![CDATA[<p>该项目详细介绍见<a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<h2 id="RecyclerViewItemAnimatorActivity">RecyclerViewItemAnimatorActivity</h2>
<p>动态增加item效果, 可从不同方向滑入</p>
<p><img src="/images/android/recycler_view_item_animator_1_1.jpg" alt="1-1"></p>
<h2 id="RecyclerViewPlayGroundActivity">RecyclerViewPlayGroundActivity</h2>
<p>Item点击效果</p>
<p><img src="/images/android/recycler_view_play_ground_1_1.jpg" alt="1-1"></p>
<a id="more"></a>

<h2 id="RecyclerViewSample">RecyclerViewSample</h2>
<p>RecyclerView</p>
<p><img src="/images/android/recycler_view_sample_1_1.jpg" alt="1-1"></p>
<h2 id="RecyclerViewStickyHeadersActivity">RecyclerViewStickyHeadersActivity</h2>
<p>StickyHeader折叠</p>
<p><img src="/images/android/recycler_view_sticky_headers_1_1.jpg" alt="1-1"></p>
<h2 id="ResideMenuActivity">ResideMenuActivity</h2>
<p>侧边菜单</p>
<p><img src="/images/android/reside_menu_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/reside_menu_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/reside_menu_1_3.jpg" alt="1-3"></p>
<h2 id="RippleBackgroundActivity">RippleBackgroundActivity</h2>
<p>波纹背景动画效果</p>
<p><img src="/images/android/ripple_background_1_1.jpg" alt="1-1"></p>
<h2 id="RippleDrawable">RippleDrawable</h2>
<p>点击item出现波纹效果</p>
<p><img src="/images/android/ripple_drawable_1_1.jpg" alt="1-1"></p>
<h2 id="RiseNumberActivity">RiseNumberActivity</h2>
<p>数字增加效果</p>
<p><img src="/images/android/rise_number_1_1.jpg" alt="1-1"></p>
<h2 id="RoundCornerProgressBarActivity">RoundCornerProgressBarActivity</h2>
<p>圆角进度条</p>
<p><img src="/images/android/round_corner_progress_bar_1_1.jpg" alt="1-1"></p>
<h2 id="RoundedImageViewActivity">RoundedImageViewActivity</h2>
<p>圆角图片</p>
<p><img src="/images/android/rounded_image_view_1_1.jpg" alt="1-1"></p>
<h2 id="ShapeImageViewActivity">ShapeImageViewActivity</h2>
<p>图片形状</p>
<p><img src="/images/android/shape_image_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/shape_image_view_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/shape_image_view_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/shape_image_view_1_4.jpg" alt="1-4"></p>
<p><img src="/images/android/shape_image_view_1_5.jpg" alt="1-5"></p>
<h2 id="ShowCaseSample">ShowCaseSample</h2>
<p>按钮显示,隐藏, 下一步效果</p>
<p><img src="/images/android/show_case_sample_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/show_case_sample_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/show_case_sample_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/show_case_sample_1_4.jpg" alt="1-4"></p>
<h2 id="SingleChoiceListView">SingleChoiceListView</h2>
<p>单选列表, item可拖动</p>
<p><img src="/images/android/single_choice_list_view_1_1.jpg" alt="1-1"></p>
<h2 id="SlideActivityActivity">SlideActivityActivity</h2>
<p>list列表, 点击进入详情, 右滑返回列表</p>
<p><img src="/images/android/slide_activity_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/slide_activity_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/slide_activity_1_3.jpg" alt="1-3"></p>
<h2 id="SliderActivity">SliderActivity</h2>
<p>轮播图片带文字, 多种轮播效果可选</p>
<p><img src="/images/android/slider_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/slider_1_2.jpg" alt="1-2"></p>
<h2 id="StaggeredGridViewActivity">StaggeredGridViewActivity</h2>
<p>多种GridView, ListView</p>
<p><img src="/images/android/staggered_grid_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/staggered_grid_view_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/staggered_grid_view_1_3.jpg" alt="1-3"></p>
<h2 id="StickGridItemListActivity">StickGridItemListActivity</h2>
<p>GridView分类Item</p>
<p><img src="/images/android/stick_grid_item_list_1_1.jpg" alt="1-1"></p>
<h2 id="SuperListViewActivity">SuperListViewActivity</h2>
<p>下拉刷新ListView GridView</p>
<p><img src="/images/android/super_list_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/super_list_view_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/super_list_view_1_3.jpg" alt="1-3"></p>
<h2 id="相关内容">相关内容</h2>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-二" target="_blank" rel="external">UltimateAndroid-demo效果图文档-二</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-三" target="_blank" rel="external">UltimateAndroid-demo效果图文档-三</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-四" target="_blank" rel="external">UltimateAndroid-demo效果图文档-四</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-五" target="_blank" rel="external">UltimateAndroid-demo效果图文档-五</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>该项目详细介绍见<a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<h2 id="RecyclerViewItemAnimatorActivity">RecyclerViewItemAnimatorActivity</h2>
<p>动态增加item效果, 可从不同方向滑入</p>
<p><img src="/images/android/recycler_view_item_animator_1_1.jpg" alt="1-1"></p>
<h2 id="RecyclerViewPlayGroundActivity">RecyclerViewPlayGroundActivity</h2>
<p>Item点击效果</p>
<p><img src="/images/android/recycler_view_play_ground_1_1.jpg" alt="1-1"></p>
]]>
    
    </summary>
    
      <category term="UI" scheme="http://arccode.net/tags/UI/"/>
    
      <category term="Android" scheme="http://arccode.net/tags/Android/"/>
    
      <category term="UltimateAndroid" scheme="http://arccode.net/tags/UltimateAndroid/"/>
    
      <category term="Android" scheme="http://arccode.net/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[UltimateAndroid-demo效果图文档-五]]></title>
    <link href="http://arccode.net/2015/02/03/UltimateAndroid-demo%E6%95%88%E6%9E%9C%E5%9B%BE%E6%96%87%E6%A1%A3-%E4%BA%94/"/>
    <id>http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-五/</id>
    <published>2015-02-03T01:11:13.000Z</published>
    <updated>2015-02-25T15:26:40.000Z</updated>
    <content type="html"><![CDATA[<p>该项目详细介绍见<a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<h2 id="SwipeCardActivity">SwipeCardActivity</h2>
<p>左滑右滑浏览图片</p>
<p><img src="/images/android/swipe_card_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/swipe_card_1_2.jpg" alt="1-2"></p>
<a id="more"></a>

<p><img src="/images/android/swipe_card_1_3.jpg" alt="1-3"></p>
<h2 id="SwipeLayoutActivity">SwipeLayoutActivity</h2>
<p>左滑,右滑,上滑,下滑 ListView Item, 带ActionBar</p>
<p><img src="/images/android/swipe_layout_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/swipe_layout_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/swipe_layout_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/swipe_layout_1_4.jpg" alt="1-4"></p>
<p><img src="/images/android/swipe_layout_1_5.jpg" alt="1-5"></p>
<h2 id="SwipeRefreshLayoutDemo">SwipeRefreshLayoutDemo</h2>
<p>Swipe下拉刷新</p>
<p><img src="/images/android/swipe_refresh_layout_demo_1_1.jpg" alt="1-1"></p>
<h2 id="SwitchAnimationActivity">SwitchAnimationActivity</h2>
<p>在view中加载图片布局的动画效果</p>
<p><img src="/images/android/switch_animation_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/switch_animation_1_2.jpg" alt="1-2"></p>
<h2 id="SwitchButtonActivity">SwitchButtonActivity</h2>
<p>开关按钮切换</p>
<p><img src="/images/android/switch_button_1_1.jpg" alt="1-1"></p>
<h2 id="TestHTML5WebView">TestHTML5WebView</h2>
<p>多种webView效果, 音频, 视频, 文字排版</p>
<p><img src="/images/android/test_HTML5_web_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/test_HTML5_web_view_1_2.jpg" alt="1-2"></p>
<h2 id="TimelyViewActivity">TimelyViewActivity</h2>
<p>数字过渡效果</p>
<p><img src="/images/android/timely_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/timely_view_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/timely_view_1_3.jpg" alt="1-3"></p>
<h2 id="TransitionEverywhereActivity">TransitionEverywhereActivity</h2>
<p>图片移动动画效果</p>
<p><img src="/images/android/transition_everywhere_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/transition_everywhere_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/transition_everywhere_1_3.jpg" alt="1-3"></p>
<p><img src="/images/android/transition_everywhere_1_4.jpg" alt="1-4"></p>
<h2 id="TriangleFrameActivity">TriangleFrameActivity</h2>
<p>三角框架</p>
<p><img src="/images/android/triangle_frame_1_1.jpg" alt="1-1"></p>
<h2 id="TwoWayViewActivity">TwoWayViewActivity</h2>
<p>ListView Item点击效果, 显示位置</p>
<p><img src="/images/android/two_way_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/two_way_view_1_2.jpg" alt="1-2"></p>
<h2 id="UltimateListviewActivity">UltimateListviewActivity</h2>
<p>ListView下拉刷新</p>
<p><img src="/images/android/ultimate_listview_1_1.jpg" alt="1-1"></p>
<h2 id="UltraPullToRefreshActivity">UltraPullToRefreshActivity</h2>
<p>图片view下拉刷新</p>
<p><img src="/images/android/ultra_pull_to_refresh_1_1.jpg" alt="1-1"></p>
<h2 id="UltraPullToRefreshStoreHouseActivity">UltraPullToRefreshStoreHouseActivity</h2>
<p>图片view下拉刷新</p>
<p><img src="/images/android/ultra_pull_to_refresh_store_house_1_1.jpg" alt="1-1"></p>
<h2 id="UnfoldableDetailsActivity">UnfoldableDetailsActivity</h2>
<p>右滑Item展开图片详情</p>
<p><img src="/images/android/unfoldable_details_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/unfoldable_details_1_2.jpg" alt="1-2"></p>
<h2 id="UtilsDemoActivity">UtilsDemoActivity</h2>
<p>简单文本</p>
<p><img src="/images/android/utils_demo_1_1.jpg" alt="1-1"></p>
<h2 id="ViewpagerSlidingTabsActivity">ViewpagerSlidingTabsActivity</h2>
<p>文字tab页, 可换颜色, actionBar可点击</p>
<p><img src="/images/android/viewpager_sliding_tabs_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/viewpager_sliding_tabs_1_2.jpg" alt="1-2"></p>
<h2 id="ViewPagerTransformerActivity">ViewPagerTransformerActivity</h2>
<p>多种ViewPager过渡效果</p>
<p><img src="/images/android/view_pager_transformer_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/view_pager_transformer_1_2.jpg" alt="1-2"></p>
<p><img src="/images/android/view_pager_transformer_1_3.jpg" alt="1-3"></p>
<h2 id="ViewServerActivity">ViewServerActivity</h2>
<p>动态新建Activity</p>
<p><img src="/images/android/view_server_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/view_server_1_2.jpg" alt="1-2"></p>
<h2 id="WaveViewActivity">WaveViewActivity</h2>
<p>波浪状view, 可调节位置</p>
<p><img src="/images/android/wave_view_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/wave_view_1_2.jpg" alt="1-2"></p>
<h2 id="WireFrameActivity">WireFrameActivity</h2>
<p>柱状图, 直角坐标图</p>
<p><img src="/images/android/wire_frame_1_1.jpg" alt="1-1"></p>
<h2 id="相关内容">相关内容</h2>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-二" target="_blank" rel="external">UltimateAndroid-demo效果图文档-二</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-三" target="_blank" rel="external">UltimateAndroid-demo效果图文档-三</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-四" target="_blank" rel="external">UltimateAndroid-demo效果图文档-四</a></p>
<p><a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-五" target="_blank" rel="external">UltimateAndroid-demo效果图文档-五</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>该项目详细介绍见<a href="http://arccode.net/2015/02/03/UltimateAndroid-demo效果图文档-一" target="_blank" rel="external">UltimateAndroid-demo效果图文档-一</a></p>
<h2 id="SwipeCardActivity">SwipeCardActivity</h2>
<p>左滑右滑浏览图片</p>
<p><img src="/images/android/swipe_card_1_1.jpg" alt="1-1"></p>
<p><img src="/images/android/swipe_card_1_2.jpg" alt="1-2"></p>
]]>
    
    </summary>
    
      <category term="UI" scheme="http://arccode.net/tags/UI/"/>
    
      <category term="Android" scheme="http://arccode.net/tags/Android/"/>
    
      <category term="UltimateAndroid" scheme="http://arccode.net/tags/UltimateAndroid/"/>
    
      <category term="Android" scheme="http://arccode.net/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[大数据参考资料]]></title>
    <link href="http://arccode.net/2015/01/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    <id>http://arccode.net/2015/01/07/大数据参考资料/</id>
    <published>2015-01-07T08:29:05.000Z</published>
    <updated>2015-02-25T15:43:27.000Z</updated>
    <content type="html"><![CDATA[<p>大数据相关资料汇聚于此</p>
<p><a href="http://blog.csdn.net/xpmars/article/details/42435441" target="_blank" rel="external">大数据架构</a></p>
<p><a href="http://blog.csdn.net/hguisu/article/details/9174459" target="_blank" rel="external">Redis 代理服务Twemproxy</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>大数据相关资料汇聚于此</p>
<p><a href="http://blog.csdn.net/xpmars/article/details/42435441" target="_blank" rel="external">大数据架构</a></p>
<p><a href]]>
    </summary>
    
      <category term="学习资料" scheme="http://arccode.net/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    
      <category term="学习资料" scheme="http://arccode.net/categories/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Web参考资料]]></title>
    <link href="http://arccode.net/2015/01/07/Web%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    <id>http://arccode.net/2015/01/07/Web参考资料/</id>
    <published>2015-01-07T06:01:53.000Z</published>
    <updated>2015-02-25T15:28:37.000Z</updated>
    <content type="html"><![CDATA[<p>Web相关资料汇聚于此</p>
<p><a href="https://github.com/thomasdavis/backbonetutorials" target="_blank" rel="external">Backbone Tutorials</a></p>
<p><a href="https://github.com/dypsilon/frontend-dev-bookmarks" target="_blank" rel="external">前端开发参考</a></p>
<p><a href="https://github.com/the5fire/backbonejs-learning-note" target="_blank" rel="external">backbonejs学习笔记</a></p>
<p><a href="http://feliving.github.io/developing-backbone-applications/" target="_blank" rel="external">Developing Backbone.js Applications</a></p>
<p><a href="https://code.google.com/p/google-styleguide/" target="_blank" rel="external">google-styleguide</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Web相关资料汇聚于此</p>
<p><a href="https://github.com/thomasdavis/backbonetutorials" target="_blank" rel="external">Backbone Tutorials</a></p>
<]]>
    </summary>
    
      <category term="Web" scheme="http://arccode.net/tags/Web/"/>
    
      <category term="学习资料" scheme="http://arccode.net/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    
      <category term="学习资料" scheme="http://arccode.net/categories/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android学习-序]]></title>
    <link href="http://arccode.net/2014/12/31/Android%E5%AD%A6%E4%B9%A0-%E5%BA%8F/"/>
    <id>http://arccode.net/2014/12/31/Android学习-序/</id>
    <published>2014-12-31T15:03:50.000Z</published>
    <updated>2015-02-25T15:41:56.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>准备开发一个小型APP, 经过调研发现组合一些开源库即可实现, 尝试组合了一些开源库, 调用API没问题, 但为了满足需求做扩展就有点困难, 为此准备系统学习Android, 参考的资料, 碰到的问题,使用的开源库, 开发的Demo均在该博客中进行记录.</p>
<a id="more"></a>

<h2 id="参考资料-基础篇">参考资料-基础篇</h2>
<p><a href="http://mirrors.segmentfault.com/adchs/index.html" target="_blank" rel="external">Android Design</a></p>
<p><a href="http://design.1sters.com/" target="_blank" rel="external">Material Design 中文版</a></p>
<p><a href="http://source.android.com/source/code-style.html" target="_blank" rel="external">Android 编码规范</a></p>
<p><a href="https://google-styleguide.googlecode.com/svn/trunk/javaguide.html" target="_blank" rel="external">Google Java 编码规范</a></p>
<p><a href="http://hukai.me/android-training-course-in-chinese/best-performance.html" target="_blank" rel="external">Android 性能优化</a></p>
<p><a href="https://github.com/kesenhoo/android-training-course-in-chinese" target="_blank" rel="external">Google Android官方培训课程中文版</a></p>
<h2 id="参考资料-开源项目">参考资料-开源项目</h2>
<p><a href="https://github.com/Trinea/android-open-project" target="_blank" rel="external">Android开源项目分类汇总</a></p>
<p><a href="https://github.com/navasmdc/MaterialDesignLibrary" target="_blank" rel="external">MaterialDesignLibrary</a></p>
<p><a href="https://github.com/yangfuhai/ASimpleCache" target="_blank" rel="external">ASimpleCache - a simple cache for android and java</a></p>
<p><a href="https://github.com/yangfuhai/afinal" target="_blank" rel="external">afinal - android的ioc，orm框架</a></p>
<p><a href="https://github.com/kymjs/KJFrameForAndroid" target="_blank" rel="external">KJFrameForAndroid - android的ioc，orm框架</a></p>
<h2 id="参考资料-博文">参考资料-博文</h2>
<p><a href="http://www.trinea.cn/android/eventbus-source-analysis/" target="_blank" rel="external">EventBus 源码解析</a></p>
<p><a href="http://apkdemo.com/jjfa/" target="_blank" rel="external">安卓序 | ApkDemo</a></p>
<p><a href="http://stormzhang.com/android/2014/03/08/review-boohee-architecture/" target="_blank" rel="external">再看薄荷</a></p>
<p><a href="http://www.csdn.net/article/2013-05-21/2815370-Android-open-source-projects-finale" target="_blank" rel="external">直接拿来用！最火的Android开源项目</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>准备开发一个小型APP, 经过调研发现组合一些开源库即可实现, 尝试组合了一些开源库, 调用API没问题, 但为了满足需求做扩展就有点困难, 为此准备系统学习Android, 参考的资料, 碰到的问题,使用的开源库, 开发的Demo均在该博客中进行记录.</p>
]]>
    
    </summary>
    
      <category term="Android" scheme="http://arccode.net/tags/Android/"/>
    
      <category term="学习资料" scheme="http://arccode.net/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    
      <category term="Android" scheme="http://arccode.net/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android名词解释]]></title>
    <link href="http://arccode.net/2014/12/30/Android%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/"/>
    <id>http://arccode.net/2014/12/30/Android名词解释/</id>
    <published>2014-12-30T03:30:12.000Z</published>
    <updated>2015-02-25T15:32:23.000Z</updated>
    <content type="html"><![CDATA[<h2 id="android:id=”@id”与android:id=”@+id/“的区别">android:id=”@id”与android:id=”@+id/“的区别</h2>
<p>Android中的组件需要用一个int类型的值来表示，这个值也就是组件标签中的id属性值;id属性只能接受资源类型的值，也就是必须以@开头的值，例如，@id/abc、@+id/xyz等。<br><a id="more"></a><br>如果在@后面使用“+”，表示当修改完某个布局文件并保存后，系统会自动在R.java文件中生成相应的int类型变量。变量名就是“/”后面的值，例如，@+id/xyz会在R.java文件中生成int xyz = value，其中value是一个十六进制的数。如果xyz在R.java中已经存在同名的变量，就不再生成新的变量，而该组件会使用这个已存在的变量的值。 </p>
<p>也就是说，如果使用@+id/name形式，当R.java中存在名为name变量时，则该组件会使用该变量的值作为标识。如果不存在该变量，则添加一个新的变量，并为该变量赋相应的值（不会重复）。 </p>
<p>既然组件的id属性是一个资源id就可以，那么自然可以设置任何已经存在的资源id值，例如，@drawable/icon、@string/ok、@+string/you等。当然，也可以设置android系统中已存在的资源id，例如，可以设置id属性值为@id/android:message。 </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;ListView android:<span class="variable">id=</span><span class="string">"@+id/android:message"</span> android:<span class="variable">layout_width=</span><span class="string">"wrap_content"</span> android:<span class="variable">layout_height=</span><span class="string">"wrap_content"</span>/&gt;</div></pre></td></tr></table></figure>

<p>还有一种方法定义资源文件ids， 若在ids.xml中定义了ID，则在layout中可如下定义@id/price_edit，<br>否则@+id/price_edit。<br>例如，在ids.xml中我们可以如下定义：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">item</span> <span class="attribute">type</span>=<span class="value">"id"</span> <span class="attribute">name</span>=<span class="value">"edit01"</span>&gt;</span>false<span class="tag">&lt;/<span class="title">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></div></pre></td></tr></table></figure>

<p>在布局文件中使用：</p>
<p><textview android:id="@id/edit01"><br>这样有利于统一管理资源文件。</textview></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="android:id=”@id”与android:id=”@+id/“的区别">android:id=”@id”与android:id=”@+id/“的区别</h2>
<p>Android中的组件需要用一个int类型的值来表示，这个值也就是组件标签中的id属性值;id属性只能接受资源类型的值，也就是必须以@开头的值，例如，@id/abc、@+id/xyz等。<br>]]>
    
    </summary>
    
      <category term="名词解释" scheme="http://arccode.net/tags/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/"/>
    
      <category term="Android" scheme="http://arccode.net/tags/Android/"/>
    
      <category term="Android" scheme="http://arccode.net/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac下反编译Android安装包]]></title>
    <link href="http://arccode.net/2014/12/27/Mac%E4%B8%8B%E5%8F%8D%E7%BC%96%E8%AF%91Android%E5%AE%89%E8%A3%85%E5%8C%85/"/>
    <id>http://arccode.net/2014/12/27/Mac下反编译Android安装包/</id>
    <published>2014-12-27T06:14:43.000Z</published>
    <updated>2015-02-25T15:47:19.000Z</updated>
    <content type="html"><![CDATA[<h2 id="准备工作">准备工作</h2>
<ol>
<li>下载<code>apkTool</code>: <code>https://android-apktool.googlecode.com/files/apktool1.5.2.tar.bz2</code>;</li>
<li>下载<code>dex2jar</code>: <code>https://dex2jar.googlecode.com/files/dex2jar-0.0.9.15.zip</code>;</li>
<li>下载<code>jd-gui</code>: <code>http://jd.benow.ca/jd-gui/downloads/jd-gui-0.3.5.osx.i686.dmg</code>;</li>
</ol>
<a id="more"></a>

<h2 id="反编译">反编译</h2>
<h3 id="解压缩下载的文件,_目录如下:">解压缩下载的文件, 目录如下:</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">revcompile/</div><div class="line">├── apktool.jar</div><div class="line">└── dex2jar-<span class="number">0.0</span>.<span class="number">9.15</span></div><div class="line">    ├── LICENSE.txt</div><div class="line">    ├── NOTICE.txt</div><div class="line">    ├── d2j-apk-<span class="keyword">sign</span>.bat</div><div class="line">    ├── d2j-apk-<span class="keyword">sign</span>.<span class="keyword">sh</span></div><div class="line">    ├── d2j-asm-verify.bat</div><div class="line">    ├── d2j-asm-verify.<span class="keyword">sh</span></div></pre></td></tr></table></figure>

<h3 id="执行命令">执行命令</h3>
<ol>
<li>java -jar apktool.jar d helloworld.apk</li>
<li>./dex2jar-0.0.9.15/d2j-dex2jar.sh helloworld.apk</li>
<li>使用jd-gui反编译出的jar, 可查看源码</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="准备工作">准备工作</h2>
<ol>
<li>下载<code>apkTool</code>: <code>https://android-apktool.googlecode.com/files/apktool1.5.2.tar.bz2</code>;</li>
<li>下载<code>dex2jar</code>: <code>https://dex2jar.googlecode.com/files/dex2jar-0.0.9.15.zip</code>;</li>
<li>下载<code>jd-gui</code>: <code>http://jd.benow.ca/jd-gui/downloads/jd-gui-0.3.5.osx.i686.dmg</code>;</li>
</ol>
]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="Mac" scheme="http://arccode.net/tags/Mac/"/>
    
      <category term="反编译" scheme="http://arccode.net/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
      <category term="Android" scheme="http://arccode.net/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[初识Gradle系列一]]></title>
    <link href="http://arccode.net/2014/12/26/%E5%88%9D%E8%AF%86Gradle%E7%B3%BB%E5%88%97%E4%B8%80/"/>
    <id>http://arccode.net/2014/12/26/初识Gradle系列一/</id>
    <published>2014-12-26T15:56:41.000Z</published>
    <updated>2015-02-25T15:28:54.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>以前听说过Gradle,也查阅过相关资料,自定义生命周期等等,比Maven牛X, 但Maven在项目中已经够用, 所以一直未做构建迁移.</p>
<p>今天业余搞点Android小应用, 经过对比, 最终选择了Android Studio(1.0.3), 该软件默认使用Gradle构建, 在此记录下使用历程及碰到的问题.</p>
<a id="more"></a>

<h2 id="安装Gradle">安装Gradle</h2>
<p>笔者操作系统为Mac, 以下目录采用Mac目录</p>
<ol>
<li>下载安装包: <a href="https://services.gradle.org/distributions/gradle-2.2.1-all.zip" target="_blank" rel="external">https://services.gradle.org/distributions/gradle-2.2.1-all.zip</a></li>
<li>解压</li>
<li>制作超链接</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd <span class="regexp">/usr/</span>bin</div><div class="line">ln -s <span class="regexp">/Users/</span>arccode<span class="regexp">/ProgramFiles/g</span>radle-<span class="number">2.2</span>.<span class="number">1</span><span class="regexp">/bin/g</span>radle gradle</div></pre></td></tr></table></figure>

<ol>
<li>查看版本号: gradle -v</li>
</ol>
<h2 id="新建HelloWorld">新建HelloWorld</h2>
<p>使用Android Studio按照提示完成HelloWorld App的建立.</p>
<h2 id="Gradle使用">Gradle使用</h2>
<p>尝试使用gradle来构建App.</p>
<h2 id="问题">问题</h2>
<ul>
<li>执行命令<code>gradle clean</code>报错, </li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">FAILURE</span>: <span class="string">Build failed with an exception.</span></div><div class="line"></div><div class="line"><span class="oxygene">* <span class="keyword">Where</span>:</span></div><div class="line">Build file <span class="string">'/Users/arccode/AndroidStudioProjects/HelloWorld/build.gradle'</span> line: <span class="number">5</span></div><div class="line"></div><div class="line">* What went wrong:</div><div class="line">A problem occurred evaluating root project <span class="string">'HelloWorld'</span>.</div><div class="line">&gt; Could <span class="keyword">not</span> find <span class="function"><span class="keyword">method</span> <span class="title">jcenter</span><span class="params">()</span> <span class="title">for</span> <span class="title">arguments</span> [] <span class="title">on</span> <span class="title">repository</span> <span class="title">container</span>.</span></div><div class="line"></div><div class="line">* <span class="title">Try</span>:</div><div class="line">Run <span class="keyword">with</span> --stacktrace option <span class="keyword">to</span> get the stack trace. Run <span class="keyword">with</span> --info <span class="keyword">or</span> --debug option <span class="keyword">to</span> get more log output.</div><div class="line"></div><div class="line">BUILD FAILED</div></pre></td></tr></table></figure>

<p>老版本bug, 使用<code>gradle-2.2.1</code>无此问题.</p>
<ul>
<li>没找到<code>gradle build</code>后生成的apk包(汗, 😓),</li>
</ul>
<p>项目的根目录下有<code>build</code>目录, 但gradle构建生成的目录默认放在<code>app/build</code>, 所有生成的apk包也在<code>app/build</code>目录下.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>以前听说过Gradle,也查阅过相关资料,自定义生命周期等等,比Maven牛X, 但Maven在项目中已经够用, 所以一直未做构建迁移.</p>
<p>今天业余搞点Android小应用, 经过对比, 最终选择了Android Studio(1.0.3), 该软件默认使用Gradle构建, 在此记录下使用历程及碰到的问题.</p>
]]>
    
    </summary>
    
      <category term="Gradle" scheme="http://arccode.net/tags/Gradle/"/>
    
      <category term="Java" scheme="http://arccode.net/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Zookeeper搭建集群]]></title>
    <link href="http://arccode.net/2014/11/14/Zookeeper%E6%90%AD%E5%BB%BA%E9%9B%86%E7%BE%A4/"/>
    <id>http://arccode.net/2014/11/14/Zookeeper搭建集群/</id>
    <published>2014-11-14T13:59:59.000Z</published>
    <updated>2015-02-25T15:47:45.000Z</updated>
    <content type="html"><![CDATA[<h2 id="简介">简介</h2>
<p>ZooKeeper是一个为分布式应用所设计的分布的、开源的协调服务，它主要是用来解决分布式应用中经常遇到的一些数据管理问题，简化分布式应用协调及其管理的难度，提供高性能的分布式服务。ZooKeeper本身可以以Standalone模式安装运行，不过它的长处在于通过分布式ZooKeeper集群（一个Leader，多个Follower），基于一定的策略来保证ZooKeeper集群的稳定性和可用性，从而实现分布式应用的可靠性。</p>
<p>ZooKeeper是作为分布式协调服务，是不需要依赖于Hadoop的环境，也可以为其他的分布式环境提供服务。</p>
<a id="more"></a>

<h2 id="单节点安装">单节点安装</h2>
<h3 id="下载,解压,配置">下载,解压,配置</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 可能是受Windows影响,首次接触Mac时创建了这个目录用于存放开源框架</span></div><div class="line">cd ~/ProgramFiles</div><div class="line"><span class="preprocessor"># 个人感觉速度慢, 用迅雷下载该链接更快</span></div><div class="line">curl -O http:<span class="comment">//apache.mirrors.tds.net/zookeeper/stable/zookeeper-3.4.6.tar.gz</span></div><div class="line"><span class="preprocessor"># 解压</span></div><div class="line">tar xzvf zookeeper-<span class="number">3.4</span><span class="number">.6</span>.tar.gz</div><div class="line">mv zookeeper-<span class="number">3.4</span><span class="number">.6</span> zookeeper346</div><div class="line">cd zookeeper346/conf</div><div class="line">cp zoo_sample.cfg zoo.cfg</div><div class="line">vim zoo.cfg</div><div class="line"><span class="preprocessor"># 修改内容如下, 需手动创建定义的数据目录</span></div><div class="line">dataDir=/Users/arccode/data/zk/nodes/zk0</div></pre></td></tr></table></figure>

<h3 id="启动">启动</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># zookeeper 可执行文件目录</span></div><div class="line"><span class="built_in">cd</span> ../bin</div><div class="line">./zkServer.sh start</div></pre></td></tr></table></figure>

<p>至此单节点配置,启动完成. </p>
<h2 id="集群安装">集群安装</h2>
<h3 id="集群中节点树结构">集群中节点树结构</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">└── nodes</div><div class="line">    ├── zk0</div><div class="line">    │   └── <span class="keyword">version</span>-<span class="number">2</span></div><div class="line">    │       └── <span class="built_in">log</span>.<span class="number">1</span></div><div class="line">    ├── zk1</div><div class="line">    │   ├── data</div><div class="line">    │   │   ├── myid</div><div class="line">    │   │   └── <span class="keyword">version</span>-<span class="number">2</span></div><div class="line">    │   │       ├── acceptedEpoch</div><div class="line">    │   │       ├── currentEpoch</div><div class="line">    │   │       └── snapshot.<span class="number">0</span></div><div class="line">    │   └── logs</div><div class="line">    │       └── <span class="keyword">version</span>-<span class="number">2</span></div><div class="line">    │           └── <span class="built_in">log</span>.<span class="number">100000001</span></div><div class="line">    ├── zk2</div><div class="line">    │   ├── data</div><div class="line">    │   │   ├── myid</div><div class="line">    │   │   └── <span class="keyword">version</span>-<span class="number">2</span></div><div class="line">    │   │       ├── acceptedEpoch</div><div class="line">    │   │       └── currentEpoch</div><div class="line">    │   └── logs</div><div class="line">    │       └── <span class="keyword">version</span>-<span class="number">2</span></div><div class="line">    │           └── <span class="built_in">log</span>.<span class="number">100000001</span></div><div class="line">    └── zk3</div><div class="line">        ├── data</div><div class="line">        │   ├── myid</div><div class="line">        │   └── <span class="keyword">version</span>-<span class="number">2</span></div><div class="line">        │       ├── acceptedEpoch</div><div class="line">        │       ├── currentEpoch</div><div class="line">        │       └── snapshot.<span class="number">100000000</span></div><div class="line">        └── logs</div><div class="line">            └── <span class="keyword">version</span>-<span class="number">2</span></div><div class="line">                └── <span class="built_in">log</span>.<span class="number">100000001</span></div></pre></td></tr></table></figure>

<h3 id="配置节点一">配置节点一</h3>
<p>不解释, 直接上配置文件(/Users/arccode/ProgramFiles/zookeeper346/conf/zk1.cfg)</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">dataDir=<span class="regexp">/Users/arccode</span><span class="regexp">/data/zk</span><span class="regexp">/nodes/zk</span>1/data</div><div class="line">dataLogDir=<span class="regexp">/Users/arccode</span><span class="regexp">/data/zk</span><span class="regexp">/nodes/zk</span>1/logs</div><div class="line">clientPort=<span class="number">2181</span></div><div class="line"><span class="comment"># 集群实例</span></div><div class="line">server.<span class="number">1</span>=<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">2888</span><span class="symbol">:</span><span class="number">3888</span></div><div class="line">server.<span class="number">2</span>=<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">2889</span><span class="symbol">:</span><span class="number">3889</span></div><div class="line">server.<span class="number">3</span>=<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">2890</span><span class="symbol">:</span><span class="number">3890</span></div></pre></td></tr></table></figure>

<p>根据dataDir,dataLogDir创建相应的目录并在data目录执行如下命令</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="input"><span class="prompt">echo 1 &gt;</span> myid</span></div></pre></td></tr></table></figure>

<h3 id="配置节点二">配置节点二</h3>
<p>不解释, 直接上配置文件(/Users/arccode/ProgramFiles/zookeeper346/conf/zk2.cfg)</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">dataDir=<span class="regexp">/Users/arccode</span><span class="regexp">/data/zk</span><span class="regexp">/nodes/zk</span>2/data</div><div class="line">dataLogDir=<span class="regexp">/Users/arccode</span><span class="regexp">/data/zk</span><span class="regexp">/nodes/zk</span>2/logs</div><div class="line">clientPort=<span class="number">2182</span></div><div class="line"><span class="comment"># 集群实例</span></div><div class="line">server.<span class="number">1</span>=<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">2888</span><span class="symbol">:</span><span class="number">3888</span></div><div class="line">server.<span class="number">2</span>=<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">2889</span><span class="symbol">:</span><span class="number">3889</span></div><div class="line">server.<span class="number">3</span>=<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">2890</span><span class="symbol">:</span><span class="number">3890</span></div></pre></td></tr></table></figure>

<p>根据dataDir,dataLogDir创建相应的目录并在data目录执行如下命令</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="input"><span class="prompt">echo 2 &gt;</span> myid</span></div></pre></td></tr></table></figure>

<h3 id="配置节点三">配置节点三</h3>
<p>不解释, 直接上配置文件(/Users/arccode/ProgramFiles/zookeeper346/conf/zk3.cfg)</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">dataDir=<span class="regexp">/Users/arccode</span><span class="regexp">/data/zk</span><span class="regexp">/nodes/zk</span>3/data</div><div class="line">dataLogDir=<span class="regexp">/Users/arccode</span><span class="regexp">/data/zk</span><span class="regexp">/nodes/zk</span>3/logs</div><div class="line">clientPort=<span class="number">2183</span></div><div class="line"><span class="comment"># 集群实例</span></div><div class="line">server.<span class="number">1</span>=<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">2888</span><span class="symbol">:</span><span class="number">3888</span></div><div class="line">server.<span class="number">2</span>=<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">2889</span><span class="symbol">:</span><span class="number">3889</span></div><div class="line">server.<span class="number">3</span>=<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span><span class="symbol">:</span><span class="number">2890</span><span class="symbol">:</span><span class="number">3890</span></div></pre></td></tr></table></figure>

<p>根据dataDir,dataLogDir创建相应的目录并在data目录执行如下命令</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="input"><span class="prompt">echo 3 &gt;</span> myid</span></div></pre></td></tr></table></figure>

<h3 id="启动Zookeeper集群">启动Zookeeper集群</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># zookeeper可执行文件目录</div><div class="line"><span class="keyword">cd</span> bin</div><div class="line">./zkServer.<span class="keyword">sh</span> start zk1.cfg</div><div class="line">./zkServer.<span class="keyword">sh</span> start zk2.cfg</div><div class="line">./zkServer.<span class="keyword">sh</span> start zk3.cfg</div></pre></td></tr></table></figure>

<h3 id="查看Zookeeper集群中各个节点的状态">查看Zookeeper集群中各个节点的状态</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">./zkServer.sh status zk1.cfg</div><div class="line"></div><div class="line">JMX enabled <span class="keyword">by</span> <span class="keyword">default</span></div><div class="line"><span class="keyword">Using</span> config: /Users/arccode/ProgramFiles/zookeeper346/bin/../conf/zk1.cfg</div><div class="line">Mode: follower</div><div class="line"></div><div class="line">./zkServer.sh status zk2.cfg</div><div class="line"></div><div class="line">JMX enabled <span class="keyword">by</span> <span class="keyword">default</span></div><div class="line"><span class="keyword">Using</span> config: /Users/arccode/ProgramFiles/zookeeper346/bin/../conf/zk2.cfg</div><div class="line">Mode: leader</div><div class="line"></div><div class="line">./zkServer.sh status zk3.cfg</div><div class="line"></div><div class="line">JMX enabled <span class="keyword">by</span> <span class="keyword">default</span></div><div class="line"><span class="keyword">Using</span> config: /Users/arccode/ProgramFiles/zookeeper346/bin/../conf/zk3.cfg</div><div class="line">Mode: follower</div></pre></td></tr></table></figure>

<p>注: 可以考虑多种启动或停止zookeeper的情况进行状态查看, 可发现zookeeper的高可用(HA);</p>
<h2 id="命令行操作">命令行操作</h2>
<p>使用命令行client连接zookeeper并操作API</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 连接到任意节点</span></div><div class="line"> ./zkCli.sh -server 127.0.0.1:2182</div><div class="line"><span class="comment"># help 查看指令</span></div><div class="line">ZooKeeper -server host:port cmd args</div><div class="line">	connect host:port</div><div class="line">	get path [watch]</div><div class="line">	ls path [watch]</div><div class="line">	set path data [version]</div><div class="line">	rmr path</div><div class="line">	delquota [-n|-b] path</div><div class="line">	quit </div><div class="line">	printwatches on|off</div><div class="line">	create [-s] [-e] path data acl</div><div class="line">	stat path [watch]</div><div class="line">	close </div><div class="line">	ls2 path [watch]</div><div class="line">	history </div><div class="line">	listquota path</div><div class="line">	setAcl path acl</div><div class="line">	getAcl path</div><div class="line">	sync path</div><div class="line">	redo cmdno</div><div class="line">	addauth scheme auth</div><div class="line">	delete path [version]</div><div class="line">	setquota -n|-b val path</div><div class="line"><span class="comment"># 查看/目录节点</span></div><div class="line">ls /</div><div class="line"><span class="comment"># 创建znode节点</span></div><div class="line">create /config db.properties</div><div class="line"><span class="comment"># 查看/下节点, ls /</span></div><div class="line">[config, zookeeper]</div><div class="line"><span class="comment"># 查看节点内容, get /config</span></div><div class="line">db.properties</div><div class="line"><span class="constant">cZxid</span> = 0x300000011</div><div class="line"><span class="constant">ctime</span> = Fri Nov 14 23:05:05 CST 2014</div><div class="line"><span class="constant">mZxid</span> = 0x300000011</div><div class="line"><span class="constant">mtime</span> = Fri Nov 14 23:05:05 CST 2014</div><div class="line"><span class="constant">pZxid</span> = 0x300000011</div><div class="line"><span class="constant">cversion</span> = 0</div><div class="line"><span class="constant">dataVersion</span> = 0</div><div class="line"><span class="constant">aclVersion</span> = 0</div><div class="line"><span class="constant">ephemeralOwner</span> = 0x0</div><div class="line"><span class="constant">dataLength</span> = 13</div><div class="line"><span class="constant">numChildren</span> = 0</div><div class="line"><span class="comment"># 修改节点内容, set /config db2.properties</span></div><div class="line"><span class="comment"># 再次查看 get /config</span></div><div class="line">db2.properties</div><div class="line"><span class="constant">cZxid</span> = 0x300000011</div><div class="line"><span class="constant">ctime</span> = Fri Nov 14 23:05:05 CST 2014</div><div class="line"><span class="constant">mZxid</span> = 0x300000012</div><div class="line"><span class="constant">mtime</span> = Fri Nov 14 23:08:10 CST 2014</div><div class="line"><span class="constant">pZxid</span> = 0x300000011</div><div class="line"><span class="constant">cversion</span> = 0</div><div class="line"><span class="constant">dataVersion</span> = 1</div><div class="line"><span class="constant">aclVersion</span> = 0</div><div class="line"><span class="constant">ephemeralOwner</span> = 0x0</div><div class="line"><span class="constant">dataLength</span> = 14</div><div class="line"><span class="constant">numChildren</span> = 0</div><div class="line"><span class="comment"># 删除节点, delete /config</span></div><div class="line"><span class="comment"># 查看, ls /</span></div><div class="line"><span class="comment"># 退出, quit</span></div></pre></td></tr></table></figure>

<h2 id="Java操作">Java操作</h2>
<h3 id="源码">源码</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.ts.zookeeper;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.zookeeper.CreateMode;</div><div class="line"><span class="keyword">import</span> org.apache.zookeeper.KeeperException;</div><div class="line"><span class="keyword">import</span> org.apache.zookeeper.WatchedEvent;</div><div class="line"><span class="keyword">import</span> org.apache.zookeeper.Watcher;</div><div class="line"><span class="keyword">import</span> org.apache.zookeeper.ZooDefs.Ids;</div><div class="line"><span class="keyword">import</span> org.apache.zookeeper.ZooKeeper;</div><div class="line"></div><div class="line"><span class="javadoc">/**</span></div><div class="line"> * Java 操作zookeeper API</div><div class="line"> *</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span></div><div class="line">{</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>( String[] args ) <span class="keyword">throws</span> IOException, InterruptedException, KeeperException</div><div class="line">    {</div><div class="line">    	<span class="comment">// 创建连接</span></div><div class="line">    	ZooKeeper zk = <span class="keyword">new</span> ZooKeeper(<span class="string">"127.0.0.1:2182"</span>, <span class="number">30000</span>, <span class="keyword">new</span> Watcher(){</div><div class="line">    		<span class="comment">// 监听的事件发生变化时, 调用该函数</span></div><div class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span>(WatchedEvent event) {</div><div class="line">				System.out.println(<span class="string">"Event emit -&gt; "</span> + event.getType());</div><div class="line">			}</div><div class="line">    	});</div><div class="line">    	</div><div class="line">    	<span class="comment">// 查看根目录, ls /</span></div><div class="line">    	System.out.println(<span class="string">"[line: 29]command: ls / -&gt; "</span> + zk.getChildren(<span class="string">"/"</span>, <span class="keyword">true</span>));</div><div class="line">    	</div><div class="line">    	<span class="comment">// 创建数据节点config</span></div><div class="line">    	<span class="keyword">if</span>(zk.exists(<span class="string">"/config"</span>, <span class="keyword">true</span>) == <span class="keyword">null</span>) {</div><div class="line">    		zk.create(<span class="string">"/config"</span>, <span class="string">"db.properties"</span>.getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);</div><div class="line">    		</div><div class="line">    		System.out.println(<span class="string">"创建数据节点config成功."</span>);</div><div class="line">    		</div><div class="line">    		<span class="comment">// 查看数据节点数据</span></div><div class="line">    		System.out.println(<span class="string">"[line: 38]command get /config: "</span> + <span class="keyword">new</span> String(zk.getData(<span class="string">"/config"</span>, <span class="keyword">true</span>, <span class="keyword">null</span>)));</div><div class="line">    		</div><div class="line">    		<span class="comment">// 查看根目录, ls /</span></div><div class="line">    		System.out.println(<span class="string">"[line: 41]command: ls / -&gt; "</span> + zk.getChildren(<span class="string">"/"</span>, <span class="keyword">true</span>));</div><div class="line">    	}</div><div class="line">    	</div><div class="line">    	<span class="comment">// 修改数据节点</span></div><div class="line">    	<span class="keyword">if</span>(zk.exists(<span class="string">"/config"</span>, <span class="keyword">true</span>) != <span class="keyword">null</span>) {</div><div class="line">    		zk.setData(<span class="string">"/config"</span>, <span class="string">"db2.properteis"</span>.getBytes(), -<span class="number">1</span>);</div><div class="line">    		<span class="comment">// 查看数据节点数据</span></div><div class="line">    		System.out.println(<span class="string">"[line: 48]command get /config: "</span> + <span class="keyword">new</span> String(zk.getData(<span class="string">"/config"</span>, <span class="keyword">true</span>, <span class="keyword">null</span>)));</div><div class="line">    		<span class="comment">// 查看根目录, ls /</span></div><div class="line">    		System.out.println(<span class="string">"[line: 50]command: ls / -&gt; "</span> + zk.getChildren(<span class="string">"/"</span>, <span class="keyword">true</span>));</div><div class="line">    	}</div><div class="line">    	</div><div class="line">    	<span class="comment">// 删除数据节点</span></div><div class="line">    	<span class="keyword">if</span>(zk.exists(<span class="string">"/config"</span>, <span class="keyword">true</span>) != <span class="keyword">null</span>) {</div><div class="line">    		zk.delete(<span class="string">"/config"</span>, -<span class="number">1</span>);</div><div class="line">    		<span class="comment">// 查看根目录, ls /</span></div><div class="line">    		System.out.println(<span class="string">"[line: 57]command: ls / -&gt; "</span> + zk.getChildren(<span class="string">"/"</span>, <span class="keyword">true</span>));</div><div class="line">    	}</div><div class="line">    	</div><div class="line">    	<span class="comment">// 关闭连接</span></div><div class="line">    	zk.close();</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="结果">结果</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="input"><span class="prompt">Event emit -&gt;</span> <span class="constant">None</span></span></div><div class="line"><span class="input"><span class="prompt">[line: 29]command: ls / -&gt;</span> [zookeeper]</span></div><div class="line"><span class="input"><span class="prompt">Event emit -&gt;</span> <span class="constant">NodeCreated</span></span></div><div class="line"><span class="input"><span class="prompt">Event emit -&gt;</span> <span class="constant">NodeChildrenChanged</span></span></div><div class="line"><span class="input"><span class="prompt">创建数据节点config成功.</span></span></div><div class="line">[line: 38]command get /config: db.properties</div><div class="line">[line: 41]command: ls / -&gt; [config, zookeeper]</div><div class="line"><span class="input"><span class="prompt">Event emit -&gt;</span> <span class="constant">NodeDataChanged</span></span></div><div class="line"><span class="input"><span class="prompt">[line: 48]command get /config: db2.properteis</span></span></div><div class="line">[line: 50]command: ls / -&gt; [config, zookeeper]</div><div class="line"><span class="input"><span class="prompt">Event emit -&gt;</span> <span class="constant">NodeDeleted</span></span></div><div class="line"><span class="input"><span class="prompt">Event emit -&gt;</span> <span class="constant">NodeChildrenChanged</span></span></div><div class="line"><span class="input"><span class="prompt">[line: 57]command: ls / -&gt;</span> [zookeeper]</span></div></pre></td></tr></table></figure>

<h2 id="参考资料">参考资料</h2>
<p><a href="http://blog.fens.me/hadoop-zookeeper-intro/" target="_blank" rel="external">ZooKeeper伪分布式集群安装及使用</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="简介">简介</h2>
<p>ZooKeeper是一个为分布式应用所设计的分布的、开源的协调服务，它主要是用来解决分布式应用中经常遇到的一些数据管理问题，简化分布式应用协调及其管理的难度，提供高性能的分布式服务。ZooKeeper本身可以以Standalone模式安装运行，不过它的长处在于通过分布式ZooKeeper集群（一个Leader，多个Follower），基于一定的策略来保证ZooKeeper集群的稳定性和可用性，从而实现分布式应用的可靠性。</p>
<p>ZooKeeper是作为分布式协调服务，是不需要依赖于Hadoop的环境，也可以为其他的分布式环境提供服务。</p>
]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="Zookeeper" scheme="http://arccode.net/tags/Zookeeper/"/>
    
      <category term="中间件" scheme="http://arccode.net/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mongoose入门]]></title>
    <link href="http://arccode.net/2014/11/07/mongoose%E5%85%A5%E9%97%A8/"/>
    <id>http://arccode.net/2014/11/07/mongoose入门/</id>
    <published>2014-11-07T03:53:14.000Z</published>
    <updated>2015-02-25T15:36:32.000Z</updated>
    <content type="html"><![CDATA[<h2 id="简介">简介</h2>
<p>Mongoose是一个针对MongoDB的ODM框架(技术名词, 类似ORM的思想).</p>
<h2 id="名称解释">名称解释</h2>
<p>Schema:    &nbsp;&nbsp; 一种以文件形式存储的数据库模型骨架(定义数据结构及相关算法)，不具备数据库的操作能力</p>
<p>Model:&nbsp;&nbsp; 由Schema发布生成的模型，可对集合(collectin)进行操作</p>
<p>Entity: &nbsp;&nbsp; 由Model创建的实体，他的操作也会影响数据库</p>
<a id="more"></a>

<h2 id="Collection复数转换">Collection复数转换</h2>
<p>指定的Collection名是<code>Person</code>, 经过查询实际存储的Collection名是<code>People</code>, Why??</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 创建Schema</span></div><div class="line"><span class="keyword">var</span> PersonSchema = mongoose.Schema({</div><div class="line">	name: <span class="built_in">String</span></div><div class="line">});</div><div class="line"></div><div class="line"><span class="comment">// 创建Model</span></div><div class="line"><span class="keyword">var</span> PersonModel = db.model(<span class="string">'Person'</span>, PersonSchema);</div><div class="line"></div><div class="line"><span class="comment">// 创建Entity</span></div><div class="line"><span class="keyword">var</span> personEntity = <span class="keyword">new</span> PersonModel({name: <span class="string">'zhangsan'</span>});</div><div class="line"></div><div class="line"><span class="comment">// 保存Entity</span></div><div class="line">personEntity.save();</div></pre></td></tr></table></figure>

<p>注: 请将上面代码中的<code>Person</code>改为<code>Anything</code>, 对于初次接触MongoDB且没看<code>参考资料2</code>的工程师更容易理解, 因为MongoDB复数化<code>Person</code>时会将其变成<code>people</code>.</p>
<p>查看mongoose文档, 发现可以设置Collection的名称,如下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 创建Schema</span></div><div class="line"><span class="keyword">var</span> PersonSchema = mongoose.Schema({</div><div class="line">	name: <span class="built_in">String</span></div><div class="line">}, {collection: <span class="string">'persons'</span>});</div></pre></td></tr></table></figure>

<p>看了<code>参考资料2</code>你将恍然大悟, 并且学会如何将获得的单词变为复数.</p>
<h3 id="MongoDB存储数据流程">MongoDB存储数据流程</h3>
<ol>
<li>将Model的名称进行复数变幻(eg: Anything —&gt; Anythings)</li>
<li>将复数化的名称转换为小写anythings</li>
<li>查找MongoDB中是否有名为anythings的Collection, 有的话将该数据插入, 无的话新建Collection再进行插入</li>
</ol>
<h2 id="参考资料">参考资料</h2>
<ol>
<li><p><a href="https://cnodejs.org/topic/504b4924e2b84515770103dd" target="_blank" rel="external">Mongoose学习参考文档</a></p>
</li>
<li><p><a href="http://aiilive.blog.51cto.com/1925756/1405203" target="_blank" rel="external">Mongoose在创建Model时对Collection的命名策略</a></p>
</li>
<li><a href="http://mongoosejs.com/docs" target="_blank" rel="external">Mongoose官方文档</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="简介">简介</h2>
<p>Mongoose是一个针对MongoDB的ODM框架(技术名词, 类似ORM的思想).</p>
<h2 id="名称解释">名称解释</h2>
<p>Schema:    &nbsp;&nbsp; 一种以文件形式存储的数据库模型骨架(定义数据结构及相关算法)，不具备数据库的操作能力</p>
<p>Model:&nbsp;&nbsp; 由Schema发布生成的模型，可对集合(collectin)进行操作</p>
<p>Entity: &nbsp;&nbsp; 由Model创建的实体，他的操作也会影响数据库</p>
]]>
    
    </summary>
    
      <category term="MongoDB" scheme="http://arccode.net/tags/MongoDB/"/>
    
      <category term="NoSQL(缓存)" scheme="http://arccode.net/categories/NoSQL-%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[node日志记录]]></title>
    <link href="http://arccode.net/2014/11/07/node%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95/"/>
    <id>http://arccode.net/2014/11/07/node日志记录/</id>
    <published>2014-11-07T02:59:01.000Z</published>
    <updated>2015-02-25T15:36:55.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Java与Nodejs中控制台输出及日志记录对比">Java与Nodejs中控制台输出及日志记录对比</h2>
<p>该博客框架解析Markdown的table不是太好, 以下采用列举方式进行对比</p>
<h3 id="Java">Java</h3>
<ul>
<li>控制台: <code>System.out.println(&#39;hello&#39;);</code></li>
<li>日志记录(自带): <code>java.util.logging.Logger</code></li>
<li>日志记录(第三方): <code>slf4j(定义接口), log4j(实现类)</code></li>
</ul>
<h3 id="Nodejs">Nodejs</h3>
<ul>
<li>控制台: <code>console.log(&#39;hello&#39;);</code></li>
<li>日志记录(自带): <code>util.log</code></li>
<li>日志记录(第三方): <code>log4js</code></li>
</ul>
<p>笔者经过测试, 选择第三方的日志库. Java Log4j配置详见我的另一篇博客<a href="http://arccode.net/2014/10/30/Log4j%E9%85%8D%E7%BD%AE/" target="_blank" rel="external">Log4j配置</a>.</p>
<a id="more"></a>

<h2 id="NodeJS配置Log4JS日志">NodeJS配置Log4JS日志</h2>
<p>在开发代码中加入如下代码 其中’…..’表示笔者自己的业务代码</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="code">.....</span></div><div class="line">.....</div><div class="line">// #引用log4js模块</div><div class="line">var log4js = require('log4js')</div><div class="line"></div><div class="line">.....</div><div class="line"><span class="code">.....</span></div><div class="line">// #加载log4js配置</div><div class="line">log4js.configure(__dirname + '/log4j.json', {})</div><div class="line">;// #获取指定分类的日志</div><div class="line">var loggerConsole = log4js.getLogger('console');</div><div class="line">var loggerInfo = log4js.getLogger('fileInfo')</div><div class="line"></div><div class="line">.....;</div><div class="line">loggerConsole.debug('db open normal.' + message)</div><div class="line">;</div><div class="line">loggerInfo.info('db open normal.' + message)</div><div class="line">.....</div><div class="line">;</div></pre></td></tr></table></figure>

<p>log4js.json配置</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">appenders</span>": <span class="value">[</span></div><div class="line">    {</div><div class="line">    "<span class="attribute">type</span>": <span class="value"><span class="string">"console"</span></span>,</div><div class="line">    "<span class="attribute">category</span>": <span class="value"><span class="string">"console"</span></span></div><div class="line">    },</div><div class="line">    {</div><div class="line">      "<span class="attribute">type</span>": <span class="value"><span class="string">"file"</span></span>,</div><div class="line">      "<span class="attribute">absolute</span>": <span class="value"><span class="literal">true</span></span>,</div><div class="line">      "<span class="attribute">filename</span>": <span class="value"><span class="string">"/data/webstorm/imageHandler/log.log"</span></span>,</div><div class="line">      "<span class="attribute">category</span>": <span class="value"><span class="string">"fileInfo"</span></span></div><div class="line">    }</div><div class="line">  ],</div><div class="line">  "<span class="attribute">levels</span>": <span class="value">{</span></div><div class="line">    "<span class="attribute">console</span>": <span class="value"><span class="string">"debug"</span></span>,</div><div class="line">    "<span class="attribute">fileInfo</span>": <span class="value"><span class="string">"info"</span></span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>更详细的配置信息详见<a href="https://github.com/nomiddlename/log4js-node" target="_blank" rel="external">Log4JS文档</a></p>
<h2 id="参考资料">参考资料</h2>
<p><a href="https://github.com/nomiddlename/log4js-node" target="_blank" rel="external">Log4JS文档</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Java与Nodejs中控制台输出及日志记录对比">Java与Nodejs中控制台输出及日志记录对比</h2>
<p>该博客框架解析Markdown的table不是太好, 以下采用列举方式进行对比</p>
<h3 id="Java">Java</h3>
<ul>
<li>控制台: <code>System.out.println(&#39;hello&#39;);</code></li>
<li>日志记录(自带): <code>java.util.logging.Logger</code></li>
<li>日志记录(第三方): <code>slf4j(定义接口), log4j(实现类)</code></li>
</ul>
<h3 id="Nodejs">Nodejs</h3>
<ul>
<li>控制台: <code>console.log(&#39;hello&#39;);</code></li>
<li>日志记录(自带): <code>util.log</code></li>
<li>日志记录(第三方): <code>log4js</code></li>
</ul>
<p>笔者经过测试, 选择第三方的日志库. Java Log4j配置详见我的另一篇博客<a href="http://arccode.net/2014/10/30/Log4j%E9%85%8D%E7%BD%AE/" target="_blank" rel="external">Log4j配置</a>.</p>
]]>
    
    </summary>
    
      <category term="NodeJS" scheme="http://arccode.net/tags/NodeJS/"/>
    
      <category term="Log" scheme="http://arccode.net/tags/Log/"/>
    
      <category term="Log4j" scheme="http://arccode.net/tags/Log4j/"/>
    
      <category term="Javascript" scheme="http://arccode.net/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Properties配置分离]]></title>
    <link href="http://arccode.net/2014/10/30/Properties%E9%85%8D%E7%BD%AE%E5%88%86%E7%A6%BB/"/>
    <id>http://arccode.net/2014/10/30/Properties配置分离/</id>
    <published>2014-10-30T03:02:34.000Z</published>
    <updated>2015-02-25T15:47:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>目前公司从开发到发布一个版本的流程是本地开发环境(自测)-&gt;测试环境(测试人员)-&gt;灰度发布环境(测试人员+开发人员)-&gt;上线, 不同的环境配置的属性不同(例如: 数据库连接url, 用户名, 密码), 以下为我经历的阶段.</p>
<h3 id="阶段一:_将所有环境的配置信息写在一个文件中,_如db-properties">阶段一: 将所有环境的配置信息写在一个文件中, 如db.properties</h3>
<a id="more"></a>

<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">##-------------开发-------------------------</span></div><div class="line"><span class="preprocessor">##=============主库========================</span></div><div class="line">jdbc.writer.driverClassName=com.mysql.jdbc.Driver</div><div class="line">jdbc.writer.url=jdbc:mysql:<span class="comment">//192.168.1.10:3306/database?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></div><div class="line">jdbc.writer.username=dev</div><div class="line">jdbc.writer.password=dev</div><div class="line"></div><div class="line"><span class="preprocessor">##-------------测试-------------------------</span></div><div class="line"><span class="preprocessor">##=============主库========================</span></div><div class="line"><span class="preprocessor">#jdbc.writer.driverClassName=com.mysql.jdbc.Driver</span></div><div class="line"><span class="preprocessor">#jdbc.writer.url=jdbc:mysql://192.168.0.10:3306/database?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></div><div class="line"><span class="preprocessor">#jdbc.writer.username=test</span></div><div class="line"><span class="preprocessor">#jdbc.writer.password=test</span></div><div class="line"></div><div class="line"><span class="preprocessor">##-------------灰度发布-------------------------</span></div><div class="line"><span class="preprocessor">##=============主库========================</span></div><div class="line"><span class="preprocessor">#jdbc.writer.driverClassName=com.mysql.jdbc.Driver</span></div><div class="line"><span class="preprocessor">#jdbc.writer.url=jdbc:mysql://192.168.10.10:3306/database?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></div><div class="line"><span class="preprocessor">#jdbc.writer.username=prePub</span></div><div class="line"><span class="preprocessor">#jdbc.writer.password=prePub</span></div><div class="line"></div><div class="line"><span class="preprocessor">##-------------生产-------------------------</span></div><div class="line"><span class="preprocessor">##=============主库========================</span></div><div class="line"><span class="preprocessor">#jdbc.writer.driverClassName=com.mysql.jdbc.Driver</span></div><div class="line"><span class="preprocessor">#jdbc.writer.url=jdbc:mysql://192.168.100.10:3306/database?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></div><div class="line"><span class="preprocessor">#jdbc.writer.username=pub</span></div><div class="line"><span class="preprocessor">#jdbc.writer.password=pub</span></div></pre></td></tr></table></figure>

<p>以上配置在打包时根据不同的环境手动注释和反注释相关代码.</p>
<h3 id="阶段二:_将以上配置拆分成四个配置文件">阶段二: 将以上配置拆分成四个配置文件</h3>
<p>配置文件为db-dev.properties, db-test.properties, db-prepub.properties, db-pub.properties, 利用maven进行配置, 在打包的时候指定要打的包或把所有包打出来</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">profiles</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="title">profile</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;<span class="title">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="title">id</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;<span class="title">properties</span>&gt;</span></div><div class="line"></div><div class="line">			<span class="tag">&lt;<span class="title">package.environment</span>&gt;</span>dev<span class="tag">&lt;/<span class="title">package.environment</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;/<span class="title">properties</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;/<span class="title">profile</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="title">profile</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;<span class="title">id</span>&gt;</span>test<span class="tag">&lt;/<span class="title">id</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;<span class="title">properties</span>&gt;</span></div><div class="line"></div><div class="line">			<span class="tag">&lt;<span class="title">package.environment</span>&gt;</span>test<span class="tag">&lt;/<span class="title">package.environment</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;/<span class="title">properties</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;/<span class="title">profile</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="title">profile</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;<span class="title">id</span>&gt;</span>prePub<span class="tag">&lt;/<span class="title">id</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;<span class="title">properties</span>&gt;</span></div><div class="line"></div><div class="line">			<span class="tag">&lt;<span class="title">package.environment</span>&gt;</span>prePub<span class="tag">&lt;/<span class="title">package.environment</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;/<span class="title">properties</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;/<span class="title">profile</span>&gt;</span></div><div class="line">		</div><div class="line">	<span class="tag">&lt;<span class="title">profile</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;<span class="title">id</span>&gt;</span>pub<span class="tag">&lt;/<span class="title">id</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;<span class="title">properties</span>&gt;</span></div><div class="line"></div><div class="line">			<span class="tag">&lt;<span class="title">package.environment</span>&gt;</span>pub<span class="tag">&lt;/<span class="title">package.environment</span>&gt;</span></div><div class="line"></div><div class="line">		<span class="tag">&lt;/<span class="title">properties</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;/<span class="title">profile</span>&gt;</span>	</div><div class="line"><span class="tag">&lt;/<span class="title">profiles</span>&gt;</span></div></pre></td></tr></table></figure>

<p>打包与配置的繁琐事情解决了, 在需要打包的时候指定参数就可以打出自己所需环境的包, 但经过一段时间的开发, 新的问题出现了, 当需要在配置文件中添加或修改属性时, 得同时修改三个文件, 其次线上环境那些敏感的数据被暴露给开发人员了. 经过思考, 打算采用配置服务器对配置进行管理.</p>
<h3 id="方案三:_配置分离">方案三: 配置分离</h3>
<p>在各个环境中准备好配套的配置(例如: /data/configs/proj_name/db.properties)</p>
<p>在spring中配置读取文件properties的位置, 如下:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;bean <span class="property">id</span>=<span class="string">"commonProperties"</span> <span class="type">class</span>=<span class="string">"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"</span>&gt;</div><div class="line">	&lt;<span class="keyword">property</span> <span class="property">name</span>=<span class="string">"ignoreResourceNotFound"</span> value=<span class="string">"true"</span>&gt;&lt;/<span class="keyword">property</span>&gt;</div><div class="line">	&lt;<span class="keyword">property</span> <span class="property">name</span>=<span class="string">"ignoreUnresolvablePlaceholders"</span> value=<span class="string">"true"</span>&gt;&lt;/<span class="keyword">property</span>&gt;</div><div class="line">	&lt;<span class="keyword">property</span> <span class="property">name</span>=<span class="string">"locations"</span>&gt;</div><div class="line">		&lt;<span class="type">list</span>&gt;</div><div class="line">			&lt;value&gt;<span class="type">file</span>:/data/configs/myProj/spring-redis.properties&lt;/value&gt;</div><div class="line">			&lt;value&gt;<span class="type">file</span>:/data/configs/myProj/db.properties&lt;/value&gt;</div><div class="line">		&lt;/<span class="type">list</span>&gt;</div><div class="line">	&lt;/<span class="keyword">property</span>&gt;</div><div class="line">&lt;/bean&gt;</div></pre></td></tr></table></figure>

<p>该方案解决了敏感数据暴露给开发人员的问题, 但维护配置还是繁琐;接下来计划开发一个配置服务器,对各个项目提供配置信息.</p>
<h3 id="方案四:_配置分离之配置服务器">方案四: 配置分离之配置服务器</h3>
<p>待续.</p>
<h2 id="优缺点">优缺点</h2>
<h3 id="方案一">方案一</h3>
<ul>
<li>优点: 只需要维护一个文件</li>
<li>缺点: 打包时需要注释及反注释配置, 繁琐; 配置中敏感数据暴露给开发人员;</li>
</ul>
<h3 id="方案二">方案二</h3>
<ul>
<li>优点: 一条指令可以打出不同环境的包;</li>
<li>缺点: 需要维护三个配置文件; 配置中敏感数据暴露给开发人员;</li>
</ul>
<h3 id="方案三">方案三</h3>
<ul>
<li>优点: 配置中敏感数据不再暴露给开发人员;</li>
<li>缺点: 需要在不同的机器上维护配置文件;</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>目前公司从开发到发布一个版本的流程是本地开发环境(自测)-&gt;测试环境(测试人员)-&gt;灰度发布环境(测试人员+开发人员)-&gt;上线, 不同的环境配置的属性不同(例如: 数据库连接url, 用户名, 密码), 以下为我经历的阶段.</p>
<h3 id="阶段一:_将所有环境的配置信息写在一个文件中,_如db-properties">阶段一: 将所有环境的配置信息写在一个文件中, 如db.properties</h3>
]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="Properties" scheme="http://arccode.net/tags/Properties/"/>
    
      <category term="Java" scheme="http://arccode.net/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Log4j配置]]></title>
    <link href="http://arccode.net/2014/10/30/Log4j%E9%85%8D%E7%BD%AE/"/>
    <id>http://arccode.net/2014/10/30/Log4j配置/</id>
    <published>2014-10-30T02:37:35.000Z</published>
    <updated>2015-02-25T15:46:48.000Z</updated>
    <content type="html"><![CDATA[<h2 id="在Java_Web项目中配置Log4j">在Java Web项目中配置Log4j</h2>
<h3 id="示例文件">示例文件</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></div><div class="line"><span class="doctype">&lt;!DOCTYPE log4j:configuration SYSTEM "log4j.dtd" &gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">log4j:configuration</span> <span class="attribute">xmlns:log4j</span>=<span class="value">"http://jakarta.apache.org/log4j/"</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- Appenders --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">appender</span> <span class="attribute">name</span>=<span class="value">"console"</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.ConsoleAppender"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"Target"</span> <span class="attribute">value</span>=<span class="value">"System.out"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">layout</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.PatternLayout"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"ConversionPattern"</span> <span class="attribute">value</span>=<span class="value">"[%p] %d{yyyy-MM-dd HH:mm:ss:SSS} [%l] %m%n"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">layout</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">appender</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="title">appender</span> <span class="attribute">name</span>=<span class="value">"FILE-INFO"</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.DailyRollingFileAppender"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"File"</span> <span class="attribute">value</span>=<span class="value">"/home/ad/logs/ad-quartz-info-db.log"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"Append"</span> <span class="attribute">value</span>=<span class="value">"true"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"ImmediateFlush"</span> <span class="attribute">value</span>=<span class="value">"true"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"DatePattern"</span> <span class="attribute">value</span>=<span class="value">".yyyy-MM-dd"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"BufferSize"</span> <span class="attribute">value</span>=<span class="value">"500"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">layout</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.PatternLayout"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"ConversionPattern"</span> <span class="attribute">value</span>=<span class="value">"[%p] %d{yyyy-MM-dd HH:mm:ss:SSS} [%l] %m%n"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">layout</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.varia.LevelRangeFilter"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"LevelMin"</span> <span class="attribute">value</span>=<span class="value">"DEBUG"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"LevelMax"</span> <span class="attribute">value</span>=<span class="value">"INFO"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"acceptOnMatch"</span> <span class="attribute">value</span>=<span class="value">"false"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">filter</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">appender</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="title">appender</span> <span class="attribute">name</span>=<span class="value">"FILE-WARN"</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.DailyRollingFileAppender"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"File"</span> <span class="attribute">value</span>=<span class="value">"/home/ad/logs/ad-quartz-warn-db.log"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"Append"</span> <span class="attribute">value</span>=<span class="value">"true"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"ImmediateFlush"</span> <span class="attribute">value</span>=<span class="value">"true"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"DatePattern"</span> <span class="attribute">value</span>=<span class="value">".yyyy-MM-dd"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"BufferSize"</span> <span class="attribute">value</span>=<span class="value">"500"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">layout</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.PatternLayout"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"ConversionPattern"</span> <span class="attribute">value</span>=<span class="value">"[%p] %d{yyyy-MM-dd HH:mm:ss:SSS} [%l] %m%n"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">layout</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.varia.LevelRangeFilter"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"LevelMin"</span> <span class="attribute">value</span>=<span class="value">"WARN"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"LevelMax"</span> <span class="attribute">value</span>=<span class="value">"FATAL"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"acceptOnMatch"</span> <span class="attribute">value</span>=<span class="value">"false"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">filter</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">appender</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- Root Logger --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">root</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">priority</span> <span class="attribute">value</span>=<span class="value">"debug"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">appender-ref</span> <span class="attribute">ref</span>=<span class="value">"console"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">appender-ref</span> <span class="attribute">ref</span>=<span class="value">"FILE-INFO"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">appender-ref</span> <span class="attribute">ref</span>=<span class="value">"FILE-WARN"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">root</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="title">log4j:configuration</span>&gt;</span></div></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="输出方式">输出方式</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">org.apache.log4j.RollingFileAppender(滚动文件，自动记录最新日志)</div><div class="line">org.apache.log4j.ConsoleAppender (控制台)  </div><div class="line">org.apache.log4j.FileAppender (文件)</div><div class="line">org.apache.log4j.DailyRollingFileAppender (每天产生一个日志org.apache.log4j.WriterAppender (将日志信息以流格式发送到任意指定的地方)</div></pre></td></tr></table></figure>

<h3 id="日志优先级">日志优先级</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">OFF</span> ,FATAL ,<span class="keyword">ERROR</span> ,WARN ,INFO ,DEBUG</div><div class="line">Log4j建议只使用FATAL ,<span class="keyword">ERROR</span> ,WARN ,INFO ,DEBUG这五个级别。</div></pre></td></tr></table></figure>

<h3 id="参数配置">参数配置</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># 格式说明layout中的参数都以%开始，后面不同的参数代表不同的格式化信息（参数按字母表顺序列出）：</div><div class="line"><span class="tag">%<span class="title">p</span></span> 输出优先级，即 FATAL ,ERROR 等</div><div class="line"><span class="tag">%<span class="title">d</span></span> 输出日志时间其格式为 %d{yyyy-MM-dd HH:mm:ss,SSS}，可指定格式 如 %d{HH:mm:ss}</div><div class="line"><span class="tag">%<span class="title">l</span></span> 输出日志事件发生位置，包括类目名、发生线程，在代码中的行数</div><div class="line"><span class="tag">%<span class="title">n</span></span> 换行符</div><div class="line"><span class="tag">%<span class="title">m</span></span> 输出代码指定信息，如info(“message”),输出message</div><div class="line"><span class="tag">%<span class="title">c</span></span> 输出所属类的全名，可在修改为 %c{Num} ,Num类名输出的维(如："org.apache.elathen.ClassName",%c{2}将输出elathen.ClassName)</div><div class="line"><span class="tag">%<span class="title">r</span></span> 输出从启动到显示该log信息所耗费的毫秒数</div><div class="line"><span class="tag">%<span class="title">t</span></span> 输出产生该日志事件的线程名</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h2 id="在Java_Web项目中配置Log4j">在Java Web项目中配置Log4j</h2>
<h3 id="示例文件">示例文件</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></div><div class="line"><span class="doctype">&lt;!DOCTYPE log4j:configuration SYSTEM "log4j.dtd" &gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">log4j:configuration</span> <span class="attribute">xmlns:log4j</span>=<span class="value">"http://jakarta.apache.org/log4j/"</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- Appenders --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">appender</span> <span class="attribute">name</span>=<span class="value">"console"</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.ConsoleAppender"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"Target"</span> <span class="attribute">value</span>=<span class="value">"System.out"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">layout</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.PatternLayout"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"ConversionPattern"</span> <span class="attribute">value</span>=<span class="value">"[%p] %d{yyyy-MM-dd HH:mm:ss:SSS} [%l] %m%n"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">layout</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">appender</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="title">appender</span> <span class="attribute">name</span>=<span class="value">"FILE-INFO"</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.DailyRollingFileAppender"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"File"</span> <span class="attribute">value</span>=<span class="value">"/home/ad/logs/ad-quartz-info-db.log"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"Append"</span> <span class="attribute">value</span>=<span class="value">"true"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"ImmediateFlush"</span> <span class="attribute">value</span>=<span class="value">"true"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"DatePattern"</span> <span class="attribute">value</span>=<span class="value">".yyyy-MM-dd"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"BufferSize"</span> <span class="attribute">value</span>=<span class="value">"500"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">layout</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.PatternLayout"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"ConversionPattern"</span> <span class="attribute">value</span>=<span class="value">"[%p] %d{yyyy-MM-dd HH:mm:ss:SSS} [%l] %m%n"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">layout</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.varia.LevelRangeFilter"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"LevelMin"</span> <span class="attribute">value</span>=<span class="value">"DEBUG"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"LevelMax"</span> <span class="attribute">value</span>=<span class="value">"INFO"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"acceptOnMatch"</span> <span class="attribute">value</span>=<span class="value">"false"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">filter</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">appender</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="title">appender</span> <span class="attribute">name</span>=<span class="value">"FILE-WARN"</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.DailyRollingFileAppender"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"File"</span> <span class="attribute">value</span>=<span class="value">"/home/ad/logs/ad-quartz-warn-db.log"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"Append"</span> <span class="attribute">value</span>=<span class="value">"true"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"ImmediateFlush"</span> <span class="attribute">value</span>=<span class="value">"true"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"DatePattern"</span> <span class="attribute">value</span>=<span class="value">".yyyy-MM-dd"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"BufferSize"</span> <span class="attribute">value</span>=<span class="value">"500"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">layout</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.PatternLayout"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"ConversionPattern"</span> <span class="attribute">value</span>=<span class="value">"[%p] %d{yyyy-MM-dd HH:mm:ss:SSS} [%l] %m%n"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">layout</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"org.apache.log4j.varia.LevelRangeFilter"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"LevelMin"</span> <span class="attribute">value</span>=<span class="value">"WARN"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"LevelMax"</span> <span class="attribute">value</span>=<span class="value">"FATAL"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"acceptOnMatch"</span> <span class="attribute">value</span>=<span class="value">"false"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">filter</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">appender</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- Root Logger --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">root</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">priority</span> <span class="attribute">value</span>=<span class="value">"debug"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">appender-ref</span> <span class="attribute">ref</span>=<span class="value">"console"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">appender-ref</span> <span class="attribute">ref</span>=<span class="value">"FILE-INFO"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">appender-ref</span> <span class="attribute">ref</span>=<span class="value">"FILE-WARN"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">root</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="title">log4j:configuration</span>&gt;</span></div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="Log" scheme="http://arccode.net/tags/Log/"/>
    
      <category term="Log4j" scheme="http://arccode.net/tags/Log4j/"/>
    
      <category term="Java" scheme="http://arccode.net/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac下安装SVN服务器]]></title>
    <link href="http://arccode.net/2014/10/23/Mac%E4%B8%8B%E5%AE%89%E8%A3%85SVN%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://arccode.net/2014/10/23/Mac下安装SVN服务器/</id>
    <published>2014-10-23T09:40:32.000Z</published>
    <updated>2015-02-25T15:35:10.000Z</updated>
    <content type="html"><![CDATA[<h2 id="安装svnserver">安装svnserver</h2>
<p>Mac自带svnserver, 输入svnserve —version</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">svnserve, <span class="built_in">version</span> <span class="number">1.7</span><span class="number">.10</span> (r1485443)</div><div class="line">   compiled Jan <span class="number">15</span> <span class="number">2014</span>, <span class="number">11</span>:<span class="number">22</span>:<span class="number">16</span></div><div class="line"></div><div class="line">Copyright (C) <span class="number">2013</span> The Apache Software Foundation.</div><div class="line">This software consists <span class="operator">of</span> contributions made <span class="keyword">by</span> many people; see <span class="operator">the</span> NOTICE</div><div class="line"><span class="built_in">file</span> <span class="keyword">for</span> more information.</div><div class="line">Subversion is <span class="built_in">open</span> source software, see <span class="keyword">http</span>://subversion.apache.org/</div><div class="line"></div><div class="line">The following repository back-<span class="function"><span class="keyword">end</span> (<span class="title">FS</span>) <span class="title">modules</span> <span class="title">are</span> <span class="title">available</span>:</span></div><div class="line"></div><div class="line">* fs_fs : Module <span class="keyword">for</span> working <span class="operator">with</span> <span class="operator">a</span> plain <span class="built_in">file</span> (FSFS) repository.</div></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="创建仓库">创建仓库</h2>
<ol>
<li><p>创建目录</p>
<ul>
<li>sudo mkdir -p /data/svn/repositories/local</li>
</ul>
</li>
<li><p>创建仓库</p>
<ul>
<li>sudo svnadmin create /data/svn/repositories/local</li>
</ul>
</li>
</ol>
<p>查看: <code>ls -al /data/svn/repositories/local</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">total</span> 16</div><div class="line"><span class="tag">drwxr-xr-x</span>   8 <span class="tag">root</span>  <span class="tag">wheel</span>  272 10 23 17<span class="pseudo">:38</span> .</div><div class="line"><span class="tag">drwxr-xr-x</span>   3 <span class="tag">root</span>  <span class="tag">wheel</span>  102 10 23 17<span class="pseudo">:18</span> ..</div><div class="line"><span class="tag">-rw-r--r--</span>   1 <span class="tag">root</span>  <span class="tag">wheel</span>  229 10 23 17<span class="pseudo">:38</span> <span class="tag">README</span><span class="class">.txt</span></div><div class="line"><span class="tag">drwxr-xr-x</span>   5 <span class="tag">root</span>  <span class="tag">wheel</span>  170 10 23 17<span class="pseudo">:38</span> <span class="tag">conf</span></div><div class="line"><span class="tag">drwxr-sr-x</span>  15 <span class="tag">root</span>  <span class="tag">wheel</span>  510 10 23 17<span class="pseudo">:38</span> <span class="tag">db</span></div><div class="line"><span class="tag">-r--r--r--</span>   1 <span class="tag">root</span>  <span class="tag">wheel</span>    2 10 23 17<span class="pseudo">:38</span> <span class="tag">format</span></div><div class="line"><span class="tag">drwxr-xr-x</span>  11 <span class="tag">root</span>  <span class="tag">wheel</span>  374 10 23 17<span class="pseudo">:38</span> <span class="tag">hooks</span></div><div class="line"><span class="tag">drwxr-xr-x</span>   4 <span class="tag">root</span>  <span class="tag">wheel</span>  136 10 23 17<span class="pseudo">:38</span> <span class="tag">locks</span></div></pre></td></tr></table></figure>

<h2 id="配置">配置</h2>
<h3 id="切换目录">切换目录</h3>
<p><code>cd /data/svn/repositories/local/conf</code></p>
<h3 id="编辑svnserve-conf文件">编辑svnserve.conf文件</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="variable">anon-access =</span> none</div><div class="line"><span class="variable">auth-access =</span> write</div><div class="line"><span class="variable">password-db =</span> passwd</div><div class="line"><span class="variable">authz-db =</span> authz</div></pre></td></tr></table></figure>

<h3 id="编辑passwd文件">编辑passwd文件</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 在[users] 下添加用户及密码</span></div><div class="line"><span class="variable">arccode =</span> arccode</div></pre></td></tr></table></figure>

<h3 id="编辑authz文件,_为用户分组,_并对组添加相应的权限">编辑authz文件, 为用户分组, 并对组添加相应的权限</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="title">admin</span> = arccode</div><div class="line">[/]</div><div class="line"><span class="variable">@admin</span> = rw</div><div class="line">[<span class="url">local:/]</span></div><div class="line"><span class="variable">@admin</span> = rw</div></pre></td></tr></table></figure>

<h2 id="启动">启动</h2>
<p><code>sudo svnserve -d -r /data/svn/repositories --log-file=/var/log/svn.log</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 连接, svnserve默认端口3690</span></div><div class="line">telnet localhost <span class="number">3690</span></div></pre></td></tr></table></figure>

<h2 id="导入项目">导入项目</h2>
<ol>
<li>命令行</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">sudo svn import -m <span class="string">'init repo'</span> SvnTest/ svn:<span class="comment">//localhost/local</span></div><div class="line">Password:</div><div class="line">Sorry, <span class="keyword">try</span> again.</div><div class="line">Password:</div><div class="line">Sorry, <span class="keyword">try</span> again.</div><div class="line">Password:</div><div class="line">Authentication realm: &lt;svn:<span class="comment">//localhost:3690&gt; f70f2b4f-24f7-450c-9c79-99d29ed1e070</span></div><div class="line">Password <span class="keyword">for</span> <span class="string">'root'</span>: </div><div class="line">Authentication realm: &lt;svn:<span class="comment">//localhost:3690&gt; f70f2b4f-24f7-450c-9c79-99d29ed1e070</span></div><div class="line">Username: arccode</div><div class="line">Password <span class="keyword">for</span> <span class="string">'arccode'</span>: </div><div class="line">Adding         SvnTest/.classpath</div><div class="line">Adding         SvnTest/WebRoot</div><div class="line">Adding         SvnTest/WebRoot/META-INF</div><div class="line">Adding         SvnTest/WebRoot/META-INF/MANIFEST.MF</div><div class="line">Adding         SvnTest/WebRoot/<span class="keyword">index</span>.jsp</div><div class="line">Adding         SvnTest/WebRoot/WEB-INF</div><div class="line">Adding         SvnTest/WebRoot/WEB-INF/lib</div><div class="line">Adding         SvnTest/WebRoot/WEB-INF/web.xml</div><div class="line">Adding         SvnTest/WebRoot/WEB-INF/classes</div><div class="line">Adding         SvnTest/.mymetadata</div><div class="line">Adding         SvnTest/.project</div><div class="line">Adding         SvnTest/src</div><div class="line">Adding         SvnTest/.myeclipse</div><div class="line">Adding         SvnTest/.settings</div><div class="line">Adding         SvnTest/.settings/org.eclipse.jdt.core.prefs</div><div class="line">Adding         SvnTest/.settings/org.eclipse.wst.jsdt.ui.superType.name</div><div class="line">Adding         SvnTest/.settings/org.eclipse.wst.jsdt.ui.superType.<span class="keyword">container</span></div><div class="line">Adding         SvnTest/.settings/org.eclipse.wst.<span class="keyword">common</span>.project.facet.core.xml</div><div class="line">Adding         SvnTest/.settings/.jsdtscope</div><div class="line">Adding         SvnTest/.settings/org.eclipse.wst.<span class="keyword">common</span>.component</div><div class="line"></div><div class="line">Committed revision <span class="number">4.</span></div></pre></td></tr></table></figure>

<ol>
<li>MyEclipse shareProject</li>
</ol>
<p>配置url为 svn://localhost/local</p>
<h2 id="开机启动">开机启动</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 编辑/etc/rc.local(Mac默认无此文件,需要手动创建), 添加</div><div class="line">svnserve -<span class="keyword">d</span> -<span class="keyword">r</span> /data/svn/repositories --<span class="built_in">log</span>-<span class="keyword">file</span>=/var/<span class="built_in">log</span>/svn.<span class="built_in">log</span></div></pre></td></tr></table></figure>

<h2 id="参考资料">参考资料</h2>
<p><a href="http://xiayong.blog.51cto.com/6292420/1088790" target="_blank" rel="external">Mac OS X上搭建本地SVN服务器</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="安装svnserver">安装svnserver</h2>
<p>Mac自带svnserver, 输入svnserve —version</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">svnserve, <span class="built_in">version</span> <span class="number">1.7</span><span class="number">.10</span> (r1485443)</div><div class="line">   compiled Jan <span class="number">15</span> <span class="number">2014</span>, <span class="number">11</span>:<span class="number">22</span>:<span class="number">16</span></div><div class="line"></div><div class="line">Copyright (C) <span class="number">2013</span> The Apache Software Foundation.</div><div class="line">This software consists <span class="operator">of</span> contributions made <span class="keyword">by</span> many people; see <span class="operator">the</span> NOTICE</div><div class="line"><span class="built_in">file</span> <span class="keyword">for</span> more information.</div><div class="line">Subversion is <span class="built_in">open</span> source software, see <span class="keyword">http</span>://subversion.apache.org/</div><div class="line"></div><div class="line">The following repository back-<span class="function"><span class="keyword">end</span> (<span class="title">FS</span>) <span class="title">modules</span> <span class="title">are</span> <span class="title">available</span>:</span></div><div class="line"></div><div class="line">* fs_fs : Module <span class="keyword">for</span> working <span class="operator">with</span> <span class="operator">a</span> plain <span class="built_in">file</span> (FSFS) repository.</div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
      <category term="Svn" scheme="http://arccode.net/tags/Svn/"/>
    
      <category term="工具" scheme="http://arccode.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Zookeeper实战一]]></title>
    <link href="http://arccode.net/2014/09/30/Zookeeper%E5%AE%9E%E6%88%98%E4%B8%80/"/>
    <id>http://arccode.net/2014/09/30/Zookeeper实战一/</id>
    <published>2014-09-30T09:05:26.000Z</published>
    <updated>2015-02-25T15:47:50.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Zookeeper集群搭建">Zookeeper集群搭建</h1>
<p>文中提到<code>切换用户</code>: 表明未切换的状态下是root用户</p>
<h2 id="创建用户组_用户_Zookeeper数据目录">创建用户组 用户 Zookeeper数据目录</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 添加组</span></div><div class="line"><span class="title">groupadd</span> zk</div><div class="line"></div><div class="line"><span class="preprocessor"># 在组zk中添加用户</span></div><div class="line"><span class="title">useradd</span> -g zk zk</div><div class="line"></div><div class="line"><span class="preprocessor"># 修改密码</span></div><div class="line"><span class="title">passwd</span> zk</div><div class="line"></div><div class="line"><span class="preprocessor"># 创建数据目录</span></div><div class="line"><span class="title">mkdir</span> -p /<span class="typedef"><span class="keyword">data</span>/zookeeper</span></div><div class="line"></div><div class="line"><span class="preprocessor"># 修改权限</span></div><div class="line"><span class="title">chown</span> -<span class="type">R</span> zk:zk /<span class="typedef"><span class="keyword">data</span>/zookeeper</span></div><div class="line"></div><div class="line"><span class="preprocessor"># 切换用户</span></div><div class="line"><span class="title">su</span> zk</div><div class="line"></div><div class="line"><span class="preprocessor"># 创建data dir 及 log dir</span></div><div class="line"><span class="title">mkdir</span> /<span class="typedef"><span class="keyword">data</span>/zookeeper/<span class="keyword">data</span></span></div><div class="line"><span class="title">mkdir</span> /<span class="typedef"><span class="keyword">data</span>/zookeeper/log</span></div></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="安装Zookeeper">安装Zookeeper</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 上传文件到/usr/local/src</span></div><div class="line"></div><div class="line"><span class="preprocessor"># 解压文件至/usr/local</span></div><div class="line">tar zxf zookeeper-<span class="number">3.4</span><span class="number">.6</span>.tar.gz -C /usr/local/</div><div class="line">mv zookeeper-<span class="number">3.4</span><span class="number">.6</span> zookeeper</div><div class="line"></div><div class="line"><span class="preprocessor"># 权限</span></div><div class="line">chown -R zk:zk /usr/local/zookeeper/</div><div class="line"></div><div class="line"><span class="preprocessor"># 切换用户</span></div><div class="line">su zk</div><div class="line">cd /usr/local/zookeeper/conf</div><div class="line">cp zoo_sample.cfg zoo.cfg</div><div class="line"></div><div class="line"><span class="preprocessor"># 编辑配置文件</span></div><div class="line"><span class="preprocessor"># 修改dataDir,dataLogDir, server.1=192.168.1.10:2888:3888 server.2=192.168.1.11:2888:3888 server.3=192.168.1.13:2888:3888 </span></div><div class="line">vim zoo.cfg</div><div class="line"></div><div class="line"><span class="preprocessor"># 修改log4j配置</span></div><div class="line"><span class="preprocessor"># zookeeper.log.dir=/data/zookeeper/log</span></div><div class="line">vim log4j.properties</div><div class="line"></div><div class="line"><span class="preprocessor"># 创建ZooKeeperServerId文件</span></div><div class="line">cd /data/zookeeper/data</div><div class="line"><span class="preprocessor"># 1号机使用1, 2号机使用2, 3号机使用3</span></div><div class="line">echo <span class="string">"1"</span> &gt; myid</div><div class="line"></div><div class="line"><span class="preprocessor"># 添加环境变量</span></div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Zookeeper集群搭建">Zookeeper集群搭建</h1>
<p>文中提到<code>切换用户</code>: 表明未切换的状态下是root用户</p>
<h2 id="创建用户组_用户_Zookeeper数据目录">创建用户组 用户 Zookeeper数据目录</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 添加组</span></div><div class="line"><span class="title">groupadd</span> zk</div><div class="line"></div><div class="line"><span class="preprocessor"># 在组zk中添加用户</span></div><div class="line"><span class="title">useradd</span> -g zk zk</div><div class="line"></div><div class="line"><span class="preprocessor"># 修改密码</span></div><div class="line"><span class="title">passwd</span> zk</div><div class="line"></div><div class="line"><span class="preprocessor"># 创建数据目录</span></div><div class="line"><span class="title">mkdir</span> -p /<span class="typedef"><span class="keyword">data</span>/zookeeper</span></div><div class="line"></div><div class="line"><span class="preprocessor"># 修改权限</span></div><div class="line"><span class="title">chown</span> -<span class="type">R</span> zk:zk /<span class="typedef"><span class="keyword">data</span>/zookeeper</span></div><div class="line"></div><div class="line"><span class="preprocessor"># 切换用户</span></div><div class="line"><span class="title">su</span> zk</div><div class="line"></div><div class="line"><span class="preprocessor"># 创建data dir 及 log dir</span></div><div class="line"><span class="title">mkdir</span> /<span class="typedef"><span class="keyword">data</span>/zookeeper/<span class="keyword">data</span></span></div><div class="line"><span class="title">mkdir</span> /<span class="typedef"><span class="keyword">data</span>/zookeeper/log</span></div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="Zookeeper" scheme="http://arccode.net/tags/Zookeeper/"/>
    
      <category term="中间件" scheme="http://arccode.net/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Kafka实战一]]></title>
    <link href="http://arccode.net/2014/09/30/Kafka%E5%AE%9E%E6%88%98%E4%B8%80/"/>
    <id>http://arccode.net/2014/09/30/Kafka实战一/</id>
    <published>2014-09-30T04:43:33.000Z</published>
    <updated>2015-02-25T15:48:06.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Kafka实战一">Kafka实战一</h1>
<h2 id="搭建环境">搭建环境</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 下载安装包</span></div><div class="line">http:<span class="comment">//mirror.nus.edu.sg/apache/kafka/0.8.1.1/kafka_2.10-0.8.1.1.tgz</span></div><div class="line"></div><div class="line"><span class="preprocessor"># 上传到Linux /home</span></div><div class="line"></div><div class="line"><span class="preprocessor"># 解压</span></div><div class="line">tar xzf kafka_2<span class="number">.10</span>-<span class="number">0.8</span><span class="number">.1</span><span class="number">.1</span>.tgz -C /usr/local</div><div class="line">cd /usr/local</div><div class="line">mv kafka_2<span class="number">.10</span>-<span class="number">0.8</span><span class="number">.1</span><span class="number">.1</span> kafka</div><div class="line"></div><div class="line"><span class="preprocessor"># 启动 Zookeeper</span></div><div class="line">cd kafka</div><div class="line">./zookeeper-server-start.sh config/zookeeper.properties</div><div class="line"></div><div class="line"><span class="preprocessor"># 启动 Kafka</span></div><div class="line">./kafka-server-start.sh config/server.properties</div></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="测试—单个broker">测试—单个broker</h2>
<h3 id="新建Topic">新建Topic</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span> <span class="comment">列出存在的Topic</span></div><div class="line"><span class="string">.</span><span class="comment">/bin/kafka</span><span class="literal">-</span><span class="comment">topics</span><span class="string">.</span><span class="comment">sh</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">list</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">zookeeper</span> <span class="comment">localhost:2181</span></div><div class="line"></div><div class="line"><span class="comment">#</span> <span class="comment">新建</span></div><div class="line"><span class="string">.</span><span class="comment">/bin/kafka</span><span class="literal">-</span><span class="comment">topics</span><span class="string">.</span><span class="comment">sh</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">create</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">zookeeper</span> <span class="comment">localhost:2181</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">replication</span><span class="literal">-</span><span class="comment">factor</span> <span class="comment">1</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">partitions</span> <span class="comment">1</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">topic</span> <span class="comment">topicTest</span></div></pre></td></tr></table></figure>

<h3 id="发送消息">发送消息</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># console</div><div class="line">./kafka-console-producer.<span class="keyword">sh</span> --broker-<span class="keyword">list</span> localhos<span class="variable">t:9092</span> --topic topicTest</div><div class="line">this <span class="keyword">is</span> topicTest producer test</div><div class="line">hello world!</div></pre></td></tr></table></figure>

<h3 id="消费消息">消费消息</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span> <span class="comment">console</span></div><div class="line"><span class="string">.</span><span class="comment">/kafka</span><span class="literal">-</span><span class="comment">console</span><span class="literal">-</span><span class="comment">consumer</span><span class="string">.</span><span class="comment">sh</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">zookeeper</span> <span class="comment">localhost:2181</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">topic</span> <span class="comment">topicTest</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">from</span><span class="literal">-</span><span class="comment">beginning</span></div></pre></td></tr></table></figure>

<h2 id="测试—多个broker">测试—多个broker</h2>
<h3 id="创建broker">创建broker</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 编辑配置文件</span></div><div class="line">cp <span class="keyword">server</span>.properties <span class="keyword">server</span>-<span class="number">1.</span>properties</div><div class="line">cp <span class="keyword">server</span>.properties <span class="keyword">server</span>-<span class="number">2.</span>properties</div><div class="line"></div><div class="line">vim <span class="keyword">server</span>-<span class="number">1.</span>properties</div><div class="line"><span class="preprocessor"># 修改内容</span></div><div class="line">	broker.id=<span class="number">1</span></div><div class="line">	port=<span class="number">9093</span></div><div class="line">	log.dirs=/tmp/kafka-logs-<span class="number">1</span></div><div class="line">	</div><div class="line">vim <span class="keyword">server</span>-<span class="number">2.</span>properties</div><div class="line"><span class="preprocessor"># 修改内容</span></div><div class="line">	broker.id=<span class="number">2</span></div><div class="line">	port=<span class="number">9094</span></div><div class="line">	log.dirs=/tmp/kafka-logs-<span class="number">2</span></div><div class="line"></div><div class="line"><span class="preprocessor"># 启动</span></div><div class="line">./kafka-<span class="keyword">server</span>-start.sh -daemon ../config/<span class="keyword">server</span>-<span class="number">1.</span>properties</div><div class="line">./kafka-<span class="keyword">server</span>-start.sh -daemon ../config/<span class="keyword">server</span>-<span class="number">2.</span>properties</div></pre></td></tr></table></figure>

<h3 id="创建topic,_设置备份为3">创建topic, 设置备份为3</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">.</span><span class="comment">/kafka</span><span class="literal">-</span><span class="comment">topics</span><span class="string">.</span><span class="comment">sh</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">create</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">zookeeper</span> <span class="comment">localhost:2181</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">replication</span><span class="literal">-</span><span class="comment">factor</span> <span class="comment">3</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">partitions</span> <span class="comment">1</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">topic</span> <span class="comment">three</span><span class="literal">-</span><span class="comment">replication</span><span class="literal">-</span><span class="comment">topicTest</span></div></pre></td></tr></table></figure>

<h3 id="查看topic">查看topic</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看</span></div><div class="line">./kafka-topics.sh -describe --zookeeper <span class="symbol">localhost:</span><span class="number">2181</span> --topic three-replication-topicTest</div><div class="line"></div><div class="line"><span class="comment"># 结果如下</span></div><div class="line">	<span class="comment"># 分区汇总信息</span></div><div class="line">	<span class="constant">Topic</span><span class="symbol">:three-replication-topicTest</span>       <span class="constant">PartitionCount</span><span class="symbol">:</span><span class="number">1</span>        <span class="constant">ReplicationFactor</span><span class="symbol">:</span><span class="number">3</span>     <span class="constant">Configs</span><span class="symbol">:</span></div><div class="line">	<span class="comment"># Leader: leader节点是2; Replicas: 在节点2,0,1上; Isr: 工作中的复制节点的集合,也就是活的节点的集合;</span></div><div class="line">    <span class="constant">Topic</span><span class="symbol">:</span> three-replication-topicTest      <span class="constant">Partition</span><span class="symbol">:</span> <span class="number">0</span>    <span class="constant">Leader</span><span class="symbol">:</span> <span class="number">2</span>       <span class="constant">Replicas</span><span class="symbol">:</span> <span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span> <span class="constant">Isr</span><span class="symbol">:</span> <span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span></div></pre></td></tr></table></figure>

<h3 id="发送消息-1">发送消息</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./kafka-console-producer.<span class="keyword">sh</span> --broker-<span class="keyword">list</span> localhos<span class="variable">t:9092</span> --topic three-replication-topicTest</div></pre></td></tr></table></figure>

<h3 id="消费消息-1">消费消息</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">.</span><span class="comment">/kafka</span><span class="literal">-</span><span class="comment">console</span><span class="literal">-</span><span class="comment">consumer</span><span class="string">.</span><span class="comment">sh</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">zookeeper</span> <span class="comment">localhost:2181</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">topic</span> <span class="comment">three</span><span class="literal">-</span><span class="comment">replication</span><span class="literal">-</span><span class="comment">topicTest</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">from</span><span class="literal">-</span><span class="comment">beginning</span></div></pre></td></tr></table></figure>

<h3 id="删除leader(即broker2)">删除leader(即broker2)</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看进程</span></div><div class="line">ps -ef|grep server-<span class="number">2</span>.properties</div><div class="line"></div><div class="line"><span class="comment"># 终止</span></div><div class="line">kil -<span class="number">9</span> <span class="number">27628</span></div><div class="line"></div><div class="line"><span class="comment"># 查看topic</span></div><div class="line">	<span class="constant">Topic</span><span class="symbol">:three-replication-topicTest</span>       <span class="constant">PartitionCount</span><span class="symbol">:</span><span class="number">1</span>        <span class="constant">ReplicationFactor</span><span class="symbol">:</span><span class="number">3</span>     <span class="constant">Configs</span><span class="symbol">:</span></div><div class="line">	<span class="comment"># 2号节点被终止, leader节点由0号节点顶替(即broker0), 2号节点未被列入Isr中(因为已被终止)</span></div><div class="line">    <span class="constant">Topic</span><span class="symbol">:</span> three-replication-topicTest      <span class="constant">Partition</span><span class="symbol">:</span> <span class="number">0</span>    <span class="constant">Leader</span><span class="symbol">:</span> <span class="number">0</span>       <span class="constant">Replicas</span><span class="symbol">:</span> <span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span> <span class="constant">Isr</span><span class="symbol">:</span> <span class="number">0</span>,<span class="number">1</span></div><div class="line"> </div><div class="line"><span class="comment"># 发送消息进行测试</span></div><div class="line">消息正常发送及接收</div></pre></td></tr></table></figure>

<h3 id="再删除新的leader(即broker0)">再删除新的leader(即broker0)</h3>
<p>发送消息时报错, 正在查找原因中……..<br>找到原因: 生产者连接的broker被终止导致发送消息出错(连接异常)</p>
<p>采用四个broker及四个replication-factor</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">Topic</span><span class="pseudo">:topicRepl</span> <span class="tag">PartitionCount</span><span class="pseudo">:1</span>        <span class="tag">ReplicationFactor</span><span class="pseudo">:4</span>     <span class="tag">Configs</span>:</div><div class="line"><span class="tag">Topic</span>: <span class="tag">topicRepl</span>        <span class="tag">Partition</span>: 0    <span class="tag">Leader</span>: 0       <span class="tag">Replicas</span>: 0,2,3,1       <span class="tag">Isr</span>: 0,2,3,1</div></pre></td></tr></table></figure>

<p>逐个删除leader</p>
<h2 id="坑">坑</h2>
<h3 id="java-net-UnknownHostException:_hadoop229:_hadoop229:_未知的名称或服务">java.net.UnknownHostException: hadoop229: hadoop229: 未知的名称或服务</h3>
<p>解决方案: </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vim /etc/hosts</div><div class="line"></div><div class="line"><span class="preprocessor"># 在末尾添加 127.0.0.1 hadoop229</span></div></pre></td></tr></table></figure>

<h2 id="参考资料">参考资料</h2>
<p><a href="http://www.douban.com/note/310653859/" target="_blank" rel="external">hadoop坑</a></p>
<p><a href="http://www.code06.com/enterprise/smallnest/92824.html" target="_blank" rel="external">Kafka入门</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Kafka实战一">Kafka实战一</h1>
<h2 id="搭建环境">搭建环境</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 下载安装包</span></div><div class="line">http:<span class="comment">//mirror.nus.edu.sg/apache/kafka/0.8.1.1/kafka_2.10-0.8.1.1.tgz</span></div><div class="line"></div><div class="line"><span class="preprocessor"># 上传到Linux /home</span></div><div class="line"></div><div class="line"><span class="preprocessor"># 解压</span></div><div class="line">tar xzf kafka_2<span class="number">.10</span>-<span class="number">0.8</span><span class="number">.1</span><span class="number">.1</span>.tgz -C /usr/local</div><div class="line">cd /usr/local</div><div class="line">mv kafka_2<span class="number">.10</span>-<span class="number">0.8</span><span class="number">.1</span><span class="number">.1</span> kafka</div><div class="line"></div><div class="line"><span class="preprocessor"># 启动 Zookeeper</span></div><div class="line">cd kafka</div><div class="line">./zookeeper-server-start.sh config/zookeeper.properties</div><div class="line"></div><div class="line"><span class="preprocessor"># 启动 Kafka</span></div><div class="line">./kafka-server-start.sh config/server.properties</div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="Kafka" scheme="http://arccode.net/tags/Kafka/"/>
    
      <category term="队列" scheme="http://arccode.net/categories/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Maven常见问题]]></title>
    <link href="http://arccode.net/2014/09/22/Maven%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    <id>http://arccode.net/2014/09/22/Maven常见问题/</id>
    <published>2014-09-22T03:28:01.000Z</published>
    <updated>2015-02-25T15:36:21.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li>命令行执行<code>mvn clean package</code>—&gt; 编码 EUC_CN 的不可映射字符,在Myeclipse下执行命令无此问题<ul>
<li>原因: 命令行编码使用<code>GBK</code>,而代码文件使用<code>UTF-8</code>编码</li>
<li>解决方案:<ul>
<li>方案一: 将命令行编码改为<code>UTF-8</code></li>
<li>方案二: 在pom.xml中指定使用<code>UTF-8</code>进行文件拷贝,编译</li>
<li>例如:         <a id="more"></a>



</li>
</ul>
</li>
</ul>
</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">properties</span>&gt;</span>		  </div><div class="line">      	<span class="comment">&lt;!-- 文件拷贝时的编码 --&gt;</span>          </div><div class="line">      	<span class="tag">&lt;<span class="title">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="title">project.build.sourceEncoding</span>&gt;</span>  </div><div class="line">      	<span class="tag">&lt;<span class="title">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="title">project.reporting.outputEncoding</span>&gt;</span>  </div><div class="line">      	<span class="comment">&lt;!-- 编译时的编码 --&gt;</span>  </div><div class="line">      	<span class="tag">&lt;<span class="title">maven.compiler.encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="title">maven.compiler.encoding</span>&gt;</span>  </div><div class="line">  	<span class="tag">&lt;/<span class="title">properties</span>&gt;</span></div></pre></td></tr></table></figure>


<pre><code>    或
</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">plugin</span>&gt;</span>  </div><div class="line">	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span>  </div><div class="line">	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span>  </div><div class="line">	<span class="tag">&lt;<span class="title">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="title">version</span>&gt;</span>  </div><div class="line">	<span class="tag">&lt;<span class="title">configuration</span>&gt;</span>  </div><div class="line">		<span class="tag">&lt;<span class="title">source</span>&gt;</span>1.5<span class="tag">&lt;/<span class="title">source</span>&gt;</span>  </div><div class="line">		<span class="tag">&lt;<span class="title">target</span>&gt;</span>1.5<span class="tag">&lt;/<span class="title">target</span>&gt;</span>  </div><div class="line">		<span class="tag">&lt;<span class="title">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="title">encoding</span>&gt;</span><span class="comment">&lt;!-- 指定编码格式，否则在DOS下运行mvn 				compile命令时会出现莫名的错误，因为系统默认使用GBK编码 --&gt;</span>  </div><div class="line">	<span class="tag">&lt;/<span class="title">configuration</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;/<span class="title">plugin</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="title">plugin</span>&gt;</span>  </div><div class="line">	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span>  </div><div class="line">	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span>  </div><div class="line">	<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="title">version</span>&gt;</span>  </div><div class="line">	<span class="tag">&lt;<span class="title">configuration</span>&gt;</span>  </div><div class="line">		<span class="tag">&lt;<span class="title">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="title">encoding</span>&gt;</span><span class="comment">&lt;!-- 指定编码格式，否则在DOS下运行mvn命令时当发生文件资源copy时将使用系统默认使用GBK编码 --&gt;</span>  </div><div class="line">	<span class="tag">&lt;/<span class="title">configuration</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></div></pre></td></tr></table></figure>

<pre><code>    或
</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">mvn clean package -Dencoding</span>=<span class="string">utf8</span></div></pre></td></tr></table></figure>





]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li>命令行执行<code>mvn clean package</code>—&gt; 编码 EUC_CN 的不可映射字符,在Myeclipse下执行命令无此问题<ul>
<li>原因: 命令行编码使用<code>GBK</code>,而代码文件使用<code>UTF-8</code>编码</li>
<li>解决方案:<ul>
<li>方案一: 将命令行编码改为<code>UTF-8</code></li>
<li>方案二: 在pom.xml中指定使用<code>UTF-8</code>进行文件拷贝,编译</li>
<li>例如:         ]]>
    
    </summary>
    
      <category term="Maven" scheme="http://arccode.net/tags/Maven/"/>
    
      <category term="问题集锦" scheme="http://arccode.net/categories/%E9%97%AE%E9%A2%98%E9%9B%86%E9%94%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[阿里云CentOS搭建MEAN]]></title>
    <link href="http://arccode.net/2014/09/21/%E9%98%BF%E9%87%8C%E4%BA%91CentOS%E6%90%AD%E5%BB%BAMEAN/"/>
    <id>http://arccode.net/2014/09/21/阿里云CentOS搭建MEAN/</id>
    <published>2014-09-21T08:51:05.000Z</published>
    <updated>2015-02-25T15:14:49.000Z</updated>
    <content type="html"><![CDATA[<h2 id="购买主机">购买主机</h2>
<p>看个人爱好，本人购买阿里云主机，最低配置55元/月</p>
<h2 id="安装相关模块">安装相关模块</h2>
<ol>
<li>在阿里云管理控制台启动购买的云主机</li>
<li>使用<code>zoc6</code>连接服务器</li>
<li><p>更新软件 <code>yum -y update</code></p>
</li>
<li><p>安装开发工具 <code>yum -y groupinstall &quot;Development Tools&quot;</code></p>
</li>
<li>下载Node源码<ul>
<li>cd /usr/src</li>
<li>wget <a href="http://nodejs.org/dist/v0.10.32/node-v0.10.32.tar.gz" target="_blank" rel="external">http://nodejs.org/dist/v0.10.32/node-v0.10.32.tar.gz</a></li>
</ul>
</li>
<li>安装Node<ul>
<li>解压node-v0.10.32.tar.gz</li>
<li>cd node-v0.10.32</li>
<li>./configure</li>
<li>make</li>
<li>make install</li>
<li>*注：编译后的二进制文件会放置于系统路径下<code>/usr/local/bin/node</code></li>
</ul>
</li>
</ol>
<a id="more"></a>    

<ol>
<li>安装MongoDB<ul>
<li>检查是否安装过mongodb<ul>
<li>rpm -qa |grep mongodb</li>
<li>service mongodb status</li>
</ul>
</li>
<li>mongodb配置<ul>
<li>上传位置： /usr/local</li>
<li>软件安装位置： /user/local/mongodb</li>
<li>数据存储位置： /var/local/mongodb/data</li>
<li>日志存储位置： /var/local/mongodb/logs</li>
</ul>
</li>
<li>cd /usr/src</li>
<li>下载mongo，并上传至 /usr/local</li>
<li>mv mongodb-linux-x86_64-2.6.4 mongodb &amp;&amp; cd mongodb</li>
<li>mkdir /var/local/mongodb</li>
<li>mkdir /var/local/mongodb/data</li>
<li>mkdir /var/local/mongodb/logs</li>
<li>配置防火墙<ul>
<li>iptables -L -n // 查看防火墙配置信息</li>
<li>service iptables status // 检查防火墙状态</li>
<li>iptables -A INPUT -p tcp —dport 27017 -j ACCEPT</li>
<li>service iptables save</li>
<li>service iptables restart</li>
<li>详细的防火墙配置见<code>参考资料</code></li>
</ul>
</li>
</ul>
</li>
<li>启动mongodb<ul>
<li>/usr/local/mongodb/bin/mongod —dbpath=/var/local/mongodb/data —logpath=/var/local/mongodb/logs/log.log -fork</li>
</ul>
</li>
<li>配置mongodb<ul>
<li>开机启动: vim /etc/rc.d/</li>
<li>在末尾追加 /usr/local/mongodb/bin/mongod —dbpath=/var/local/mongodb/data —logpath=/var/local/mongodb/logs/log.log -fork</li>
</ul>
</li>
<li>将制定项目上传至服务器<ul>
<li>安装依赖模块 node install</li>
<li>启动项目 node index.js</li>
</ul>
</li>
</ol>
<h2 id="修改阿里云主机名">修改阿里云主机名</h2>
<ol>
<li>vim /etc/hosts</li>
<li>vim /etc/sysconfig/network</li>
<li>hostname 新主机名</li>
</ol>
<p>重新ssh登录,生效;</p>
<h2 id="碰到的问题">碰到的问题</h2>
<h3 id="启动时报_cannot_execute_binary_file">启动时报 cannot execute binary file</h3>
<p>执行 /usr/local/mongodb/bin/mongod —dbpath=/var/local/mongodb/data —logpath=/var/local/mongodb/logs/log.log 报错 <code>-bash: ./mongod: cannot execute binary file</code></p>
<p>原因: mongodb版本与centos版本不匹配,本人安装了32位的centos,但mongodb的版本为64位</p>
<p>解决方案: 下载32位的mongodb进行安装</p>
<h3 id="mongodb无法启动(Unclean_shutdown_detected)">mongodb无法启动(Unclean shutdown detected)</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">Unclean</span> shutdown detected.</div><div class="line"><span class="variable">Please</span> visit http://dochub.mongodb.org/core/repair for recovery instructions.</div></pre></td></tr></table></figure>

<p>原因: mongodb意外退出导致数据文件被锁, 本人采用<code>kill -9 pid</code>导致此问题</p>
<p>解决方案: </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">## 删除dbpath下的mongod.lock文件</span></div><div class="line">rm /usr/<span class="keyword">local</span>/mongodb/data/mongod.lock<span class="preprocessor"></span></div><div class="line"></div><div class="line">## 修复数据文件</div><div class="line">mongod --dbpath=/usr/<span class="keyword">local</span>/mongodb/data --repair<span class="preprocessor"></span></div><div class="line"></div><div class="line">## 重启mongodb</div><div class="line">/usr/<span class="keyword">local</span>/mongodb/bin/mongod --dbpath=/var/<span class="keyword">local</span>/mongodb/data --logpath=/var/<span class="keyword">local</span>/mongodb/logs/<span class="built_in">log</span>.<span class="built_in">log</span></div></pre></td></tr></table></figure>



<p>总结: 错误的关闭方式导致的问题,以后应该避免<code>kill -9 pid</code>这种暴力的方式, 可采用<code>kill -2 pid</code>或切换到mongodb的admin数据库下执行<code>db.shutdownServer()</code></p>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://www.woxplife.com/articles/404.html" target="_blank" rel="external">阿里云Centos配置iptables防火墙</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="购买主机">购买主机</h2>
<p>看个人爱好，本人购买阿里云主机，最低配置55元/月</p>
<h2 id="安装相关模块">安装相关模块</h2>
<ol>
<li>在阿里云管理控制台启动购买的云主机</li>
<li>使用<code>zoc6</code>连接服务器</li>
<li><p>更新软件 <code>yum -y update</code></p>
</li>
<li><p>安装开发工具 <code>yum -y groupinstall &quot;Development Tools&quot;</code></p>
</li>
<li>下载Node源码<ul>
<li>cd /usr/src</li>
<li>wget <a href="http://nodejs.org/dist/v0.10.32/node-v0.10.32.tar.gz" target="_blank" rel="external">http://nodejs.org/dist/v0.10.32/node-v0.10.32.tar.gz</a></li>
</ul>
</li>
<li>安装Node<ul>
<li>解压node-v0.10.32.tar.gz</li>
<li>cd node-v0.10.32</li>
<li>./configure</li>
<li>make</li>
<li>make install</li>
<li>*注：编译后的二进制文件会放置于系统路径下<code>/usr/local/bin/node</code></li>
</ul>
</li>
</ol>
]]>
    
    </summary>
    
      <category term="AngularJS" scheme="http://arccode.net/tags/AngularJS/"/>
    
      <category term="MongoDB" scheme="http://arccode.net/tags/MongoDB/"/>
    
      <category term="NodeJS" scheme="http://arccode.net/tags/NodeJS/"/>
    
      <category term="Linux" scheme="http://arccode.net/tags/Linux/"/>
    
      <category term="ExpressJS" scheme="http://arccode.net/tags/ExpressJS/"/>
    
      <category term="架构" scheme="http://arccode.net/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux指令]]></title>
    <link href="http://arccode.net/2014/09/21/Linux%E6%8C%87%E4%BB%A4/"/>
    <id>http://arccode.net/2014/09/21/Linux指令/</id>
    <published>2014-09-21T08:47:22.000Z</published>
    <updated>2015-03-16T05:54:54.000Z</updated>
    <content type="html"><![CDATA[<h2 id="常用">常用</h2>
<table>
<thead>
<tr>
<th>Description</th>
<th>instruct</th>
<th>Note</th>
</tr>
</thead>
<tbody>
<tr>
<td>修改日期</td>
<td>date -s “2014-01-01 00:00:00”</td>
<td></td>
</tr>
<tr>
<td>同步指定服务器日期</td>
<td>ntpdate 3.cn.pool.ntp.org</td>
<td></td>
</tr>
<tr>
<td>查看文件编码</td>
<td>set fileencoding</td>
<td></td>
</tr>
<tr>
<td>查看端口占用情况</td>
<td>netstat -an grep 3306</td>
<td>netstat命令</td>
</tr>
<tr>
<td>查看文件使用情况</td>
<td>lsof -i:80</td>
<td>-i参数表示网络链接，:80指明端口号，该命令会同时列出PID，方便kill</td>
</tr>
<tr>
<td>查看端口使用</td>
<td>lsof -w -n -i tcp:8080</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="Vim">Vim</h2>
<table>
<thead>
<tr>
<th>Description</th>
<th>instruct</th>
<th>Note</th>
</tr>
</thead>
<tbody>
<tr>
<td>复制一行</td>
<td>yy</td>
</tr>
<tr>
<td>粘贴</td>
<td>p</td>
</tr>
<tr>
<td>删除一行</td>
<td>dd</td>
</tr>
<tr>
<td>文章底部</td>
<td>shift + g</td>
</tr>
<tr>
<td>文章首部</td>
<td>gg</td>
</tr>
<tr>
<td>行首</td>
<td>0</td>
</tr>
<tr>
<td>行末</td>
<td>shift + $</td>
</tr>
<tr>
<td>下一页</td>
<td>control + f</td>
</tr>
<tr>
<td>上一页</td>
<td>control + b</td>
</tr>
</tbody>
</table>
<a id="more"></a>

<h2 id="参考资料">参考资料</h2>
<p><a href="http://navyaijm.blog.51cto.com/4647068/809455" target="_blank" rel="external">Centos 5.6下面架设NTP服务器</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="常用">常用</h2>
<table>
<thead>
<tr>
<th>Description</th>
<th>instruct</th>
<th>Note</th>
</tr>
</thead>
<tbody>
<tr>
<td>修改日期</td>
<td>date -s “2014-01-01 00:00:00”</td>
<td></td>
</tr>
<tr>
<td>同步指定服务器日期</td>
<td>ntpdate 3.cn.pool.ntp.org</td>
<td></td>
</tr>
<tr>
<td>查看文件编码</td>
<td>set fileencoding</td>
<td></td>
</tr>
<tr>
<td>查看端口占用情况</td>
<td>netstat -an grep 3306</td>
<td>netstat命令</td>
</tr>
<tr>
<td>查看文件使用情况</td>
<td>lsof -i:80</td>
<td>-i参数表示网络链接，:80指明端口号，该命令会同时列出PID，方便kill</td>
</tr>
<tr>
<td>查看端口使用</td>
<td>lsof -w -n -i tcp:8080</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="Vim">Vim</h2>
<table>
<thead>
<tr>
<th>Description</th>
<th>instruct</th>
<th>Note</th>
</tr>
</thead>
<tbody>
<tr>
<td>复制一行</td>
<td>yy</td>
</tr>
<tr>
<td>粘贴</td>
<td>p</td>
</tr>
<tr>
<td>删除一行</td>
<td>dd</td>
</tr>
<tr>
<td>文章底部</td>
<td>shift + g</td>
</tr>
<tr>
<td>文章首部</td>
<td>gg</td>
</tr>
<tr>
<td>行首</td>
<td>0</td>
</tr>
<tr>
<td>行末</td>
<td>shift + $</td>
</tr>
<tr>
<td>下一页</td>
<td>control + f</td>
</tr>
<tr>
<td>上一页</td>
<td>control + b</td>
</tr>
</tbody>
</table>
]]>
    
    </summary>
    
      <category term="Linux" scheme="http://arccode.net/tags/Linux/"/>
    
      <category term="Linux" scheme="http://arccode.net/categories/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Redis指令]]></title>
    <link href="http://arccode.net/2014/09/21/Redis%E6%8C%87%E4%BB%A4/"/>
    <id>http://arccode.net/2014/09/21/Redis指令/</id>
    <published>2014-09-21T08:37:46.000Z</published>
    <updated>2014-12-26T10:32:00.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>按前缀删除key: <code>redis-cli KEYS &quot;user*&quot; | xargs redis-cli DEL</code></li>
<li>删除当前数据库的所有key: <code>flushdb</code></li>
<li>删除所有数据库中的key: <code>flushall</code></li>
</ul>
<a id="more"></a>


<h2 id="参考资料">参考资料</h2>
<p><a href="http://commandlinefu.cn/commands/redis/redis_cli_keys_user_xargs_redis_cli_del.html" target="_blank" rel="external">按前缀删除redis key</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>按前缀删除key: <code>redis-cli KEYS &quot;user*&quot; | xargs redis-cli DEL</code></li>
<li>删除当前数据库的所有key: <code>flushdb</code></li>
<li>删除所有数据库中的key: <code>flushall</code></li>
</ul>
]]>
    
    </summary>
    
      <category term="Redis" scheme="http://arccode.net/tags/Redis/"/>
    
      <category term="指令" scheme="http://arccode.net/categories/%E6%8C%87%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Maven指令]]></title>
    <link href="http://arccode.net/2014/09/21/Maven%E6%8C%87%E4%BB%A4/"/>
    <id>http://arccode.net/2014/09/21/Maven指令/</id>
    <published>2014-09-21T08:31:57.000Z</published>
    <updated>2015-06-03T09:09:55.000Z</updated>
    <content type="html"><![CDATA[<h2 id="指令">指令</h2>
<ul>
<li>清空： <code>mvn clean</code></li>
<li>编译： <code>mvn compile</code></li>
<li>打包： <code>mvn package</code></li>
<li>安装jar包到maven仓库： <code>mvn install</code></li>
<li>跳过测试： <code>mvn clean -Dmaven.test.skip=true</code></li>
<li>导出依赖包： <code>mvn dependency:copy-dependencies -DoutputDirectory=lib</code></li>
<li>依赖检查: <code>mvn dependency:tree</code></li>
</ul>
<a id="more"></a>

<h2 id="POM配置">POM配置</h2>
<h3 id="dependency中scope解释">dependency中scope解释</h3>
<ul>
<li>compile,缺省值,适用于所有阶段,会随着项目一起发布. </li>
<li>provided,类似compile,期望JDK、容器或使用者会提供这个依赖.如servlet.jar. </li>
<li>runtime,只在运行时使用,如JDBC驱动,适用运行和测试阶段. </li>
<li>test,只在测试时使用,用于编译和运行测试代码.不会随项目发布. </li>
<li>system,类似provided,需要显式提供包含依赖的jar,Maven不会在Repository中查找它. </li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="指令">指令</h2>
<ul>
<li>清空： <code>mvn clean</code></li>
<li>编译： <code>mvn compile</code></li>
<li>打包： <code>mvn package</code></li>
<li>安装jar包到maven仓库： <code>mvn install</code></li>
<li>跳过测试： <code>mvn clean -Dmaven.test.skip=true</code></li>
<li>导出依赖包： <code>mvn dependency:copy-dependencies -DoutputDirectory=lib</code></li>
<li>依赖检查: <code>mvn dependency:tree</code></li>
</ul>
]]>
    
    </summary>
    
      <category term="Maven" scheme="http://arccode.net/tags/Maven/"/>
    
      <category term="指令" scheme="http://arccode.net/categories/%E6%8C%87%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux类库链接]]></title>
    <link href="http://arccode.net/2014/09/01/Linux%E7%B1%BB%E5%BA%93%E9%93%BE%E6%8E%A5/"/>
    <id>http://arccode.net/2014/09/01/Linux类库链接/</id>
    <published>2014-09-01T02:21:38.000Z</published>
    <updated>2015-02-25T15:34:26.000Z</updated>
    <content type="html"><![CDATA[<h2 id="tcl">tcl</h2>
<p><a href="http://downloads.sourceforge.net/tcl/tcl8.6.1-src.tar.gz" target="_blank" rel="external">http://downloads.sourceforge.net/tcl/tcl8.6.1-src.tar.gz</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">wget http://downloads.sourceforge.net/tcl/tcl8.<span class="number">6.1</span>-src.tar.gz </div><div class="line"><span class="built_in">sudo</span> tar xzvf tcl8.<span class="number">6.1</span>-src.tar.gz  -C /usr/local/</div><div class="line"><span class="built_in">cd</span>  /usr/local/tcl8.<span class="number">6.1</span>/unix/</div><div class="line"><span class="built_in">sudo</span> ./configure</div><div class="line"><span class="built_in">sudo</span> make</div><div class="line"><span class="built_in">sudo</span> make install</div></pre></td></tr></table></figure>

<a id="more"></a>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="tcl">tcl</h2>
<p><a href="http://downloads.sourceforge.net/tcl/tcl8.6.1-src.tar.gz" target="_blank" rel="external">http://downloads.sourceforge.net/tcl/tcl8.6.1-src.tar.gz</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">wget http://downloads.sourceforge.net/tcl/tcl8.<span class="number">6.1</span>-src.tar.gz </div><div class="line"><span class="built_in">sudo</span> tar xzvf tcl8.<span class="number">6.1</span>-src.tar.gz  -C /usr/local/</div><div class="line"><span class="built_in">cd</span>  /usr/local/tcl8.<span class="number">6.1</span>/unix/</div><div class="line"><span class="built_in">sudo</span> ./configure</div><div class="line"><span class="built_in">sudo</span> make</div><div class="line"><span class="built_in">sudo</span> make install</div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
      <category term="Linux" scheme="http://arccode.net/tags/Linux/"/>
    
      <category term="链接" scheme="http://arccode.net/categories/%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac下安装memcached]]></title>
    <link href="http://arccode.net/2014/08/10/Mac%E4%B8%8B%E5%AE%89%E8%A3%85memcached/"/>
    <id>http://arccode.net/2014/08/10/Mac下安装memcached/</id>
    <published>2014-08-10T15:51:56.000Z</published>
    <updated>2015-02-25T15:35:22.000Z</updated>
    <content type="html"><![CDATA[<h2 id="安装libevent(memcached的依赖库)">安装libevent(memcached的依赖库)</h2>
<ul>
<li><a href="https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz" target="_blank" rel="external">下载</a>libevent源码</li>
<li>解压<code>tar -xzf libevent-2.0.21-stable.tar.gz</code></li>
<li><code>cd libevent-2.0.21-stable</code></li>
<li><code>sudo ./configure --prefix=/usr</code></li>
<li><code>sudo make</code></li>
<li><code>sudo make install</code></li>
</ul>
<h2 id="安装memcached">安装memcached</h2>
<ul>
<li><a href="http://www.memcached.org/files/memcached-1.4.20.tar.gz" target="_blank" rel="external">下载</a>memcached源码</li>
<li>解压<code>memcached-1.4.20</code></li>
<li><code>cd memcached-1.4.20</code></li>
<li><code>sudo ./configure --prefix=/usr</code></li>
<li><code>sudo make</code></li>
<li><code>sudo make install</code></li>
</ul>
<a id="more"></a>


<h2 id="启动memcached">启动memcached</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 以调试模式启动</span></div><div class="line"><span class="built_in">sudo</span> memcached -p <span class="number">11211</span> -m <span class="number">128</span> -u root -vv</div><div class="line"><span class="comment"># 以后台进程模式启动</span></div><div class="line"><span class="built_in">sudo</span> memcached -p <span class="number">11211</span> -m <span class="number">128</span> -u root <span class="operator">-d</span></div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">启动时相关参数如下：</div><div class="line">-<span class="ruby">h 查看帮助</span></div><div class="line">-<span class="ruby">p 指定端口</span></div><div class="line">-<span class="ruby">m 指定内存数量，单位：<span class="constant">MB</span></span></div><div class="line">-<span class="ruby">u 运行memcached的用户</span></div><div class="line">-<span class="ruby">vv 调试模式启动</span></div><div class="line">-<span class="ruby">d 后台进程模式启动</span></div><div class="line">-<span class="ruby">c 最大并发连接数</span></div><div class="line">-<span class="ruby"><span class="constant">P</span> 在后台进程模式下，保存pid到指定文件，eg：/path/to/memcached.pid</span></div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">后台进程启动的一些指令</div><div class="line">-<span class="ruby">d install 安装memcached</span></div><div class="line">-<span class="ruby">d uninstall 卸载memcached</span></div><div class="line">-<span class="ruby">d start 启动memcached服务</span></div><div class="line">-<span class="ruby">d stop 停止memcached服务</span></div><div class="line">-<span class="ruby">d restart 重启memcached服务</span></div><div class="line">-<span class="ruby">d shutdown 停止memcached服务</span></div></pre></td></tr></table></figure>

<h2 id="测试memcached">测试memcached</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 在终端中使用`telnet`进行测试</span></div><div class="line">telnet localhost <span class="number">11211</span></div><div class="line"><span class="preprocessor"># set操作</span></div><div class="line"><span class="keyword">set</span> uid <span class="number">0</span> <span class="number">0</span> <span class="number">5</span></div><div class="line"><span class="number">20101111</span></div><div class="line"><span class="preprocessor"># get操作</span></div><div class="line"><span class="keyword">get</span> uid</div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># cli语法,输入value时必须换行</span></div><div class="line"><span class="command"><span class="keyword">command</span> &lt;<span class="title">key</span>&gt; &lt;<span class="title">flags</span>&gt; &lt;<span class="title">expiration</span> <span class="title">time</span>&gt; &lt;<span class="title">bytes</span>&gt;</span></div><div class="line">&lt;<span class="built_in">value</span>&gt;</div><div class="line">key: 类似于map中的key</div><div class="line">flags: 保存键值对的额外信息</div><div class="line">expiration <span class="built_in">time</span>: 键值对保存的过期时间，单位：秒，<span class="number">0</span>表示永不过期</div><div class="line"><span class="keyword">bytes</span>: 在缓存中存储的子节点</div><div class="line"><span class="built_in">value</span>: 类似于map中得<span class="built_in">value</span></div></pre></td></tr></table></figure>

<h2 id="安装phpMemcachedAdmin">安装phpMemcachedAdmin</h2>
<ul>
<li><a href="http://phpmemcacheadmin.googlecode.com/files/phpMemcachedAdmin-1.2.2-r262.tar.gz" target="_blank" rel="external">下载</a>phpMemcachedAdmin项目</li>
<li>将phpMemcachedAdmin解压到Apache的应用目录</li>
<li>打开phpMemcachedAdmin首页<br><img src="/images/phpMemcachedAdmin_view.png" alt=""></li>
</ul>
<p>关于memcached的详细用法请关注下篇博文。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="安装libevent(memcached的依赖库)">安装libevent(memcached的依赖库)</h2>
<ul>
<li><a href="https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz" target="_blank" rel="external">下载</a>libevent源码</li>
<li>解压<code>tar -xzf libevent-2.0.21-stable.tar.gz</code></li>
<li><code>cd libevent-2.0.21-stable</code></li>
<li><code>sudo ./configure --prefix=/usr</code></li>
<li><code>sudo make</code></li>
<li><code>sudo make install</code></li>
</ul>
<h2 id="安装memcached">安装memcached</h2>
<ul>
<li><a href="http://www.memcached.org/files/memcached-1.4.20.tar.gz" target="_blank" rel="external">下载</a>memcached源码</li>
<li>解压<code>memcached-1.4.20</code></li>
<li><code>cd memcached-1.4.20</code></li>
<li><code>sudo ./configure --prefix=/usr</code></li>
<li><code>sudo make</code></li>
<li><code>sudo make install</code></li>
</ul>
]]>
    
    </summary>
    
      <category term="Mac" scheme="http://arccode.net/tags/Mac/"/>
    
      <category term="Memcached" scheme="http://arccode.net/tags/Memcached/"/>
    
      <category term="NoSQL(缓存)" scheme="http://arccode.net/categories/NoSQL-%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac下安装phpRedisAdmin]]></title>
    <link href="http://arccode.net/2014/08/10/Mac%E4%B8%8B%E5%AE%89%E8%A3%85phpRedisAdmin/"/>
    <id>http://arccode.net/2014/08/10/Mac下安装phpRedisAdmin/</id>
    <published>2014-08-10T15:32:46.000Z</published>
    <updated>2015-02-25T15:35:28.000Z</updated>
    <content type="html"><![CDATA[<p>phpRedisAdmin是Redis的一个Web控制台，安装流程如下：</p>
<h2 id="安装phpRedis模块">安装phpRedis模块</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git clone git@github.com:nicolasff/phpredis.git</div><div class="line"><span class="built_in">cd</span> phpredis</div><div class="line">phpize</div><div class="line">./configure</div><div class="line"><span class="built_in">sudo</span> make</div><div class="line"><span class="built_in">sudo</span> make install</div></pre></td></tr></table></figure>

<h2 id="配置apache，启用php模块">配置apache，启用php模块</h2>
<ul>
<li><code>vim /etc/apache2/httpd.conf</code></li>
<li>找到<code>#LoadModule php5_module libexec/apache2/libphp5.so</code>,将<code>#</code>删除</li>
</ul>
<a id="more"></a>


<h2 id="配置php">配置php</h2>
<ul>
<li><code>vim /etc/php.ini</code></li>
<li>找到<code>extension=</code>,在其下面一行增加<code>extension=redis.so</code></li>
</ul>
<h2 id="安装phpRedisAdmin">安装phpRedisAdmin</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 将phpRedisAdmin克隆到apache应用目录</span></div><div class="line">git <span class="keyword">clone</span> git@github.com:ErikDubbelboer/phpRedisAdmin.git</div><div class="line">cd phpRedisAdmin</div><div class="line">git <span class="keyword">clone</span> https:<span class="comment">//github.com/nrk/predis.git vendor</span></div></pre></td></tr></table></figure>

<h2 id="测试">测试</h2>
<ul>
<li>启动Redis server<a href="http://arccode.github.com/2014/08/07/Mac%E4%B8%8A%E5%AE%89%E8%A3%85redis/" target="_blank" rel="external">参考Mac下安装redis</a></li>
<li><code>redis-server redis.conf</code></li>
<li>打开phpRedisAdmin首页<br><img src="/images/phpRedisAdmin_view.png" alt=""></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>phpRedisAdmin是Redis的一个Web控制台，安装流程如下：</p>
<h2 id="安装phpRedis模块">安装phpRedis模块</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git clone git@github.com:nicolasff/phpredis.git</div><div class="line"><span class="built_in">cd</span> phpredis</div><div class="line">phpize</div><div class="line">./configure</div><div class="line"><span class="built_in">sudo</span> make</div><div class="line"><span class="built_in">sudo</span> make install</div></pre></td></tr></table></figure>

<h2 id="配置apache，启用php模块">配置apache，启用php模块</h2>
<ul>
<li><code>vim /etc/apache2/httpd.conf</code></li>
<li>找到<code>#LoadModule php5_module libexec/apache2/libphp5.so</code>,将<code>#</code>删除</li>
</ul>
]]>
    
    </summary>
    
      <category term="Mac" scheme="http://arccode.net/tags/Mac/"/>
    
      <category term="Redis" scheme="http://arccode.net/tags/Redis/"/>
    
      <category term="工具" scheme="http://arccode.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac下安装redis]]></title>
    <link href="http://arccode.net/2014/08/07/Mac%E4%B8%8B%E5%AE%89%E8%A3%85redis/"/>
    <id>http://arccode.net/2014/08/07/Mac下安装redis/</id>
    <published>2014-08-06T16:26:37.000Z</published>
    <updated>2015-02-25T15:35:38.000Z</updated>
    <content type="html"><![CDATA[<h2 id="下载Redis">下载Redis</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~/ProgramFiles</div><div class="line">curl -O http:<span class="comment">//download.redis.io/releases/redis-2.8.13.tar.gz</span></div></pre></td></tr></table></figure>

<h2 id="解压、编译">解压、编译</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 解压</span></div><div class="line">tar -xzf redis-<span class="number">2.8</span>.<span class="number">13</span></div><div class="line"><span class="comment"># 重命名</span></div><div class="line">mv redis-<span class="number">2.8</span>.<span class="number">13</span> redis</div><div class="line"><span class="built_in">cd</span> redis</div><div class="line"><span class="built_in">sudo</span> make</div><div class="line"><span class="comment"># 测试</span></div><div class="line"><span class="built_in">sudo</span> make test</div><div class="line"><span class="built_in">sudo</span> make install</div></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="自定义Redis配置">自定义Redis配置</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">vim</span> ~/ProgramFiles/redis/redis.<span class="keyword">conf</span></div><div class="line"># 通过查找修改相应配置项</div><div class="line">daemonize yes</div><div class="line">pidfile /Users/用户名/ProgramFiles/redis/redis.pid</div><div class="line">port <span class="number">6379</span></div><div class="line">timeout <span class="number">300</span></div><div class="line">loglevel <span class="keyword">debug</span></div><div class="line">logfile /Users/用户名/ProgramFiles/redis/<span class="built_in">log</span>-redis.<span class="built_in">log</span></div><div class="line">databases <span class="number">8</span></div><div class="line">save <span class="number">900</span> <span class="number">1</span></div><div class="line">save <span class="number">300</span> <span class="number">10</span></div><div class="line">save <span class="number">60</span> <span class="number">10000</span></div><div class="line">rdbcompression yes</div><div class="line">dbfilename dump.rdb</div><div class="line">dir /<span class="keyword">opt</span>/redis/</div><div class="line">appendonly <span class="keyword">no</span></div><div class="line">appendfsync everysec</div></pre></td></tr></table></figure>

<h2 id="改变Redis_Server、Client脚本位置">改变Redis Server、Client脚本位置</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 服务器端</span></div><div class="line">mv <span class="regexp">/Users/</span>用户名<span class="regexp">/ProgramFiles/redis/src/redis-server /Users/</span>用户名/ProgramFiles/redis/redis-server</div><div class="line"><span class="comment"># 客户端</span></div><div class="line">mv <span class="regexp">/Users/</span>用户名<span class="regexp">/ProgramFiles/redis/src/redis-cli /Users/</span>用户名/ProgramFiles/redis/redis-cli</div></pre></td></tr></table></figure>

<h2 id="启动Redis">启动Redis</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo <span class="regexp">/Users/</span>用户名<span class="regexp">/ProgramFiles/</span>redis<span class="regexp">/redis-server /</span>Users<span class="regexp">/用户名/</span>ProgramFiles<span class="regexp">/redis/</span>redis.conf</div><div class="line"></div><div class="line">注：提示`log-redis.log`、`redis.pid`没有找到，在redis目录下创建该文件可解决此问题</div></pre></td></tr></table></figure>

<h2 id="测试Redis">测试Redis</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 连接到Redis Server</span></div><div class="line"><span class="preprocessor"># 方法一</span></div><div class="line">/Users/用户名/ProgramFiles/redis/redis-cli </div><div class="line"><span class="preprocessor"># 方法二</span></div><div class="line">cd /Users/用户名/ProgramFiles/redis</div><div class="line">./redis-cli</div><div class="line"><span class="preprocessor"># 向Redis中添加数据</span></div><div class="line"><span class="keyword">set</span> key HelloWorld</div><div class="line"><span class="keyword">get</span> key</div></pre></td></tr></table></figure>

<h2 id="停止Redis服务">停止Redis服务</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 查找进程id</span></div><div class="line"><span class="preprocessor"># 方法一</span></div><div class="line">ps -ef|grep redis</div><div class="line"><span class="preprocessor"># 方法二</span></div><div class="line">cat /Users/用户名/ProgramFiles/redis/redis.pid</div><div class="line"><span class="preprocessor"># 结束进程</span></div><div class="line">kill 进程id</div></pre></td></tr></table></figure>

<h2 id="查看日志">查看日志</h2>
<p>可以在操作的过程中观察日志的输出</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tail -<span class="keyword">f</span> /Users/用户名/ProgramFiles/redis/<span class="built_in">log</span>-redis.<span class="built_in">log</span></div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h2 id="下载Redis">下载Redis</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~/ProgramFiles</div><div class="line">curl -O http:<span class="comment">//download.redis.io/releases/redis-2.8.13.tar.gz</span></div></pre></td></tr></table></figure>

<h2 id="解压、编译">解压、编译</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 解压</span></div><div class="line">tar -xzf redis-<span class="number">2.8</span>.<span class="number">13</span></div><div class="line"><span class="comment"># 重命名</span></div><div class="line">mv redis-<span class="number">2.8</span>.<span class="number">13</span> redis</div><div class="line"><span class="built_in">cd</span> redis</div><div class="line"><span class="built_in">sudo</span> make</div><div class="line"><span class="comment"># 测试</span></div><div class="line"><span class="built_in">sudo</span> make test</div><div class="line"><span class="built_in">sudo</span> make install</div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
      <category term="Mac" scheme="http://arccode.net/tags/Mac/"/>
    
      <category term="Redis" scheme="http://arccode.net/tags/Redis/"/>
    
      <category term="NoSQL(缓存)" scheme="http://arccode.net/categories/NoSQL-%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac终端乱码]]></title>
    <link href="http://arccode.net/2014/07/23/Mac%E7%BB%88%E7%AB%AF%E4%B9%B1%E7%A0%81/"/>
    <id>http://arccode.net/2014/07/23/Mac终端乱码/</id>
    <published>2014-07-23T14:46:48.000Z</published>
    <updated>2015-02-25T15:36:15.000Z</updated>
    <content type="html"><![CDATA[<p>Android的开发环境配置完毕后，回忆了下以前开发Android的流程</p>
<ol>
<li>新建Hello World项目</li>
<li>使用Eclipse运行项目，自动启动模拟器，一切正常</li>
</ol>
<p>之后想把apk包导出到本地</p>
<ol>
<li>在终端创建keystore</li>
<li>利用Android Tool导出apk</li>
</ol>
<a id="more"></a>


<p>使用命令<code>keytool -genkey -alias android.keystore -keyalg RSA -validity 100000 -keystore android.keystore</code>生成keystore时终端出现乱码</p>
<h3 id="乱码原因">乱码原因</h3>
<p>经过思考，应该是jdk<code>keytool</code>指令编码与系统编码不一致，点击<code>终端</code>—&gt;<code>偏好设置</code>—&gt;<code>设置</code>，可以看见“字符编码”为<code>Unicode(UTF-8)</code>,将该设置改为GB2312，重启终端，输入<code>keytool</code>中文显示正常，之后输入构建keystore的指令，按照提示便可以正常生成keystore</p>
<p>注：该设置在某些使用UTF-8的指令会产生乱码，注意根据情况进行配置，可以配置描述文件进行快速切换</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Android的开发环境配置完毕后，回忆了下以前开发Android的流程</p>
<ol>
<li>新建Hello World项目</li>
<li>使用Eclipse运行项目，自动启动模拟器，一切正常</li>
</ol>
<p>之后想把apk包导出到本地</p>
<ol>
<li>在终端创建keystore</li>
<li>利用Android Tool导出apk</li>
</ol>
]]>
    
    </summary>
    
      <category term="Mac" scheme="http://arccode.net/tags/Mac/"/>
    
      <category term="Terminal" scheme="http://arccode.net/tags/Terminal/"/>
    
      <category term="工具" scheme="http://arccode.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac安装Android开发环境]]></title>
    <link href="http://arccode.net/2014/07/23/Mac%E5%AE%89%E8%A3%85Android%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://arccode.net/2014/07/23/Mac安装Android开发环境/</id>
    <published>2014-07-23T13:24:10.000Z</published>
    <updated>2015-02-25T15:49:38.000Z</updated>
    <content type="html"><![CDATA[<h2 id="准备">准备</h2>
<ol>
<li>安装JDK</li>
<li>下载<a href="http://www.eclipse.org/downloads/" target="_blank" rel="external">Eclipse Standard 4.4</a>(<a href="http://mirrors.hustunique.com/eclipse/technology/epp/downloads/release/luna/R/eclipse-java-luna-R-macosx-cocoa-x86_64.tar.gz" target="_blank" rel="external">直接下载</a>),将压缩包解压到文件目录<code>path/to/eclipse</code></li>
<li>下载<a href="https://developer.android.com/sdk/index.html" target="_blank" rel="external">Android SDK Tools</a>(<a href="http://dl.google.com/android/android-sdk_r23.0.2-macosx.zip" target="_blank" rel="external">直接下载</a>),将压缩包解压到文件目录<code>path/to/android-sdk-macosx</code></li>
</ol>
<a id="more"></a>


<h2 id="使用SDK_Tools安装Android_SDK">使用SDK Tools安装Android SDK</h2>
<ol>
<li>将<code>android-sdk-macosx</code>目录下的<code>tools</code>目录添加到环境变量中，方便命令行调用Android指令</li>
<li>在命令行中输入命令<code>android</code>，显示    Android SDK Manager图形管理工具，根据需要选择要下载的tool和sdk<br><img src="/images/android_sdk_manager.png" alt=""></li>
</ol>
<h2 id="在Eclipse中安装ADT插件">在Eclipse中安装ADT插件</h2>
<ol>
<li>点击<code>Help</code>—&gt;    <code>Install New Software...</code>—&gt;<code>add</code>，根据提示安装完毕<br><img src="/images/adt.png" alt=""></li>
<li>在Eclipse中配置Android<br><img src="/images/eclipse_adt_deploy.png" alt=""></li>
</ol>
<h2 id="测试">测试</h2>
<p><img src="/images/eclipse_adt_icon.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="准备">准备</h2>
<ol>
<li>安装JDK</li>
<li>下载<a href="http://www.eclipse.org/downloads/" target="_blank" rel="external">Eclipse Standard 4.4</a>(<a href="http://mirrors.hustunique.com/eclipse/technology/epp/downloads/release/luna/R/eclipse-java-luna-R-macosx-cocoa-x86_64.tar.gz" target="_blank" rel="external">直接下载</a>),将压缩包解压到文件目录<code>path/to/eclipse</code></li>
<li>下载<a href="https://developer.android.com/sdk/index.html" target="_blank" rel="external">Android SDK Tools</a>(<a href="http://dl.google.com/android/android-sdk_r23.0.2-macosx.zip" target="_blank" rel="external">直接下载</a>),将压缩包解压到文件目录<code>path/to/android-sdk-macosx</code></li>
</ol>
]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="Android" scheme="http://arccode.net/tags/Android/"/>
    
      <category term="Eclipse" scheme="http://arccode.net/tags/Eclipse/"/>
    
      <category term="工具" scheme="http://arccode.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Svn基本使用]]></title>
    <link href="http://arccode.net/2014/07/22/Svn%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://arccode.net/2014/07/22/Svn基本使用/</id>
    <published>2014-07-22T03:24:19.000Z</published>
    <updated>2014-12-26T10:29:44.000Z</updated>
    <content type="html"><![CDATA[<h2 id="基本使用">基本使用</h2>
<h3 id="图标说明">图标说明</h3>
<ul>
<li>灰色向右箭头:本地修改过 </li>
<li>蓝色向左箭头:SVN上修改过 </li>
<li>灰色向右且中间有个加号的箭头:本地比SVN上多出的文件 </li>
<li>蓝色向左且中间有个加号的箭头:SVN上比本地多出的文件 </li>
<li>灰色向右且中间有个减号的箭头:本地删除了,而SVN上未删除的文件 </li>
<li>蓝色向左且中间有个减号的箭头:SVN上删除了,而本地未删除的文件 </li>
<li>红色双向箭头:SVN上修改过,本地也修改过的文件 </li>
</ul>
<a id="more"></a>


<h3 id="与代码库断开连接">与代码库断开连接</h3>
<p>可以与代码库断开，具体操作 右击|小组|断开连接…，在操作过程中可以删除svn相关管理文件，也可保留。</p>
<h3 id="导入项目">导入项目</h3>
<p>可以从代码库上把工程导到本地，个体操作 文件|导入…|SVN|从 SVN 检出项目。注：在此操作过程中有一个“选择检出的方式”选项，有两种，第一种是“做为新项目检出，并使用新建项目向导进行配置（仅当资源库中不存在.project工程文件时才可用，意思是如果代码库中有了这个工程文件，那么它就认为这是一个信息完整的工程，在导入的过程中就不需要再创建工程——选这选那的，因为.project工程文件中已包含了这一些列的信息，所以只有在代码库中不存在.project工程文件时才可选择）”；第二种是“做为工作空间中的项目检出”，这一选项不管代码库中是否有.project文件都是可以选择的，如果代码库中没有.project文件时，选择此种方式，会创建一个简单的工程，那不是Java工程，或其他代码工程，这种工程无不进行相应手工设置是不能进行相应开发的，所以在代码库上无.project工程文件导入时，最好选择前一选项，根据新建项目向导来进行相应设置并自动生成.project工程文件。 </p>
<h3 id="添加文件或目录">添加文件或目录</h3>
<p>如果将文件添加到项目中，它不会自动成为版本控制的一部分 —— 您需要明确将其添加到特定的存储库中。右击新文件，然后选择 Team &gt; Add to Version Control。就是这样！下一次将此项目中的变更提交给存储库时，新文件也会检入。 </p>
<h3 id="忽略文件">忽略文件</h3>
<p>如果项目生成文件，或者包括您不想检入的 Subversion 存储库文件，则可以通知 Subclipse 忽略它们。右击您要在版本控制中排除的文件或目录，然后选择 Team &gt; Add to svn:ignore 即可显示Add to svn:ignore 对话框。 </p>
<h3 id="排除class文件">排除class文件</h3>
<p>不要把class目录上传到服务器上，起初我没有删掉它，更改提交没有问题，但在更新时总是报错：……Working copy not locked; this is probably a bug, please report svn:……，提示就是class目录下的.svn有毛病。原因可能是在Eclipse编译时，将src目录下的svn配置一起编译到了class文件中，并且在编译时先会删除class中的内容，再编译，这就导致了本地配置与配置库上不一致。需要注意的是，请不要将动态生成的目录添加到SVN，否则其他人Check out的之后，再Update容易出错，例如class目录，不需要提交上去 </p>
<h3 id="svn：need-lock">svn：need-lock</h3>
<p>可以用来在文件（例如，对二进制文件非常有用）上强加排斥锁。一个定义了svn:need-lock属性的文件一次只能被一个人修改。当该文件被检出时，它是只读的。如果你想修改该文件，你需要首先使用”Team&gt;Lock”菜单选项。之后，使用”Team&gt; Unlock”释放该文件，或仅提交你的变化，也会释放锁，但别人的文件还是只读的，只有别人在获取了锁之后，再能修改该文件。其实该属性以一种强迫的属形势让用户在修改前一定要选获取锁，再能修改该文件，这样就不需要等到提交时再发现早已被别人锁住了。 </p>
<h3 id="Tag和Branch">Tag和Branch</h3>
<p>在Subversion中，很容易创建新的tag和branch。你可以使用tag来标识一个特定的版本（使用一种可读的名字，例如”Release 1.0”）；而一个branch用于新的开发工作而不影响主源码基(称作trunk)。在一个branch上的开发仍会继续进行，直到开发者已经为把变化集成回主trunk作好准备。<br>在Subversion中，branch和tag都是通过制作给定修订的一个虚拟副本（以另一个名字和/或另一个目录）创建的。在常规情况下，branch存储在branches目录下，tag位于tags目录下，尽管在实践中为了满足你的工程你可以使用自己的任何定制。<br>从Eclipse中，”Team&gt;Branch/Tag”菜单能够使你创建branch和tag。其中，Browse按钮提供了一种方便的方法来查看有哪些branch和tag存在于仓库中。<br>当你使用”Team&gt;Switch”创建成功一个新的branch或tag时，你可以非常容易地在branches之间进行切换。无论何时你切换到一个不同的branch(或返回到trunk)，Subversion将仅更新文件（它需要保持你的当前工作的副本与目的branch之间的同步）。 </p>
<h2 id="协同开发中的规范">协同开发中的规范</h2>
<h3 id="先更新，再提交">先更新，再提交</h3>
<p>如果别人和自己更改的是同一个文件，那么update时会自动进行合并，但如果修改的是同一行，那么合并时会产生冲突。<br>更新时注意所更新文件的列表，如果提交过程中产生了更新，则也是需要重新编译并且完成自己的一些必要测试，再进行提交。 </p>
<h3 id="多提交">多提交</h3>
<p>每次提交以几小时为单位。在开发功能模块的时候，可以每完成一个小细节功能的测试，就提交一次，在修改bug的时候，每修改掉一个bug并且确认修改了这个bug，也就提交一次。 </p>
<h3 id="不要提交不能通过编译的代码">不要提交不能通过编译的代码</h3>
<p>代码在提交之前，首先要确认自己能够在本地编译。如果在代码中使用了第三方类库，要考虑到项目组成员中有些成员可能没有安装相应的第三方类库。项目经理在准备项目工作区域的时候，需要考虑到这样的情况，确保开发小组成员在签出代码之后能够在统一的环境中进行编译。 </p>
<h3 id="每次提交必须书写明晰的注释">每次提交必须书写明晰的注释</h3>
<p>明晰的标注要能够概要的描述所提交文件的信息，让项目组其他成员在看到标注后不用详细看代码就能了解你所做的修改。 </p>
<h3 id="提交时注意不要提交本地生成的文件">提交时注意不要提交本地生成的文件</h3>
<p>例如eclipse中的.classpath文件，Windows生成的缩略图Thumbs.db，项目编译生成的临时文件.obj, .class等等。如果项目中没有进行这方面的配置来强行禁止提交这样的文件，请自觉不要提交这样的文件。提交了这样的文件后，别人在更新后就可能与本地的环境冲突从而影响大家的工作。 </p>
<h3 id="不要提交自己不明白的代码">不要提交自己不明白的代码</h3>
<p>代码在提交入SVN之后，你的代码将被项目成员所分享。如果提交了你不明白的代码，你看不懂，别人也看不懂，如果在以后出现了问题将会成为项目质量的隐患。因此在引入任何第三方代码之前，确保你对这个代码有一个很清晰的了解。 </p>
<h3 id="慎用锁定功能">慎用锁定功能</h3>
<p>在项目中要慎用锁定的功能，在你锁定了一个文件之后别人就无法继续修改提交该文件，虽然可以减少冲突的发生率，但是可能会影响项目组中其他人员的工作。平时只有在编辑那些无法合并的文件（例如图片文件，flash文件等）时，才适当的采用锁定操作。 </p>
<h2 id="声明">声明</h2>
<p>该文章转自<a href="http://meng702.iteye.com/blog/780708" target="_blank" rel="external">Iteye—svn的基本使用</a></p>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://meng702.iteye.com/blog/780708" target="_blank" rel="external">svn的基本使用</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="基本使用">基本使用</h2>
<h3 id="图标说明">图标说明</h3>
<ul>
<li>灰色向右箭头:本地修改过 </li>
<li>蓝色向左箭头:SVN上修改过 </li>
<li>灰色向右且中间有个加号的箭头:本地比SVN上多出的文件 </li>
<li>蓝色向左且中间有个加号的箭头:SVN上比本地多出的文件 </li>
<li>灰色向右且中间有个减号的箭头:本地删除了,而SVN上未删除的文件 </li>
<li>蓝色向左且中间有个减号的箭头:SVN上删除了,而本地未删除的文件 </li>
<li>红色双向箭头:SVN上修改过,本地也修改过的文件 </li>
</ul>
]]>
    
    </summary>
    
      <category term="Svn" scheme="http://arccode.net/tags/Svn/"/>
    
      <category term="工具" scheme="http://arccode.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac下搭建Hadoop环境]]></title>
    <link href="http://arccode.net/2014/07/13/Mac%E4%B8%8B%E6%90%AD%E5%BB%BAHadoop%E7%8E%AF%E5%A2%83/"/>
    <id>http://arccode.net/2014/07/13/Mac下搭建Hadoop环境/</id>
    <published>2014-07-13T15:47:59.000Z</published>
    <updated>2015-02-25T15:47:05.000Z</updated>
    <content type="html"><![CDATA[<h2 id="安装JDK">安装JDK</h2>
<p>安装JDK，安装成功后在终端中输入<code>java -version</code>，显示如下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">java <span class="keyword">version</span> <span class="string">"1.7.0_51"</span></div><div class="line">Java(TM) SE Runtime Environment (build <span class="number">1.7</span>.<span class="number">0</span>_51-b13)</div><div class="line">Java HotSpot(TM) <span class="number">64</span>-Bit Server VM (build <span class="number">24.51</span>-b03, mixed <span class="built_in">mode</span>)</div></pre></td></tr></table></figure>

<h2 id="安装Hadoop">安装Hadoop</h2>
<p>下载<a href="http://hadoop.apache.org/releases.html#Download" target="_blank" rel="external">Hadoop</a>,将该文件解压至<code>/usr/local</code>目录下</p>
<a id="more"></a>

<h2 id="配置系统环境变量">配置系统环境变量</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.<span class="number">7.0</span>_51.jdk/Contents/Home</div><div class="line"><span class="keyword">export</span> HADOOP_HOME=/usr/local/hadoop-<span class="number">2.4</span>.<span class="number">1</span></div><div class="line"><span class="keyword">export</span> HADOOP_PREFIX=<span class="variable">${HADOOP_HOME}</span></div><div class="line"><span class="keyword">export</span> HADOOP_COMMON_HOME=<span class="variable">${HADOOP_PREFIX}</span></div><div class="line"><span class="keyword">export</span> HADOOP_HDFS_HOME=<span class="variable">${HADOOP_PREFIX}</span></div><div class="line"><span class="keyword">export</span> HADOOP_MAPRED_HOME=<span class="variable">${HADOOP_PREFIX}</span></div><div class="line"><span class="keyword">export</span> HADOOP_YARN_HOME=<span class="variable">${HADOOP_PREFIX}</span></div><div class="line"><span class="keyword">export</span> HADOOP_CONF_DIR=<span class="string">"<span class="variable">$HADOOP_HOME</span>/etc/hadoop/"</span></div><div class="line"><span class="keyword">export</span> YARN_CONF_DIR=<span class="variable">${HADOOP_CONF_DIR}</span></div><div class="line"><span class="keyword">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$HADOOP_PREFIX</span>/bin:<span class="variable">$HADOOP_PREFIX</span>/sbin</div></pre></td></tr></table></figure>

<h2 id="配置ssh">配置ssh</h2>
<h3 id="测试ssh是否可以登录">测试ssh是否可以登录</h3>
<p>输入<code>ssh localhost</code>显示</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">ssh</span>: <span class="string">connect to host localhost port 22: Connection refused</span></div></pre></td></tr></table></figure>

<p>表示ssh未配置，需要进行配置；</p>
<p>“系统偏好设置”—&gt;”共享”—&gt;”远程登录”；</p>
<p>再次输入<code>ssh localhost</code>，输入密码后可以看到连接成功的信息</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">Last</span> <span class="tag">login</span>: <span class="tag">Mon</span> <span class="tag">Jul</span> 14 23<span class="pseudo">:41</span><span class="pseudo">:32</span> 2014 <span class="tag">from</span> <span class="tag">localhost</span></div></pre></td></tr></table></figure>

<h3 id="设置ssh免登录">设置ssh免登录</h3>
<ul>
<li>构造秘钥<br><code>ssh-keygen -t dsa -P &#39;&#39; -f ~/.ssh/id_dsa</code><br>-t: 秘钥类型<br>-P: 提供密语<br>-f: 生成的秘钥文件<br>执行指令后，.ssh目录中将出现id_dsa私钥和id_dsa公钥</li>
<li>将公钥追加到授权key中<br><code>cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</code></li>
</ul>
<h2 id="配置Hadoop环境">配置Hadoop环境</h2>
<h3 id="_"> </h3>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://www.cnblogs.com/gamix/archive/2012/12/02/install-hadoop-on-mac-osx-lion.html" target="_blank" rel="external">在Mac上安装Hadoop</a><br><a href="http://www.micmiu.com/bigdata/hadoop/hadoop2x-single-node-setup" target="_blank" rel="external">hadoop 2.2.0 单节点安装和测试</a><br><a href="http://blog.csdn.net/xceman1997/article/details/8046039" target="_blank" rel="external">在Mac OS上配置hadoop伪分布式环境【下】</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="安装JDK">安装JDK</h2>
<p>安装JDK，安装成功后在终端中输入<code>java -version</code>，显示如下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">java <span class="keyword">version</span> <span class="string">"1.7.0_51"</span></div><div class="line">Java(TM) SE Runtime Environment (build <span class="number">1.7</span>.<span class="number">0</span>_51-b13)</div><div class="line">Java HotSpot(TM) <span class="number">64</span>-Bit Server VM (build <span class="number">24.51</span>-b03, mixed <span class="built_in">mode</span>)</div></pre></td></tr></table></figure>

<h2 id="安装Hadoop">安装Hadoop</h2>
<p>下载<a href="http://hadoop.apache.org/releases.html#Download" target="_blank" rel="external">Hadoop</a>,将该文件解压至<code>/usr/local</code>目录下</p>
]]>
    
    </summary>
    
      <category term="Java" scheme="http://arccode.net/tags/Java/"/>
    
      <category term="Mac" scheme="http://arccode.net/tags/Mac/"/>
    
      <category term="Hadoop" scheme="http://arccode.net/tags/Hadoop/"/>
    
      <category term="数据挖掘" scheme="http://arccode.net/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HBase技术介绍]]></title>
    <link href="http://arccode.net/2014/07/13/HBase%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/"/>
    <id>http://arccode.net/2014/07/13/HBase技术介绍/</id>
    <published>2014-07-13T02:53:05.000Z</published>
    <updated>2015-02-25T15:33:51.000Z</updated>
    <content type="html"><![CDATA[<h2 id="HBase简介">HBase简介</h2>
<p>HBase – Hadoop Database，是一个高可靠性、高性能、面向列、可伸缩的分布式存储系统，利用HBase技术可在廉价PC Server上搭建起大规模结构化存储集群。</p>
<p>HBase是Google Bigtable的开源实现，类似Google Bigtable利用GFS作为其文件存储系统，HBase利用Hadoop HDFS作为其文件存储系统；Google运行MapReduce来处理Bigtable中的海量数据，HBase同样利用Hadoop MapReduce来处理HBase中的海量数据；Google Bigtable利用 Chubby作为<br>协同服务，HBase利用Zookeeper作为对应。</p>
<p><img src="/images/hadoop_ecosystem.jpg" alt=""></p>
<p>上图描述了Hadoop EcoSystem中的各层系统，其中HBase位于结构化存储层，Hadoop HDFS为HBase提供了高可靠性的底层存储支持，Hadoop MapReduce为HBase提供了高性能的计算能力，Zookeeper为HBase提供了稳定服务和failover机制。</p>
<p>此外，Pig和Hive还为HBase提供了高层语言支持，使得在HBase上进行数据统计处理变的非常简单。 Sqoop则为HBase提供了方便的RDBMS数据导入功能，使得传统数据库数据向HBase中迁移变的非常方便。</p>
<a id="more"></a>

<h2 id="HBase访问接口">HBase访问接口</h2>
<ol>
<li><p>Native Java API，最常规和高效的访问方式，适合Hadoop MapReduce Job并行批处理HBase表数据;</p>
</li>
<li><p>HBase Shell，HBase的命令行工具，最简单的接口，适合HBase管理使用;</p>
</li>
<li><p>Thrift Gateway，利用Thrift序列化技术，支持C++，PHP，Python等多种语言，适合其他异构系统在线访问HBase表数据;</p>
</li>
<li><p>REST Gateway，支持REST 风格的Http API访问HBase, 解除了语言限制;</p>
</li>
<li><p>Pig，可以使用Pig Latin流式编程语言来操作HBase中的数据，和Hive类似，本质最终也是编译成MapReduce Job来处理HBase表数据，适合做数据统计;</p>
</li>
<li><p>Hive，当前Hive的Release版本尚没有加入对HBase的支持，但在下一个版本Hive 0.7.0中将会支持HBase，可以使用类似SQL语言来访问HBase;</p>
</li>
</ol>
<h2 id="HBase数据模型">HBase数据模型</h2>
<h3 id="Table_&amp;_Column_Family">Table &amp; Column Family</h3>
<p><img src="/images/table_column_family.png" alt=""></p>
<p>Ø Row Key: 行键，Table的主键，Table中的记录按照Row Key排序</p>
<p>Ø Timestamp: 时间戳，每次数据操作对应的时间戳，可以看作是数据的version number</p>
<p>Ø Column Family：列簇，Table在水平方向有一个或者多个Column Family组成，一个Column Family中可以由任意多个Column组成，即Column Family支持动态扩展，无需预先定义Column的数量以及类型，所有Column均以二进制格式存储，用户需要自行进行类型转换。</p>
<h3 id="Table_&amp;_Region">Table &amp; Region</h3>
<p>当Table随着记录数不断增加而变大后，会逐渐分裂成多份splits，成为regions，一个region由[startkey,endkey)表示，不同的region会被Master分配给相应的RegionServer进行管理：</p>
<p><img src="/images/table_region.jpg" alt=""></p>
<h3 id="-ROOT-_&amp;&amp;_-META-_Table">-ROOT- &amp;&amp; .META. Table</h3>
<p>HBase中有两张特殊的Table，-ROOT-和.META.</p>
<p>Ø .META.：记录了用户表的Region信息，.META.可以有多个regoin</p>
<p>Ø -ROOT-：记录了.META.表的Region信息，-ROOT-只有一个region</p>
<p>Ø Zookeeper中记录了-ROOT-表的location</p>
<p><img src="/images/root_meta_table.jpg" alt=""></p>
<p>Client访问用户数据之前需要首先访问zookeeper，然后访问-ROOT-表，接着访问.META.表，最后才能找到用户数据的位置去访问，中间需要多次网络操作，不过client端会做cache缓存。</p>
<h2 id="MapReduce_on_HBase">MapReduce on HBase</h2>
<p>在HBase系统上运行批处理运算，最方便和实用的模型依然是MapReduce，如下图：</p>
<p><img src="/images/map_reduce.jpg" alt=""></p>
<p>HBase Table和Region的关系，比较类似HDFS File和Block的关系，HBase提供了配套的TableInputFormat和TableOutputFormat API，可以方便的将HBase Table作为Hadoop MapReduce的Source和Sink，对于MapReduce Job应用开发人员来说，基本不需要关注HBase系统自身的细节。</p>
<h2 id="HBase系统架构">HBase系统架构</h2>
<p><img src="/images/hbase_architecture.jpg" alt=""></p>
<h3 id="Client">Client</h3>
<p>HBase Client使用HBase的RPC机制与HMaster和HRegionServer进行通信，对于管理类操作，Client与HMaster进行RPC；对于数据读写类操作，Client与HRegionServer进行RPC</p>
<h3 id="Zookeeper">Zookeeper</h3>
<p>Zookeeper Quorum中除了存储了-ROOT-表的地址和HMaster的地址，HRegionServer也会把自己以Ephemeral方式注册到Zookeeper中，使得HMaster可以随时感知到各个HRegionServer的健康状态。此外，Zookeeper也避免了HMaster的单点问题，见下文描述</p>
<h3 id="HMaster">HMaster</h3>
<p>HMaster没有单点问题，HBase中可以启动多个HMaster，通过Zookeeper的Master Election机制保证总有一个Master运行，HMaster在功能上主要负责Table和Region的管理工作：</p>
<ol>
<li><p>管理用户对Table的增、删、改、查操作</p>
</li>
<li><p>管理HRegionServer的负载均衡，调整Region分布</p>
</li>
<li><p>在Region Split后，负责新Region的分配</p>
</li>
<li><p>在HRegionServer停机后，负责失效HRegionServer 上的Regions迁移</p>
</li>
</ol>
<h3 id="HRegionServer">HRegionServer</h3>
<p>HRegionServer主要负责响应用户I/O请求，向HDFS文件系统中读写数据，是HBase中最核心的模块。</p>
<p><img src="/images/hregion_server.jpg" alt=""></p>
<p>HRegionServer内部管理了一系列HRegion对象，每个HRegion对应了Table中的一个Region，HRegion中由多个HStore组成。每个HStore对应了Table中的一个Column Family的存储，可以看出每个Column Family其实就是一个集中的存储单元，因此最好将具备共同IO特性的column放在一个Column Family中，这样最高效。</p>
<p>HStore存储是HBase存储的核心了，其中由两部分组成，一部分是MemStore，一部分是StoreFiles。MemStore是Sorted Memory Buffer，用户写入的数据首先会放入MemStore，当MemStore满了以后会Flush成一个StoreFile（底层实现是HFile），当StoreFile文件数量增长到一定阈值，会触发Compact合并操作，将多个StoreFiles合并成一个StoreFile，合并过程中会进行版本合并和数据删除，因此可以看出HBase其实只有增加数据，所有的更新和删除操作都是在后续的compact过程中进行的，这使得用户的写操作只要进入内存中就可以立即返回，保证了HBase I/O的高性能。当StoreFiles Compact后，会逐步形成越来越大的StoreFile，当单个StoreFile大小超过一定阈值后，会触发Split操作，同时把当前Region Split成2个Region，父Region会下线，新Split出的2个孩子Region会被HMaster分配到相应的HRegionServer上，使得原先1个Region的压力得以分流到2个Region上。下图描述了Compaction和Split的过程：</p>
<p><img src="/images/compaction_split.gif" alt=""></p>
<p>在理解了上述HStore的基本原理后，还必须了解一下HLog的功能，因为上述的HStore在系统正常工作的前提下是没有问题的，但是在分布式系统环境中，无法避免系统出错或者宕机，因此一旦HRegionServer意外退出，MemStore中的内存数据将会丢失，这就需要引入HLog了。每个HRegionServer中都有一个HLog对象，HLog是一个实现Write Ahead Log的类，在每次用户操作写入MemStore的同时，也会写一份数据到HLog文件中（HLog文件格式见后续），HLog文件定期会滚动出新的，并删除旧的文件（已持久化到StoreFile中的数据）。当HRegionServer意外终止后，HMaster会通过Zookeeper感知到，HMaster首先会处理遗留的 HLog文件，将其中不同Region的Log数据进行拆分，分别放到相应region的目录下，然后再将失效的region重新分配，领取 到这些region的HRegionServer在Load Region的过程中，会发现有历史HLog需要处理，因此会Replay HLog中的数据到MemStore中，然后flush到StoreFiles，完成数据恢复。</p>
<h3 id="HBase存储格式">HBase存储格式</h3>
<p>HBase中的所有数据文件都存储在Hadoop HDFS文件系统上，主要包括上述提出的两种文件类型：</p>
<ol>
<li><p>HFile， HBase中KeyValue数据的存储格式，HFile是Hadoop的二进制格式文件，实际上StoreFile就是对HFile做了轻量级包装，即StoreFile底层就是HFile;</p>
</li>
<li><p>HLog File，HBase中WAL（Write Ahead Log） 的存储格式，物理上是Hadoop的Sequence File;</p>
</li>
</ol>
<h4 id="HFile">HFile</h4>
<p>下图是HFile的存储格式：</p>
<p><img src="/images/hfile.jpg" alt=""></p>
<p>首先HFile文件是不定长的，长度固定的只有其中的两块：Trailer和FileInfo。正如图中所示的，Trailer中有指针指向其他数据块的起始点。File Info中记录了文件的一些Meta信息，例如：AVG_KEY_LEN, AVG_VALUE_LEN, LAST_KEY, COMPARATOR, MAX_SEQ_ID_KEY等。Data Index和Meta Index块记录了每个Data块和Meta块的起始点。</p>
<p>Data Block是HBase I/O的基本单元，为了提高效率，HRegionServer中有基于LRU的Block Cache机制。每个Data块的大小可以在创建一个Table的时候通过参数指定，大号的Block有利于顺序Scan，小号Block利于随机查询。每个Data块除了开头的Magic以外就是一个个KeyValue对拼接而成, Magic内容就是一些随机数字，目的是防止数据损坏。后面会详细介绍每个KeyValue对的内部构造。</p>
<p>HFile里面的每个KeyValue对就是一个简单的byte数组。但是这个byte数组里面包含了很多项，并且有固定的结构。我们来看看里面的具体结构：</p>
<p><img src="/images/key_value.jpg" alt=""></p>
<p>开始是两个固定长度的数值，分别表示Key的长度和Value的长度。紧接着是Key，开始是固定长度的数值，表示RowKey的长度，紧接着是RowKey，然后是固定长度的数值，表示Family的长度，然后是Family，接着是Qualifier，然后是两个固定长度的数值，表示Time Stamp和Key Type（Put/Delete）。Value部分没有这么复杂的结构，就是纯粹的二进制数据了。</p>
<h4 id="HLogFile">HLogFile</h4>
<p><img src="/images/hlog_file.jpg" alt=""></p>
<p>上图中示意了HLog文件的结构，其实HLog文件就是一个普通的Hadoop Sequence File，Sequence File 的Key是HLogKey对象，HLogKey中记录了写入数据的归属信息，除了table和region名字外，同时还包括 sequence number和timestamp，timestamp是“写入时间”，sequence number的起始值为0，或者是最近一次存入文件系统中sequence number。</p>
<p>HLog Sequece File的Value是HBase的KeyValue对象，即对应HFile中的KeyValue，可参见上文描述。</p>
<h2 id="结束">结束</h2>
<p>本文对HBase技术在功能和设计上进行了大致的介绍，由于篇幅有限，本文没有过多深入地描述HBase的一些细节技术。目前一淘的存储系统就是基于HBase技术搭建的，后续将介绍“一淘分布式存储系统”，通过实际案例来更多的介绍HBase应用。</p>
<h2 id="声明">声明</h2>
<p>该文章转载自<a href="http://www.searchtb.com/" target="_blank" rel="external">搜索技术博客－淘宝</a>-<a href="http://www.searchtb.com/2011/01/understanding-hbase.html" target="_blank" rel="external">HBase技术介绍</a></p>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://www.searchtb.com/2011/01/understanding-hbase.html" target="_blank" rel="external">HBase技术介绍</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="HBase简介">HBase简介</h2>
<p>HBase – Hadoop Database，是一个高可靠性、高性能、面向列、可伸缩的分布式存储系统，利用HBase技术可在廉价PC Server上搭建起大规模结构化存储集群。</p>
<p>HBase是Google Bigtable的开源实现，类似Google Bigtable利用GFS作为其文件存储系统，HBase利用Hadoop HDFS作为其文件存储系统；Google运行MapReduce来处理Bigtable中的海量数据，HBase同样利用Hadoop MapReduce来处理HBase中的海量数据；Google Bigtable利用 Chubby作为<br>协同服务，HBase利用Zookeeper作为对应。</p>
<p><img src="/images/hadoop_ecosystem.jpg" alt=""></p>
<p>上图描述了Hadoop EcoSystem中的各层系统，其中HBase位于结构化存储层，Hadoop HDFS为HBase提供了高可靠性的底层存储支持，Hadoop MapReduce为HBase提供了高性能的计算能力，Zookeeper为HBase提供了稳定服务和failover机制。</p>
<p>此外，Pig和Hive还为HBase提供了高层语言支持，使得在HBase上进行数据统计处理变的非常简单。 Sqoop则为HBase提供了方便的RDBMS数据导入功能，使得传统数据库数据向HBase中迁移变的非常方便。</p>
]]>
    
    </summary>
    
      <category term="HBase" scheme="http://arccode.net/tags/HBase/"/>
    
      <category term="数据挖掘" scheme="http://arccode.net/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[云计算的别样解释]]></title>
    <link href="http://arccode.net/2014/07/13/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9A%84%E5%88%AB%E6%A0%B7%E8%A7%A3%E9%87%8A/"/>
    <id>http://arccode.net/2014/07/13/云计算的别样解释/</id>
    <published>2014-07-13T02:11:45.000Z</published>
    <updated>2015-02-25T15:33:46.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/云计算的别样解释.jpeg" alt=""></p>
<p>技术人员怎么也讲不清楚的云计算，咱们的高级总监曾经就是这样和政府领导普及云计算和智慧城市知识的，却都听懂了：</p>
<p>你娶了一个老婆，这叫传统IT架构。</p>
<p>你觉得一个老婆不够，这叫传统企业CIO的困境。</p>
<p>你又娶了一个老婆，这叫双活数据中心。</p>
<p>你在外地又娶了一个小老婆，这叫两地三中心容灾。<br>你娶了很多风格气质各异的小老婆，以至于形成了后宫，这叫私有云。你的后宫就叫计算资源池。</p>
<p>你从后宫里选出懂事有能的管理其他小老婆，这叫私有云管理方案。管事的那个就是HYPERV或VMWARE。</p>
<p>你不娶小老婆，改成包养很多情人，这叫托管云。 你是穷人，没有钱包养任何人也没钱娶小老婆，你选择去洗浴中心解决问题，这叫面向中小企业的公有云服务。 你在享受公有云服务的同时还得交公粮，这叫中小企业的混合IT架构。</p>
<p>你是富人，但也喜欢去高级夜总会，这叫面向大企业用户的公有云服务。</p>
<p>你有钱，同时包养小老婆和情人，还去洗浴中心，这叫混合云。但是在混合云里，最关键的业务还是会谨慎地采用传统IT架构。</p>
<a id="more"></a>

<p>你有钱，包养小老婆，但有一天所有小老婆都来大姨妈，你还得去洗浴中心，这叫CLOUD BURST。</p>
<p>洗浴中心就是云服务提供商。 本地最大的洗浴中心是AWS。 高端那个比如****是18M。 打出商务**的名头的是SALESFORCE。 在**上发帖“我们的技师服务态度超过对面家9倍”的是O记。</p>
<p>不开洗浴中心，但是专门卖水床卖情趣床的是等灯等灯。 不开洗浴中心，但是做陌陌类应用开发运营的是C记。 本地的洗浴中心都是两个有背景的大老板开的，他们是OPENSTACK和CLOUDSTACK。</p>
<p>场子小且只用本地或附近技师的是本土中小云服务商。 如果上头没人罩，本土中小云服务商很难开得长。 开洗浴中心的老板有政府背景，这是城市云。 开洗浴中心的老板有黑社会背景，这是电信云。 洗浴中心要VIP卡才让进，这是行业云。 洗浴中心只面向本小区业主服务，这是园区云。</p>
<p>你的小老婆们和情人们可能因为矛盾而让你的经济问题败露，这叫私有云安全问题。 你去洗浴中心可能染上病，这是公有云安全问题。 由此可见公有云和私有云的安全问题是两种不同性质的问题。 只提供场所，需要你自己去找技师的洗浴中心叫IAAS。 提供场所和技师的洗浴中心叫PAAS。 做到东莞ISO的程度就叫SAAS。 下载AV录像自己打飞机叫VAAS。</p>
<p>一个有很多人分享心得的洗浴中心信息网站，这是开放数据中心联盟。 洗浴中心的行业协会叫CLOUD BUILDER。 下榻一家五星级宾馆，你习惯性地用你用微信陌陌定个位，这叫CLOUD FINDER。 良家妇女下海，这叫传统IT应用的云化。</p>
<p>你去洗浴中心的经验很多，看见门脸就知道洗浴中心提不提供服务，看见新技师就能推测出服务质量，这叫数据分析和挖掘。 你把这些信息和心得有偿分享给其他人，你是大数据服务商。 一 个地方不严打洗浴中心，这是智慧城市。</p>
<h2 id="声明">声明</h2>
<p>该文章转载自<a href="http://www.iteye.com/" target="_blank" rel="external">Iteye</a>-<a href="http://nlslzf.iteye.com/blog/2021465" target="_blank" rel="external">别样解释云计算，太TM天才跨界了</a></p>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://nlslzf.iteye.com/blog/2021465" target="_blank" rel="external">别样解释云计算，太TM天才跨界了</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/云计算的别样解释.jpeg" alt=""></p>
<p>技术人员怎么也讲不清楚的云计算，咱们的高级总监曾经就是这样和政府领导普及云计算和智慧城市知识的，却都听懂了：</p>
<p>你娶了一个老婆，这叫传统IT架构。</p>
<p>你觉得一个老婆不够，这叫传统企业CIO的困境。</p>
<p>你又娶了一个老婆，这叫双活数据中心。</p>
<p>你在外地又娶了一个小老婆，这叫两地三中心容灾。<br>你娶了很多风格气质各异的小老婆，以至于形成了后宫，这叫私有云。你的后宫就叫计算资源池。</p>
<p>你从后宫里选出懂事有能的管理其他小老婆，这叫私有云管理方案。管事的那个就是HYPERV或VMWARE。</p>
<p>你不娶小老婆，改成包养很多情人，这叫托管云。 你是穷人，没有钱包养任何人也没钱娶小老婆，你选择去洗浴中心解决问题，这叫面向中小企业的公有云服务。 你在享受公有云服务的同时还得交公粮，这叫中小企业的混合IT架构。</p>
<p>你是富人，但也喜欢去高级夜总会，这叫面向大企业用户的公有云服务。</p>
<p>你有钱，同时包养小老婆和情人，还去洗浴中心，这叫混合云。但是在混合云里，最关键的业务还是会谨慎地采用传统IT架构。</p>
]]>
    
    </summary>
    
      <category term="名词解释" scheme="http://arccode.net/tags/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/"/>
    
      <category term="云计算" scheme="http://arccode.net/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[大数据]]></title>
    <link href="http://arccode.net/2014/07/13/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    <id>http://arccode.net/2014/07/13/大数据/</id>
    <published>2014-07-13T01:36:36.000Z</published>
    <updated>2015-02-25T15:33:39.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/bigdata.jpg" alt=""></p>
<h2 id="大数据（Big_Data）">大数据（Big Data）</h2>
<p>大数据，官方定义是指那些数据量特别大、数据类别特别复杂的数据集，这种数据集无法用传统的数据库进行存储，管理和处理。大数据的主要特点为数据量大（Volume），数据类别复杂（Variety），数据处理速度快（Velocity）和数据真实性高（Veracity），合起来被称为4V。</p>
<p>大数据中的数据量非常巨大，达到了PB级别。而且这庞大的数据之中，不仅仅包括结构化数据（如数字、符号等数据），还包括非结构化数据（如文本、图像、声音、视频等数据）。这使得大数据的存储，管理和处理很难利用传统的关系型数据库去完成。在大数据之中，有价值的信息往往深藏其中。这就需要对大数据的处理速度要非常快，才能短时间之内就能从大量的复杂数据之中获取到有价值的信息。在大数据的大量复杂的数据之中，通常不仅仅包含真实的数据，一些虚假的数据也混杂其中。这就需要在大数据的处理中将虚假的数据剔除，利用真实的数据来分析得出真实的结果。</p>
<a id="more"></a>

<h2 id="大数据分析（Big_Data_Analysis）">大数据分析（Big Data Analysis）</h2>
<p>大数据，表面上看就是大量复杂的数据，这些数据本身的价值并不高，但是对这些大量复杂的数据进行分析处理后，却能从中提炼出很有价值的信息。对大数据的分析，主要分为五个方面：可视化分析（Analytic Visualization）、数据挖掘算法（Date Mining Algorithms）、预测性分析能力（Predictive Analytic Capabilities）、语义引擎（Semantic Engines）和数据质量管理（Data Quality Management）。</p>
<p>可视化分析是普通消费者常常可以见到的一种大数据分析结果的表现形式，比如说百度制作的“百度地图春节人口迁徙大数据”就是典型的案例之一。可视化分析将大量复杂的数据自动转化成直观形象的图表，使其能够更加容易的被普通消费者所接受和理解。</p>
<p>数据挖掘算法是大数据分析的理论核心，其本质是一组根据算法事先定义好的数学公式，将收集到的数据作为参数变量带入其中，从而能够从大量复杂的数据中提取到有价值的信息。著名的“啤酒和尿布”的故事就是数据挖掘算法的经典案例。沃尔玛通过对啤酒和尿布购买数据的分析，挖掘出以前未知的两者间的联系，并利用这种联系，提升了商品的销量。亚马逊的推荐引擎和谷歌的广告系统都大量使用了数据挖掘算法。</p>
<p>预测性分析能力是大数据分析最重要的应用领域。从大量复杂的数据中挖掘出规律，建立起科学的事件模型，通过将新的数据带入模型，就可以预测未来的事件走向。预测性分析能力常常被应用在金融分析和科学研究领域，用于股票预测或气象预测等。</p>
<p>语义引擎是机器学习的成果之一。过去，计算机对用户输入内容的理解仅仅停留在字符阶段，不能很好的理解输入内容的意思，因此常常不能准确的了解用户的需求。通过对大量复杂的数据进行分析，让计算机从中自我学习，可以使计算机能够尽量精确的了解用户输入内容的意思，从而把握住用户的需求，提供更好的用户体验。苹果的Siri和谷歌的Google Now都采用了语义引擎。</p>
<p>数据质量管理是大数据在企业领域的重要应用。为了保证大数据分析结果的准确性，需要将大数据中不真实的数据剔除掉，保留最准确的数据。这就需要建立有效的数据质量管理系统，分析收集到的大量复杂的数据，挑选出真实有效的数据。</p>
<h2 id="分布式计算（Distributed_Computing）">分布式计算（Distributed Computing）</h2>
<p>对于如何处理大数据，计算机科学界有两大方向：第一个方向是集中式计算，就是通过不断增加处理器的数量来增强单个计算机的计算能力，从而提高处理数据的速度。第二个方向是分布式计算，就是把一组计算机通过网络相互连接组成分散系统，然后将需要处理的大量数据分散成多个部分，交由分散系统内的计算机组同时计算，最后将这些计算结果合并得到最终的结果。尽管分散系统内的单个计算机的计算能力不强，但是由于每个计算机只计算一部分数据，而且是多台计算机同时计算，所以就分散系统而言，处理数据的速度会远高于单个计算机。</p>
<p>过去，分布式计算理论比较复杂，技术实现比较困难，因此在处理大数据方面，集中式计算一直是主流解决方案。IBM的大型机就是集中式计算的典型硬件，很多银行和政府机构都用它处理大数据。不过，对于当时的互联网公司来说，IBM的大型机的价格过于昂贵。因此，互联网公司的把研究方向放在了可以使用在廉价计算机上的分布式计算上。</p>
<h2 id="服务器集群（Server_Cluster）">服务器集群（Server Cluster）</h2>
<p>服务器集群是一种提升服务器整体计算能力的解决方案。它是由互相连接在一起的服务器群所组成的一个并行式或分布式系统。服务器集群中的服务器运行同一个计算任务。因此，从外部看，这群服务器表现为一台虚拟的服务器，对外提供统一的服务。</p>
<p>尽管单台服务器的运算能力有限，但是将成百上千的服务器组成服务器集群后，整个系统就具备了强大的运算能力，可以支持大数据分析的运算负荷。Google，Amazon，阿里巴巴的计算中心里的服务器集群都达到了5000台服务器的规模。</p>
<p>大数据的技术基础：MapReduce、Google File System和BigTable</p>
<p>2003年到2004年间，Google发表了MapReduce、GFS（Google File System）和BigTable三篇技术论文，提出了一套全新的分布式计算理论。</p>
<p>MapReduce是分布式计算框架，GFS（Google File System）是分布式文件系统，BigTable是基于Google File System的数据存储系统，这三大组件组成了Google的分布式计算模型。</p>
<p>Google的分布式计算模型相比于传统的分布式计算模型有三大优势：首先，它简化了传统的分布式计算理论，降低了技术实现的难度，可以进行实际的应用。其次，它可以应用在廉价的计算设备上，只需增加计算设备的数量就可以提升整体的计算能力，应用成本十分低廉。最后，它被Google应用在Google的计算中心，取得了很好的效果，有了实际应用的证明。</p>
<p>后来，各家互联网公司开始利用Google的分布式计算模型搭建自己的分布式计算系统，Google的这三篇论文也就成为了大数据时代的技术核心。</p>
<p>主流的三大分布式计算系统：Hadoop，Spark和Storm</p>
<p>由于Google没有开源Google分布式计算模型的技术实现，所以其他互联网公司只能根据Google三篇技术论文中的相关原理，搭建自己的分布式计算系统。</p>
<p>Yahoo的工程师Doug Cutting和Mike Cafarella在2005年合作开发了分布式计算系统Hadoop。后来，Hadoop被贡献给了Apache基金会，成为了Apache基金会的开源项目。Doug Cutting也成为Apache基金会的主席，主持Hadoop的开发工作。</p>
<p>Hadoop采用MapReduce分布式计算框架，并根据GFS开发了HDFS分布式文件系统，根据BigTable开发了HBase数据存储系统。尽管和Google内部使用的分布式计算系统原理相同，但是Hadoop在运算速度上依然达不到Google论文中的标准。</p>
<p>不过，Hadoop的开源特性使其成为分布式计算系统的事实上的国际标准。Yahoo，Facebook，Amazon以及国内的百度，阿里巴巴等众多互联网公司都以Hadoop为基础搭建自己的分布式计算系统。</p>
<p>Spark也是Apache基金会的开源项目，它由加州大学伯克利分校的实验室开发，是另外一种重要的分布式计算系统。它在Hadoop的基础上进行了一些架构上的改良。Spark与Hadoop最大的不同点在于，Hadoop使用硬盘来存储数据，而Spark使用内存来存储数据，因此Spark可以提供超过Hadoop100倍的运算速度。但是，由于内存断电后会丢失数据，Spark不能用于处理需要长期保存的数据。</p>
<p>Storm是Twitter主推的分布式计算系统，它由BackType团队开发，是Apache基金会的孵化项目。它在Hadoop的基础上提供了实时运算的特性，可以实时的处理大数据流。不同于Hadoop和Spark，Storm不进行数据的收集和存储工作，它直接通过网络实时的接受数据并且实时的处理数据，然后直接通过网络实时的传回结果。</p>
<p>Hadoop，Spark和Storm是目前最重要的三大分布式计算系统，Hadoop常用于离线的复杂的大数据处理，Spark常用于离线的快速的大数据处理，而Storm常用于在线的实时的大数据处理。</p>
<h2 id="声明">声明</h2>
<p>该文章转载自<a href="www.huxiu.com">虎嗅网</a>-<a href="http://www.huxiu.com/article/31457/1.html?f=zaker" target="_blank" rel="external">【专治不明觉厉】之“大数据”</a></p>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://www.huxiu.com/article/31457/1.html?f=zaker" target="_blank" rel="external">【专治不明觉厉】之“大数据”</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/bigdata.jpg" alt=""></p>
<h2 id="大数据（Big_Data）">大数据（Big Data）</h2>
<p>大数据，官方定义是指那些数据量特别大、数据类别特别复杂的数据集，这种数据集无法用传统的数据库进行存储，管理和处理。大数据的主要特点为数据量大（Volume），数据类别复杂（Variety），数据处理速度快（Velocity）和数据真实性高（Veracity），合起来被称为4V。</p>
<p>大数据中的数据量非常巨大，达到了PB级别。而且这庞大的数据之中，不仅仅包括结构化数据（如数字、符号等数据），还包括非结构化数据（如文本、图像、声音、视频等数据）。这使得大数据的存储，管理和处理很难利用传统的关系型数据库去完成。在大数据之中，有价值的信息往往深藏其中。这就需要对大数据的处理速度要非常快，才能短时间之内就能从大量的复杂数据之中获取到有价值的信息。在大数据的大量复杂的数据之中，通常不仅仅包含真实的数据，一些虚假的数据也混杂其中。这就需要在大数据的处理中将虚假的数据剔除，利用真实的数据来分析得出真实的结果。</p>
]]>
    
    </summary>
    
      <category term="Hadoop" scheme="http://arccode.net/tags/Hadoop/"/>
    
      <category term="Storm" scheme="http://arccode.net/tags/Storm/"/>
    
      <category term="Spark" scheme="http://arccode.net/tags/Spark/"/>
    
      <category term="数据挖掘" scheme="http://arccode.net/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[tar命令详解]]></title>
    <link href="http://arccode.net/2014/07/12/tar%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/"/>
    <id>http://arccode.net/2014/07/12/tar命令详解/</id>
    <published>2014-07-12T14:54:11.000Z</published>
    <updated>2015-04-18T09:19:19.000Z</updated>
    <content type="html"><![CDATA[<h2 id="语法">语法</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">tar {-c | -r | -t | -x | -f} {fileName} [fileList]</div><div class="line">  </div><div class="line">  -<span class="ruby"><span class="symbol">c:</span> 创建一个.tar文件</span></div><div class="line">  -<span class="ruby"><span class="symbol">r:</span> 在.tar中添加额外的文件</span></div><div class="line">  -<span class="ruby"><span class="symbol">t:</span> 显示.tar中的文件列表</span></div><div class="line">  -<span class="ruby"><span class="symbol">x:</span> 提取.tar中的文件到当前目录</span></div><div class="line">  -<span class="ruby"><span class="symbol">f:</span> 指定文件路径</span></div><div class="line">  -<span class="ruby"><span class="symbol">z:</span> 以gzip方式解压当前文件</span></div></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="示例">示例</h2>
<ul>
<li><p>创建<code>test.tar</code>文件,内部包含1.txt、2.txt文件</p>
<p>tar -cf test.tar 1.txt 2.txt</p>
</li>
<li><p>向<code>test.tar</code>文件中继续添加文件（3.txt）</p>
<p>tar -rf test.tar 3.txt</p>
</li>
<li><p>列出<code>test.tar</code>文件中文件列表</p>
<p>tar -tf test.tar</p>
</li>
<li><p>提取<code>test.tar</code>文件中的文件到当前目录</p>
<p>tar -xf test.tar</p>
</li>
<li><p>压缩<code>test.tar</code>文件，产生<code>test.tar.gz</code>文件</p>
<p>gzip test.tar</p>
</li>
<li><p>解压<code>test.tar.gz</code>文件中的文件到当前目录</p>
<p>tar -xzf test.tar.gz</p>
</li>
</ul>
<h2 id="指令参考">指令参考</h2>
<p><code>man tar</code></p>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://blog.csdn.net/ericbaner/article/details/3966741" target="_blank" rel="external">Linux tar命令使用详解</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="语法">语法</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">tar {-c | -r | -t | -x | -f} {fileName} [fileList]</div><div class="line">  </div><div class="line">  -<span class="ruby"><span class="symbol">c:</span> 创建一个.tar文件</span></div><div class="line">  -<span class="ruby"><span class="symbol">r:</span> 在.tar中添加额外的文件</span></div><div class="line">  -<span class="ruby"><span class="symbol">t:</span> 显示.tar中的文件列表</span></div><div class="line">  -<span class="ruby"><span class="symbol">x:</span> 提取.tar中的文件到当前目录</span></div><div class="line">  -<span class="ruby"><span class="symbol">f:</span> 指定文件路径</span></div><div class="line">  -<span class="ruby"><span class="symbol">z:</span> 以gzip方式解压当前文件</span></div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
      <category term="Linux" scheme="http://arccode.net/tags/Linux/"/>
    
      <category term="指令" scheme="http://arccode.net/categories/%E6%8C%87%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac下使用IE]]></title>
    <link href="http://arccode.net/2014/07/08/Mac%E4%B8%8B%E4%BD%BF%E7%94%A8IE/"/>
    <id>http://arccode.net/2014/07/08/Mac下使用IE/</id>
    <published>2014-07-08T09:33:42.000Z</published>
    <updated>2015-02-25T15:35:59.000Z</updated>
    <content type="html"><![CDATA[<p>如何在Mac上使用IE？</p>
<ol>
<li>点击<a href="https://www.modern.ie/en-us/virtualization-tools#downloads" target="_blank" rel="external">modern.IE</a>，选择要下载的版本，点击<code>Grab them all with cURL</code>获取下载的URL，例如<br><img src="/images/modern_IE_page.png" alt=""></li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -<span class="keyword">O</span> -L <span class="string">"https://www.modern.ie/vmdownload?platform=mac&virtPlatform=virtualbox&browserOS=IE10-Win8.1&parts=5&filename=VMBuild_20131127/VirtualBox/IE10_Win8/Mac/IE10.Win8.For.MacVirtualBox.part{1.sfx,2.rar,3.rar,4.rar,5.rar}"</span></div></pre></td></tr></table></figure>

<ol>
<li><code>$ cd ~/Downloads/VisualBox_IE</code>，切换到保存文件的目录；</li>
</ol>
<a id="more"></a>

<ol>
<li>执行获取的URL</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -<span class="keyword">O</span> -L <span class="string">"https://www.modern.ie/vmdownload?platform=mac&virtPlatform=virtualbox&browserOS=IE10-Win8.1&parts=5&filename=VMBuild_20131127/VirtualBox/IE10_Win8/Mac/IE10.Win8.For.MacVirtualBox.part{1.sfx,2.rar,3.rar,4.rar,5.rar}"</span></div></pre></td></tr></table></figure>

<ol>
<li><code>$ chmod +x ./IE11.Win7.For.MacVirtualBox.part1.sfx</code></li>
<li><code>$ ./chmod +x ./IE11.Win7.For.MacVirtualBox.part1.sfx</code><br><img src="/images/modern_IE_page_uncompress.png" alt=""></li>
<li>双击<code>IE11 - Win7.ova</code>，并配置内存<br><img src="/images/modern_IE_page_config_1.png" alt=""></li>
<li>完成<br><img src="/images/modern_IE_page_welcome.png" alt=""></li>
</ol>
<p>另一种方式：<a href="http://osxdaily.com/2011/09/04/internet-explorer-for-mac-ie7-ie8-ie-9-free/" target="_blank" rel="external">Mac安装IE 方法二</a>,使用到googlecode需要使用代理。</p>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://webees.me/installing-virtualbox-for-mac-and-set-up-modern-ie/" target="_blank" rel="external">Mac安装IE 方法一</a><br><a href="http://osxdaily.com/2011/09/04/internet-explorer-for-mac-ie7-ie8-ie-9-free/" target="_blank" rel="external">Mac安装IE 方法二</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>如何在Mac上使用IE？</p>
<ol>
<li>点击<a href="https://www.modern.ie/en-us/virtualization-tools#downloads" target="_blank" rel="external">modern.IE</a>，选择要下载的版本，点击<code>Grab them all with cURL</code>获取下载的URL，例如<br><img src="/images/modern_IE_page.png" alt=""></li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -<span class="keyword">O</span> -L <span class="string">"https://www.modern.ie/vmdownload?platform=mac&virtPlatform=virtualbox&browserOS=IE10-Win8.1&parts=5&filename=VMBuild_20131127/VirtualBox/IE10_Win8/Mac/IE10.Win8.For.MacVirtualBox.part{1.sfx,2.rar,3.rar,4.rar,5.rar}"</span></div></pre></td></tr></table></figure>

<ol>
<li><code>$ cd ~/Downloads/VisualBox_IE</code>，切换到保存文件的目录；</li>
</ol>
]]>
    
    </summary>
    
      <category term="Mac" scheme="http://arccode.net/tags/Mac/"/>
    
      <category term="VitualBox" scheme="http://arccode.net/tags/VitualBox/"/>
    
      <category term="工具" scheme="http://arccode.net/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浅谈W3C标准]]></title>
    <link href="http://arccode.net/2014/07/08/%E6%B5%85%E8%B0%88W3C%E6%A0%87%E5%87%86/"/>
    <id>http://arccode.net/2014/07/08/浅谈W3C标准/</id>
    <published>2014-07-08T07:46:29.000Z</published>
    <updated>2015-02-25T15:30:36.000Z</updated>
    <content type="html"><![CDATA[<p>W3C标准涉及多个方面，官方标准点击<a href="http://www.w3.org/standards/" target="_blank" rel="external">这里</a>。从WEB技术应用角度看，可分为三个方面的标准：<strong>结构</strong>、<strong>表现</strong>、<strong>行为</strong>。</p>
<ul>
<li><code>结构</code>主要指HTML/XHTML标准，包括页面渲染、标签大小写、属性大小写、标签嵌套、闭合标签等等；</li>
<li><code>表现</code>主要指CSS标准，包括页面布局、CSS选择器、盒子模型、盒子样式、盒子内容样式、媒体查询（CSS3）；</li>
<li><code>行为</code>主要指Javascript标准，包括对DOM及BOM的操作；</li>
</ul>
<a id="more"></a>

<h2 id="兼容性">兼容性</h2>
<p>由于IE6、IE7、IE8未完全按照W3C标准去实现其浏览器的功能，而是自定义了一套IE的标准，所以在开发的过程中需要特意针对IE6~IE8开发相对应的CSS及Javascript。</p>
<ul>
<li><code>CSS兼容：</code>使用hack；</li>
<li><code>Javascript兼容：</code>IE事件绑定采用attachEvent，现代浏览器采用addEventListener；</li>
</ul>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://www.cnblogs.com/p2227/p/3583601.html" target="_blank" rel="external">浅谈W3C标准</a><br><a href="http://www.w3.org/standards/" target="_blank" rel="external">W3C STANDARDS</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>W3C标准涉及多个方面，官方标准点击<a href="http://www.w3.org/standards/" target="_blank" rel="external">这里</a>。从WEB技术应用角度看，可分为三个方面的标准：<strong>结构</strong>、<strong>表现</strong>、<strong>行为</strong>。</p>
<ul>
<li><code>结构</code>主要指HTML/XHTML标准，包括页面渲染、标签大小写、属性大小写、标签嵌套、闭合标签等等；</li>
<li><code>表现</code>主要指CSS标准，包括页面布局、CSS选择器、盒子模型、盒子样式、盒子内容样式、媒体查询（CSS3）；</li>
<li><code>行为</code>主要指Javascript标准，包括对DOM及BOM的操作；</li>
</ul>
]]>
    
    </summary>
    
      <category term="HTML" scheme="http://arccode.net/tags/HTML/"/>
    
      <category term="CSS" scheme="http://arccode.net/tags/CSS/"/>
    
      <category term="Javascript" scheme="http://arccode.net/tags/Javascript/"/>
    
      <category term="Web" scheme="http://arccode.net/categories/Web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[进程和线程]]></title>
    <link href="http://arccode.net/2014/07/06/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/"/>
    <id>http://arccode.net/2014/07/06/进程和线程/</id>
    <published>2014-07-06T13:41:01.000Z</published>
    <updated>2015-02-25T15:29:57.000Z</updated>
    <content type="html"><![CDATA[<h2 id="进程">进程</h2>
<p>并发执行的程序在执行过程中对资源（CPU、寄存器、IO、程序数据）分配和管理的基本单位；</p>
<h3 id="进程状态">进程状态</h3>
<ul>
<li>初始态</li>
<li>就绪态：就绪态的进程已经获得除CPU之外的其它资源，只要由调度获得处理机，便可立即执行；该状态可细分为内存就绪和外存就绪；</li>
<li>运行态：运行态可细分为用户执行状态和系统执行状态；</li>
<li>阻塞态：阻塞态可细分为内存阻塞、设备阻塞、文件阻塞、网络阻塞、数据阻塞等等；</li>
<li>终止态</li>
</ul>
<p><strong> 注：</strong> 进程状态对就绪态、运行态、阻塞态进行了细分，其目的均是为了更好的控制程序，但这是以增加系统复杂性和系统开销为代价；</p>
<a id="more"></a>

<h3 id="进程状态图">进程状态图</h3>
<p><img src="/images/进程状态转换图.png" alt="" title="进程状态转换图"> </p>
<h2 id="线程">线程</h2>
<p>轻量级进程，创建及销毁开销小。</p>
<h3 id="线程状态图">线程状态图</h3>
<p><img src="/images/线程状态转换图.png" alt="" title="线程状态转换图"></p>
<h2 id="参考资料">参考资料</h2>
<p><a href="http://www.amazon.cn/%E6%99%AE%E9%80%9A%E9%AB%98%E7%AD%89%E6%95%99%E8%82%B2-%E5%9B%BD%E5%AE%B6%E7%BA%A7%E8%A7%84%E5%88%92%E6%95%99%E6%9D%90%E2%80%A2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E5%88%97%E6%95%99%E6%9D%90-%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%95%99%E7%A8%8B-%E5%BC%A0%E5%B0%A7%E5%AD%A6/dp/B008KWW5GC/ref=sr_1_11?ie=UTF8&amp;qid=1404714975&amp;sr=8-11&amp;keywords=%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%89%E7%89%88" target="_blank" rel="external">计算机操作系统教程（第三版）</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="进程">进程</h2>
<p>并发执行的程序在执行过程中对资源（CPU、寄存器、IO、程序数据）分配和管理的基本单位；</p>
<h3 id="进程状态">进程状态</h3>
<ul>
<li>初始态</li>
<li>就绪态：就绪态的进程已经获得除CPU之外的其它资源，只要由调度获得处理机，便可立即执行；该状态可细分为内存就绪和外存就绪；</li>
<li>运行态：运行态可细分为用户执行状态和系统执行状态；</li>
<li>阻塞态：阻塞态可细分为内存阻塞、设备阻塞、文件阻塞、网络阻塞、数据阻塞等等；</li>
<li>终止态</li>
</ul>
<p><strong> 注：</strong> 进程状态对就绪态、运行态、阻塞态进行了细分，其目的均是为了更好的控制程序，但这是以增加系统复杂性和系统开销为代价；</p>
]]>
    
    </summary>
    
      <category term="进程" scheme="http://arccode.net/tags/%E8%BF%9B%E7%A8%8B/"/>
    
      <category term="线程" scheme="http://arccode.net/tags/%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="操作系统" scheme="http://arccode.net/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[序]]></title>
    <link href="http://arccode.net/2014/07/01/%E5%BA%8F/"/>
    <id>http://arccode.net/2014/07/01/序/</id>
    <published>2014-07-01T14:57:07.000Z</published>
    <updated>2015-02-25T15:31:05.000Z</updated>
    <content type="html"><![CDATA[<h2 id="个人博客">个人博客</h2>
<p>问：为什么要搭建博客？</p>
<p>答：记录自己在IT这个行业中的点滴，同时把自己的一些东西分享给各位朋友。</p>
<p>问：为什么不选择已有的博客平台，而要自己搭建？</p>
<p>答：想让事情变得简单点，有想法或解决了一些问题的时候，用<a href="http://wowubuntu.com/markdown/#philosophy" target="_blank" rel="external">Markdown</a>记录一下。</p>
<p>问：……？</p>
<p>答：…………。</p>
<p>问： 你的声音太小，我没听清楚呀。</p>
<p>答： 噢，我给你留言并发送邮件吧，我的Email：<a href="&#109;&#97;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x61;&#x72;&#99;&#x63;&#x6f;&#100;&#x65;&#x40;&#49;&#x36;&#51;&#46;&#99;&#111;&#109;">&#x61;&#x72;&#99;&#x63;&#x6f;&#100;&#x65;&#x40;&#49;&#x36;&#51;&#46;&#99;&#111;&#109;</a>。</p>
<a id="more"></a>



]]></content>
    <summary type="html">
    <![CDATA[<h2 id="个人博客">个人博客</h2>
<p>问：为什么要搭建博客？</p>
<p>答：记录自己在IT这个行业中的点滴，同时把自己的一些东西分享给各位朋友。</p>
<p>问：为什么不选择已有的博客平台，而要自己搭建？</p>
<p>答：想让事情变得简单点，有想法或解决了一些问题的时候，用<a href="http://wowubuntu.com/markdown/#philosophy" target="_blank" rel="external">Markdown</a>记录一下。</p>
<p>问：……？</p>
<p>答：…………。</p>
<p>问： 你的声音太小，我没听清楚呀。</p>
<p>答： 噢，我给你留言并发送邮件吧，我的Email：<a href="&#109;&#97;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x61;&#x72;&#99;&#x63;&#x6f;&#100;&#x65;&#x40;&#49;&#x36;&#51;&#46;&#99;&#111;&#109;">&#x61;&#x72;&#99;&#x63;&#x6f;&#100;&#x65;&#x40;&#49;&#x36;&#51;&#46;&#99;&#111;&#109;</a>。</p>
]]>
    
    </summary>
    
      <category term="随笔" scheme="http://arccode.net/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="随笔" scheme="http://arccode.net/categories/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
